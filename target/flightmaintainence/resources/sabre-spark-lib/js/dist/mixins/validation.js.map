{"version":3,"sources":["mixins/validation.js"],"names":["validate","validatePattern","onValidate","re","RegExp","test","getValue"],"mappings":";;;;;AAAA;;;;;;;;;;kBAUe;;AAEb;;;;;AAKAA,UAPa,sBAOF;;AAET,QAAIA,WAAW,KAAKC,eAApB;;AAEA;AACA,QAAI,CAAC,KAAKC,UAAN,IAAoB,CAACF,QAAzB,EAAmC;AACjC,aAAO,IAAP;AACD;;AAED,QAAIG,KAAK,IAAIC,MAAJ,CAAWJ,QAAX,CAAT;;AAEA,SAAKE,UAAL,CAAgBC,GAAGE,IAAH,CAAQ,KAAKC,QAAL,EAAR,CAAhB,EAA0C,KAAKA,QAAL,EAA1C,EAA2D,IAA3D;;AAEA,WAAO,IAAP;AACD;AArBY,C","file":"validation.js","sourcesContent":["/**\n * # Validation Mixin\n * Add functionality for validating a form field's value.\n *\n * @example\n * mixin(Component, validation);\n *\n * @module mixin/validation.js\n */\n\nexport default {\n\n  /**\n   * Default validate function. This can be overridden by passing a\n   * custom validate method as a parameter. This really only helps out\n   * of the box for text inputs.\n   */\n  validate() {\n\n    var validate = this.validatePattern;\n\n    // Nothing to validate.\n    if (!this.onValidate || !validate) {\n      return this;\n    }\n\n    var re = new RegExp(validate);\n\n    this.onValidate(re.test(this.getValue()), this.getValue(), this);\n\n    return this;\n  }\n};\n"]}