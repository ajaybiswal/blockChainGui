{"version":3,"sources":["mixins/messaging.js"],"names":["setError","message","_isMessageVisible","_showMessage","clearWarning","clearSuccess","el","setAttribute","setMessage","clearError","removeAttribute","setWarning","setSuccess","clearMessages","_hideMessage","bind","messageEl","innerHTML","parentNode","appendChild","toggleEl","callback","toggleValue","action","onComplete","getAttribute"],"mappings":"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","file":"messaging.js","sourcesContent":["/**\n * # Messaging Mixin\n * Add functionality for showing messages related to a form field.\n *\n * @example\n * mixin(Component, messaging);\n *\n * @module mixin/messaging.js\n */\nimport animateHeight from '../helpers/animation/height';\n\nexport default {\n\n  /**\n   * Set the error state.\n   * @param {String} message Optional\n   */\n  setError(message) {\n\n    // Animate down\n    if (!this._isMessageVisible()) {\n      this._showMessage();\n    }\n\n    this.clearWarning();\n    this.clearSuccess();\n\n    this.el.setAttribute('data-error', true);\n\n    if (message) {\n      this.setMessage(message);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Set the error state.\n   */\n  clearError() {\n    this.el.removeAttribute('data-error', true);\n    return this;\n  },\n\n\n  /**\n   * Set the warning state.\n   * @param {String} message Optional\n   */\n  setWarning(message) {\n\n    // Animate down\n    if (!this._isMessageVisible()) {\n      this._showMessage();\n    }\n\n    this.clearError();\n    this.clearSuccess();\n\n    this.el.setAttribute('data-warning', true);\n\n    if (message) {\n      this.setMessage(message);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Set the error state.\n   */\n  clearWarning() {\n    this.el.removeAttribute('data-warning', true);\n    return this;\n  },\n\n\n  /**\n   * Set the success state.\n   * @param {String} message Optional\n   */\n  setSuccess(message) {\n\n    // Animate down\n    if (!this._isMessageVisible()) {\n      this._showMessage();\n    }\n\n    this.clearError();\n    this.clearWarning();\n\n    this.el.setAttribute('data-success', true);\n\n    if (message) {\n      this.setMessage(message);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Set the success state.\n   */\n  clearSuccess() {\n    this.el.removeAttribute('data-success', true);\n    return this;\n  },\n\n\n  /**\n   * Clear all messages.\n   */\n  clearMessages() {\n    this._hideMessage(function() {\n      this.clearError();\n      this.clearWarning();\n      this.clearSuccess();\n    }.bind(this));\n    return this;\n  },\n\n\n  /**\n   * Set the message text.\n   * @param {String} message\n   */\n  setMessage(message) {\n    this.messageEl.innerHTML = message;\n    return this;\n  },\n\n\n  /**\n   * Show the message\n   */\n  _showMessage() {\n\n    if (!this.messageEl.parentNode) {\n      this.el.appendChild(this.messageEl);\n    }\n\n    animateHeight({\n      el: this.el,\n      toggleEl: this.messageEl\n    });\n  },\n\n\n  /**\n   * Hide the message.\n   * @param {Function} callback\n   */\n  _hideMessage(callback) {\n\n    animateHeight({\n      el: this.el,\n      toggleEl: this.messageEl,\n      toggleValue: 'none',\n      action: 'collapse',\n      onComplete: callback\n    });\n  },\n\n\n  /**\n   * Is the message currently visible?\n   * @return {Boolean}\n   */\n  _isMessageVisible() {\n    return this.el.getAttribute('data-error') || this.el.getAttribute('data-warning') || this.el.getAttribute('data-success');\n  }\n};\n"]}