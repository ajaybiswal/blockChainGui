{"version":3,"sources":["helpers/dom/add-class.js"],"names":["ws","cleanup","addClass","el","name","arguments","length","split","Array","prototype","slice","call","classList","add","toAdd","i","l","item","clsName","className","getAttribute","push","join","replace","setAttribute"],"mappings":";;;;;;AAWA;;;;AACA;;;;;;AAZA;;;;;;;;;;;AAcA,IAAIA,KAAK,KAAT;AACA,IAAIC,UAAU,SAAd;;AAEA,SAASC,QAAT,CAAkBC,EAAlB,EAAsBC,IAAtB,EAA4B;;AAE1B,MAAIC,UAAUC,MAAV,KAAqB,CAArB,IAA0B,OAAOF,IAAP,KAAgB,QAA9C,EAAwD;AACtDA,WAAO,oBAAKA,IAAL,EAAWG,KAAX,CAAiBP,EAAjB,CAAP;AACD,GAFD,MAGK;AACHI,WAAOA,gBAAgBI,KAAhB,GAAwBJ,IAAxB,GAA+BI,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,SAA3B,EAAsC,CAAtC,CAAtC;AACD;;AAED;AACA,MAAID,KAAKE,MAAL,KAAgB,CAAhB,IAAqBH,GAAGS,SAA5B,EAAuC;AACrC,QAAIR,KAAK,CAAL,CAAJ,EAAa;AACXD,SAAGS,SAAH,CAAaC,GAAb,CAAiBT,KAAK,CAAL,CAAjB;AACD;AACD,WAAOD,EAAP;AACD;;AAED,MAAIW,QAAQ,EAAZ;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAIZ,KAAKE,MAAb;AACA,MAAIW,aAAJ;AACA,MAAIC,UAAU,OAAOf,GAAGgB,SAAV,KAAwB,QAAxB,GAAmChB,GAAGgB,SAAtC,GAAmDhB,GAAGiB,YAAH,GAAkBjB,GAAGiB,YAAH,CAAgB,OAAhB,CAAlB,GAA6C,EAA9G;;AAEA;AACA,SAAOL,IAAIC,CAAX,EAAcD,GAAd,EAAmB;AACjBE,WAAOb,KAAKW,CAAL,CAAP;AACA,QAAIE,QAAQ,CAAC,wBAASC,OAAT,EAAkBD,IAAlB,CAAb,EAAsC;AACpCH,YAAMO,IAAN,CAAWJ,IAAX;AACD;AACF;;AAED,MAAIH,MAAMR,MAAV,EAAkB;AAChB,QAAI,OAAOH,GAAGgB,SAAV,KAAwB,QAA5B,EAAsC;AACpChB,SAAGgB,SAAH,GAAe,oBAAK,CAACD,UAAU,GAAV,GAAgBJ,MAAMQ,IAAN,CAAW,GAAX,CAAjB,EAAkCC,OAAlC,CAA0CtB,OAA1C,EAAmD,GAAnD,CAAL,CAAf;AACD,KAFD,MAGK,IAAIE,GAAGqB,YAAP,EAAqB;AACxBrB,SAAGqB,YAAH,CAAgB,OAAhB,EAAyB,oBAAK,CAACN,UAAU,GAAV,GAAgBJ,MAAMQ,IAAN,CAAW,GAAX,CAAjB,EAAkCC,OAAlC,CAA0CtB,OAA1C,EAAmD,GAAnD,CAAL,CAAzB;AACD;AACF;;AAED,SAAOE,EAAP;AACD;;kBAEcD,Q","file":"add-class.js","sourcesContent":["/**\n * # Add Class\n * Add a class on an element.\n *\n * @param {Element|Array} el An element or array of elements to update.\n * @param {String} name\n * @return {Element}\n *\n * @module helpers/dom/add-class.js\n */\n\nimport trim from '../util/trim';\nimport hasClass from './has-class';\n\nlet ws = /\\s+/;\nlet cleanup = /\\s{2,}/g;\n\nfunction addClass(el, name) {\n\n  if (arguments.length === 2 && typeof name === 'string') {\n    name = trim(name).split(ws);\n  }\n  else {\n    name = name instanceof Array ? name : Array.prototype.slice.call(arguments, 1);\n  }\n\n  // optimize for best, most common case\n  if (name.length === 1 && el.classList) {\n    if (name[0]) {\n      el.classList.add(name[0]);\n    }\n    return el;\n  }\n\n  let toAdd = [];\n  let i = 0;\n  let l = name.length;\n  let item;\n  let clsName = typeof el.className === 'string' ? el.className : (el.getAttribute ? el.getAttribute('class') : '');\n\n  // see if we have anything to add\n  for (; i < l; i++) {\n    item = name[i];\n    if (item && !hasClass(clsName, item)) {\n      toAdd.push(item);\n    }\n  }\n\n  if (toAdd.length) {\n    if (typeof el.className === 'string') {\n      el.className = trim((clsName + ' ' + toAdd.join(' ')).replace(cleanup, ' '));\n    }\n    else if (el.setAttribute) {\n      el.setAttribute('class', trim((clsName + ' ' + toAdd.join(' ')).replace(cleanup, ' ')));\n    }\n  }\n\n  return el;\n}\n\nexport default addClass;\n"]}