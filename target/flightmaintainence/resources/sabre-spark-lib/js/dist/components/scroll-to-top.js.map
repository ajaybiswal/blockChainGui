{"version":3,"sources":["components/scroll-to-top.js"],"names":["noop","canObserve","MutationObserver","ScrollToTop","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","_cacheSizes","_clearRecomputeDebounced","_clearRecompute","bind","_recomputeDebounced","_recompute","_checkScrollPosition","scrollToTop","callback","scrollToEl","update","_removeEventListeners","_cacheElements","containerEl","parentNode","containerOffset","windowWidth","document","body","clientWidth","windowHeight","window","innerHeight","containerOffsetTop","top","containerOffsetLeft","left","containerOffsetRight","offsetWidth","_windowHeight","_containerBottom","offsetHeight","_visibleThreshold","isAtBottom","_isAtBottom","_right","_updateBindings","offsetLeft","isVisible","_isVisible","scrollTop","scrollY","pageYOffset","bottomThreshold","style","right","_onClickBound","_onClick","_onScrollBound","_onScroll","_onResizeBound","_onResize","_onVisibleBound","_onVisible","_onMutateBound","_onMutate","addEventListener","_addMutationObserver","removeEventListener","_removeMutationObserver","_observer","observe","childList","attributes","characterData","subtree","disconnect","_recomputeThrottled","_recomputeRun","e","target","contains","setTimeout","mutations","m","prototype","_whitelistedParams","defaults"],"mappings":";;;;;;AASA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAdA;;;;;;;;;;;AAgBA,IAAMA,OAAO,SAAPA,IAAO,GAAW,CAAE,CAA1B;AACA,IAAMC,aAAa,OAAOC,gBAAP,KAA4B,WAA5B,GAA0C,IAA1C,GAAiD,KAApE;;IAEMC,W;;;AAEJ;;;;;AAKA,uBAAYC,EAAZ,EAA6B;AAAA;;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AAE3BA,WAAOC,UAAP,GAAoB,IAApB;;AAEA,QAAI,2CAAC,0BAAMF,EAAN,EAAUC,MAAV,CAAD,SAAJ,EAAwB;AACtB;AACD;;AAED,UAAKE,2BAAL;AACA,UAAKC,kBAAL;AACA,UAAKC,WAAL;;AAEA,UAAKC,wBAAL,GAAgC,wBAAS,MAAKC,eAAL,CAAqBC,IAArB,OAAT,EAA0C,EAA1C,CAAhC;AACA,UAAKC,mBAAL,GAA2B,wBAAS,MAAKC,UAAL,CAAgBF,IAAhB,OAAT,EAAqC,EAArC,CAA3B;;AAEA,UAAKG,oBAAL;AAf2B;AAgB5B;;AAGD;;;;;;wBAIAC,W,wBAAYC,Q,EAAU;AACpB,4BAAS,KAAKC,UAAL,IAAmB,CAA5B,EAA+B;AAC7BD,gBAAUA,YAAYjB;AADO,KAA/B;AAGA,WAAO,IAAP;AACD,G;;AAGD;;;;;;;wBAKAmB,M,mBAAOf,E,EAAI;;AAET,SAAKgB,qBAAL;AACA,SAAKC,cAAL,CAAoBjB,EAApB;AACA,SAAKI,kBAAL;AACA,SAAKC,WAAL;AACA,SAAKM,oBAAL;;AAEA,WAAO,IAAP;AACD,G;;AAGD;;;;;;wBAIAM,c,2BAAejB,E,EAAI;AACjB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKkB,WAAL,GAAmB,KAAKA,WAAL,IAAoBlB,GAAGmB,UAA1C;AACD,G;;AAGD;;;;;wBAGAd,W,0BAAc;;AAEZ,QAAIe,kBAAkB,sBAAO,KAAKF,WAAZ,CAAtB;AACA,QAAIG,cAAcC,SAASC,IAAT,CAAcC,WAAhC;AACA,QAAIC,eAAeC,OAAOC,WAA1B;AACA,QAAIC,qBAAqBR,gBAAgBS,GAAzC;AACA,QAAIC,sBAAsBV,gBAAgBW,IAA1C;AACA,QAAIC,uBAAuBX,cAAcS,mBAAd,GAAoC,KAAKZ,WAAL,CAAiBe,WAAhF;;AAEA,SAAKC,aAAL,GAAqBT,YAArB;AACA,SAAKU,gBAAL,GAAwB,KAAKjB,WAAL,CAAiBkB,YAAjB,GAAgCR,kBAAxD;AACA,SAAKS,iBAAL,GAAyBT,qBAAqBH,eAAe,GAA7D;;AAEA;AACA,QAAIa,aAAa,KAAKC,WAAtB;AACA,SAAKA,WAAL,GAAmB,KAAnB;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,eAAL;;AAEA;AACA,SAAKD,MAAL,GAAenB,cAAc,KAAKrB,EAAL,CAAQ0C,UAAtB,GAAmC,KAAK1C,EAAL,CAAQiC,WAA5C,GAA2DD,oBAAzE;AACA,SAAKO,WAAL,GAAmBD,UAAnB;AACA,SAAKG,eAAL;AACD,G;;AAGD;;;;;;;wBAKA9B,oB,mCAAuB;;AAErB,QAAIgC,YAAY,KAAKC,UAArB;AACA,QAAIN,aAAa,KAAKC,WAAtB;AACA,QAAIM,YAAY,OAAOnB,OAAOoB,OAAd,KAA0B,WAA1B,GAAwCpB,OAAOoB,OAA/C,GAAyDpB,OAAOqB,WAAhF;AACA,QAAIC,kBAAkBH,YAAY,KAAKX,aAAvC;;AAEA,SAAKU,UAAL,GAAkBC,YAAY,KAAKX,aAAjB,IAAkC,KAAKG,iBAAvC,GAA2D,IAA3D,GAAkE,KAApF;AACA,SAAKE,WAAL,GAAmB,KAAKJ,gBAAL,IAAyBa,eAAzB,GAA2C,IAA3C,GAAkD,KAArE;;AAEA,QAAI,KAAKT,WAAL,KAAqBD,UAArB,IAAmC,KAAKM,UAAL,KAAoBD,SAA3D,EAAsE;AACpE,WAAKF,eAAL;AACD;AACF,G;;AAGD;;;;;wBAGAA,e,8BAAkB;AAChB,+BAAY,KAAKzC,EAAjB,EAAqB,SAArB,EAAgC,KAAK4C,UAArC;AACA,+BAAY,KAAK5C,EAAjB,EAAqB,WAArB,EAAkC,KAAKuC,WAAvC;AACA,SAAKvC,EAAL,CAAQiD,KAAR,CAAcC,KAAd,GAAsB,KAAKX,WAAL,IAAoB,CAAC,KAAKC,MAA1B,GAAmC,EAAnC,GAAwC,KAAKA,MAAL,GAAc,IAA5E;AACD,G;;AAGD;;;;;;;wBAKArC,2B,0CAA8B;AAC5B,SAAKgD,aAAL,GAAqB,KAAKC,QAAL,CAAc5C,IAAd,CAAmB,IAAnB,CAArB;AACA,SAAK6C,cAAL,GAAsB,KAAKC,SAAL,CAAe9C,IAAf,CAAoB,IAApB,CAAtB;AACA,SAAK+C,cAAL,GAAsB,KAAKC,SAAL,CAAehD,IAAf,CAAoB,IAApB,CAAtB;AACA,SAAKiD,eAAL,GAAuB,KAAKC,UAAL,CAAgBlD,IAAhB,CAAqB,IAArB,CAAvB;AACA,SAAKmD,cAAL,GAAsB,KAAKC,SAAL,CAAepD,IAAf,CAAoB,IAApB,CAAtB;AACD,G;;AAGD;;;;;wBAGAJ,kB,iCAAqB;;AAEnB,SAAKJ,EAAL,CAAQ6D,gBAAR,CAAyB,OAAzB,EAAkC,KAAKV,aAAvC;AACAzB,WAAOmC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKR,cAAvC;AACA3B,WAAOmC,gBAAP,CAAwB,mBAAxB,EAA6C,KAAKR,cAAlD;AACA/B,aAASuC,gBAAT,CAA0B,wBAA1B,EAAoD,KAAKJ,eAAzD,EAA0E,IAA1E;;AAEA,QAAI5D,UAAJ,EACE,KAAKiE,oBAAL,GADF,KAGEpC,OAAOmC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,cAAvC,EAAuD,KAAvD;AACH,G;;AAGD;;;;;wBAGAvC,qB,oCAAwB;;AAEtB,SAAKhB,EAAL,CAAQ+D,mBAAR,CAA4B,OAA5B,EAAqC,KAAKZ,aAA1C;AACAzB,WAAOqC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKV,cAA1C;AACA3B,WAAOqC,mBAAP,CAA2B,mBAA3B,EAAgD,KAAKV,cAArD;AACA/B,aAASyC,mBAAT,CAA6B,wBAA7B,EAAuD,KAAKN,eAA5D,EAA6E,IAA7E;;AAEA,QAAI5D,UAAJ,EACE,KAAKmE,uBAAL,GADF,KAGEtC,OAAOqC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,cAA1C;AACH,G;;AAGD;;;;;wBAGAO,oB,mCAAuB;AACrB,SAAKG,SAAL,GAAiB,IAAInE,gBAAJ,CAAqB,KAAK6D,cAA1B,CAAjB;AACA,SAAKM,SAAL,CAAeC,OAAf,CAAuB,KAAKhD,WAA5B,EAAyC,EAACiD,WAAW,IAAZ,EAAkBC,YAAY,IAA9B,EAAoCC,eAAe,IAAnD,EAAyDC,SAAS,IAAlE,EAAzC;AACD,G;;AAGD;;;;;wBAGAN,uB,sCAA0B;AACxB,QAAI,KAAKC,SAAT,EAAoB,KAAKA,SAAL,CAAeM,UAAf;AACrB,G;;AAGD;;;;;wBAGA7D,U,yBAAa;AACX,SAAKL,WAAL;AACA,SAAKM,oBAAL;AACD,G;;AAGD;;;;;wBAGA6D,mB,kCAAsB;;AAEpB,QAAI,CAAC,KAAKC,aAAV,EAAyB;AACvB,WAAK/D,UAAL;AACA,WAAK+D,aAAL,GAAqB,IAArB;AACD;;AAED,SAAKnE,wBAAL;AACD,G;;AAGD;;;;;wBAGAC,e,8BAAkB;AAChB,SAAKkE,aAAL,GAAqB,KAArB;AACD,G;;AAED;;;;;;wBAIAnB,S,wBAAY;AACV,SAAKkB,mBAAL;AACA,SAAK7D,oBAAL;AACD,G;;AAGD;;;;;;wBAIA6C,S,wBAAY;AACV,SAAK/C,mBAAL;AACD,G;;AAGD;;;;;;wBAIA2C,Q,uBAAW;AACT,SAAKxC,WAAL;AACD,G;;AAGD;;;;;;;wBAKA8C,U,uBAAWgB,C,EAAG;AACZ,QAAGA,EAAEC,MAAF,CAASC,QAAT,CAAkB,KAAK5E,EAAvB,CAAH,EAA+B;AAC7B0B,aAAOmD,UAAP,CAAkB,YAAW;AAC3B,aAAKxE,WAAL;AACA,aAAKM,oBAAL;AACD,OAHiB,CAGhBH,IAHgB,CAGX,IAHW,CAAlB,EAGa,CAHb;AAID;AACF,G;;AAGD;;;;;wBAGAoD,S,sBAAUkB,S,EAAW;AACnB,wBAAKA,SAAL,EAAgB,UAASC,CAAT,EAAY;AAC1B,UAAIA,EAAEJ,MAAF,KAAa,KAAK3E,EAAtB,EAA0B,KAAKS,mBAAL;AAC3B,KAFe,CAEdD,IAFc,CAET,IAFS,CAAhB;AAGD,G;;;;;AAIH;;;;;;AAIAT,YAAYiF,SAAZ,CAAsBC,kBAAtB,GAA2C,CAAC,aAAD,EAAgB,YAAhB,CAA3C;;AAGA;;;;;;AAMAlF,YAAYiF,SAAZ,CAAsBE,QAAtB,GAAiC;AAC/BlF,MAAI,IAD2B;AAE/BkB,eAAa,IAFkB;AAG/BJ,cAAY,IAHmB;AAI/B8B,cAAY,KAJmB;AAK/BL,eAAa,KALkB;AAM/BJ,oBAAkB,CANa;AAO/BE,qBAAmB,CAPY;AAQ/BH,iBAAe,CARgB;AAS/BM,UAAQ,CATuB;AAU/BiC,iBAAe,KAVgB;AAW/BR,aAAW,IAXoB;AAY/Bd,iBAAe,IAZgB;AAa/BE,kBAAgB,IAbe;AAc/BI,mBAAiB,IAdc;AAe/BF,kBAAgB,IAfe;AAgB/BI,kBAAgB;AAhBe,CAAjC;;kBAmBe5D,W","file":"scroll-to-top.js","sourcesContent":["/**\n * # Scroll To Top\n * Provide a way to scroll back to the top of a component.\n *\n * @example\n * new ScrollToTop(el);\n *\n * @module components/scroll-to-top.js\n */\nimport BaseComponent from './base';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport scrollTo from '../helpers/animation/scroll-to';\nimport offset from '../helpers/dom/offset';\nimport debounce from '../helpers/util/debounce';\nimport each from '../helpers/util/each';\n\nconst noop = function() {};\nconst canObserve = typeof MutationObserver !== 'undefined' ? true : false;\n\nclass ScrollToTop extends BaseComponent {\n\n  /**\n   * ScrollToTop constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n    this._cacheSizes();\n\n    this._clearRecomputeDebounced = debounce(this._clearRecompute.bind(this), 50);\n    this._recomputeDebounced = debounce(this._recompute.bind(this), 50);\n\n    this._checkScrollPosition();\n  }\n\n\n  /**\n   * Scroll to the top of the containing element.\n   * @param {Function} callback\n   */\n  scrollToTop(callback) {\n    scrollTo(this.scrollToEl || 0, {\n      callback: callback || noop\n    });\n    return this;\n  }\n\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    this._removeEventListeners();\n    this._cacheElements(el);\n    this._addEventListeners();\n    this._cacheSizes();\n    this._checkScrollPosition();\n\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the element.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n    this.el = el;\n    this.containerEl = this.containerEl || el.parentNode;\n  }\n\n\n  /**\n   * Cache element sizes.\n   */\n  _cacheSizes() {\n\n    var containerOffset = offset(this.containerEl);\n    var windowWidth = document.body.clientWidth;\n    var windowHeight = window.innerHeight;\n    var containerOffsetTop = containerOffset.top;\n    var containerOffsetLeft = containerOffset.left;\n    var containerOffsetRight = windowWidth - containerOffsetLeft - this.containerEl.offsetWidth;\n\n    this._windowHeight = windowHeight;\n    this._containerBottom = this.containerEl.offsetHeight + containerOffsetTop;\n    this._visibleThreshold = containerOffsetTop + windowHeight * 1.5;\n\n    // Reset button styles\n    var isAtBottom = this._isAtBottom;\n    this._isAtBottom = false;\n    this._right = 0;\n    this._updateBindings();\n\n    // Default right position of the element plus the right edge of the container\n    this._right = (windowWidth - this.el.offsetLeft - this.el.offsetWidth) + containerOffsetRight;\n    this._isAtBottom = isAtBottom;\n    this._updateBindings();\n  }\n\n\n  /**\n   * Check the scroll position. If we're far enough from the top,\n   * make visible. If the bottom of our container element is past the bottom\n   * of the screen, make us fixed.\n   */\n  _checkScrollPosition() {\n\n    var isVisible = this._isVisible;\n    var isAtBottom = this._isAtBottom;\n    var scrollTop = typeof window.scrollY !== 'undefined' ? window.scrollY : window.pageYOffset;\n    var bottomThreshold = scrollTop + this._windowHeight;\n\n    this._isVisible = scrollTop + this._windowHeight >= this._visibleThreshold ? true : false;\n    this._isAtBottom = this._containerBottom <= bottomThreshold ? true : false;\n\n    if (this._isAtBottom !== isAtBottom || this._isVisible !== isVisible) {\n      this._updateBindings();\n    }\n  }\n\n\n  /**\n   * Update bindings.\n   */\n  _updateBindings() {\n    toggleClass(this.el, 'visible', this._isVisible);\n    toggleClass(this.el, 'at-bottom', this._isAtBottom);\n    this.el.style.right = this._isAtBottom || !this._right ? '' : this._right + 'px';\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onClickBound = this._onClick.bind(this);\n    this._onScrollBound = this._onScroll.bind(this);\n    this._onResizeBound = this._onResize.bind(this);\n    this._onVisibleBound = this._onVisible.bind(this);\n    this._onMutateBound = this._onMutate.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n\n    this.el.addEventListener('click', this._onClickBound);\n    window.addEventListener('scroll', this._onScrollBound);\n    window.addEventListener('orientationchange', this._onScrollBound);\n    document.addEventListener('spark.visible-children', this._onVisibleBound, true);\n\n    if (canObserve)\n      this._addMutationObserver();\n    else\n      window.addEventListener('resize', this._onResizeBound, false);\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n\n    this.el.removeEventListener('click', this._onClickBound);\n    window.removeEventListener('scroll', this._onScrollBound);\n    window.removeEventListener('orientationchange', this._onScrollBound);\n    document.removeEventListener('spark.visible-children', this._onVisibleBound, true);\n\n    if (canObserve)\n      this._removeMutationObserver();\n    else\n      window.removeEventListener('resize', this._onResizeBound);\n  }\n\n\n  /**\n   * Setup a mutation observer to know when the DOM has changed so we can recache.\n   */\n  _addMutationObserver() {\n    this._observer = new MutationObserver(this._onMutateBound);\n    this._observer.observe(this.containerEl, {childList: true, attributes: true, characterData: true, subtree: true});\n  }\n\n\n  /**\n   * Remove a mutation observer.\n   */\n  _removeMutationObserver() {\n    if (this._observer) this._observer.disconnect();\n  }\n\n\n  /**\n   * Recompute the position.\n   */\n  _recompute() {\n    this._cacheSizes();\n    this._checkScrollPosition();\n  }\n\n\n  /**\n   * Recompute styles, but only so often.\n   */\n  _recomputeThrottled() {\n\n    if (!this._recomputeRun) {\n      this._recompute();\n      this._recomputeRun = true;\n    }\n\n    this._clearRecomputeDebounced();\n  }\n\n\n  /**\n   * Clear the recompute run state.\n   */\n  _clearRecompute() {\n    this._recomputeRun = false;\n  }\n\n  /**\n   * When the window is scrolled, compute the position of the scroll-to-top.\n   * @param {Object} e\n   */\n  _onScroll() {\n    this._recomputeThrottled();\n    this._checkScrollPosition();\n  }\n\n\n  /**\n   * When the window is resized, re-cache element sizes.\n   * @param {Object} e\n   */\n  _onResize() {\n    this._recomputeDebounced();\n  }\n\n\n  /**\n   * When the button is clicked, scroll to the top.\n   * @param {Object} e\n   */\n  _onClick() {\n    this.scrollToTop();\n  }\n\n\n  /**\n   * When a parent container shows its children and our element\n   * is inside of it, resize\n   * @param  {Object} e\n   */\n  _onVisible(e) {\n    if(e.target.contains(this.el)) {\n      window.setTimeout(function() {\n        this._cacheSizes();\n        this._checkScrollPosition();\n      }.bind(this),0);\n    }\n  }\n\n\n  /**\n   * When the DOM changes, recache our values because we might be in the wrong spot.\n   */\n  _onMutate(mutations) {\n    each(mutations, function(m) {\n      if (m.target !== this.el) this._recomputeDebounced();\n    }.bind(this));\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nScrollToTop.prototype._whitelistedParams = ['containerEl', 'scrollToEl'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nScrollToTop.prototype.defaults = {\n  el: null,\n  containerEl: null,\n  scrollToEl: null,\n  _isVisible: false,\n  _isAtBottom: false,\n  _containerBottom: 0,\n  _visibleThreshold: 0,\n  _windowHeight: 0,\n  _right: 0,\n  _recomputeRun: false,\n  _observer: null,\n  _onClickBound: null,\n  _onScrollBound: null,\n  _onVisibleBound: null,\n  _onResizeBound: null,\n  _onMutateBound: null\n};\n\nexport default ScrollToTop;\n"]}