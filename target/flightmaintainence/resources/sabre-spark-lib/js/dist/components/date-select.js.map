{"version":3,"sources":["components/date-select.js"],"names":["noop","createDefaultElement","el","document","createElement","className","innerHTML","DateSelect","params","HTMLElement","_bindEventListenerCallbacks","_createSelect","getValue","asInt","parseInt","select","setValue","val","clearValue","enable","disable","setOptions","min","max","monthNames","numericMonth","type","i","len","length","opts","push","value","text","setLabel","undefined","_getTypeText","onChange","_onSelectChangeBound","onFocus","_onSelectFocusBound","onBlur","_onSelectBlurBound","querySelector","getAttribute","selectLabel","labelID","ariaLabelPrefix","setAttribute","_cacheElements","selectEl","_parseParams","date","Date","getFullYear","_getDefaultMonthNames","split","getMonthNamesShort","charAt","toUpperCase","slice","_onSelectChange","bind","_onSelectFocus","_onSelectBlur","prototype","_whitelistedParams","defaults","_onChangeBound","_onFocusBound","_onBlurBound"],"mappings":"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","file":"date-select.js","sourcesContent":["/**\n * # DateSelect\n * Create a select list of days, months or years.\n *\n * @example\n * new DateSelect(el);\n *\n * @module components/date-select.js\n */\nimport BaseComponent from './base';\nimport SelectInput from './select-input';\nimport dateHelper from '../helpers/date/date';\nimport {number as parseNumberAttribute, boolean as parseBooleanAttribute, string as parseStringAttribute} from '../helpers/dom/parse-attribute';\n\nconst noop = function() {};\n\nfunction createDefaultElement() {\n  var el = document.createElement('span');\n  el.className = 'spark-select';\n  el.innerHTML = '<select class=\"spark-select__input\"></select><span class=\"spark-label\"></span>';\n  return el;\n}\n\nclass DateSelect extends BaseComponent {\n\n  /**\n   * DateSelect constructor\n   * @param {Element} el Optional\n   * @param {Object} params Optional\n   */\n  constructor (el, params = {}) {\n\n    // If the first argument is a plain object, create a default element\n    // since the user MUST provide additional params but the element\n    // is optional. Doing it this way to keep the arity the same\n    // as other components.\n    if (!(el instanceof HTMLElement)) {\n      params = el || {};\n      el = createDefaultElement();\n    }\n\n    super(el, params);\n\n    this._bindEventListenerCallbacks();\n    this._createSelect(el);\n  }\n\n\n  /**\n   * Get the value.\n   * @param {Boolean} asInt Get the value as a parsed integer.\n   * @return {Mixed}\n   */\n  getValue(asInt) {\n    return asInt ? parseInt(this.select.getValue(), 10) : this.select.getValue();\n  }\n\n\n  /**\n   * Set the value.\n   * @param {Mixed} val\n   */\n  setValue(val) {\n    return this.select.setValue(val);\n  }\n\n\n  /**\n   * Clear the value.\n   */\n  clearValue() {\n    return this.select.clearValue();\n  }\n\n\n  /**\n   * Enable the input.\n   */\n  enable() {\n    return this.select.enable();\n  }\n\n\n  /**\n   * Disable the input.\n   */\n  disable() {\n    return this.select.disable();\n  }\n\n\n  /**\n   * Update the date select's options.\n   * @param {Object|Array} params\n   */\n  setOptions(params) {\n\n    params = params || {};\n\n    this.min = params.min || this.min;\n    this.max = params.max || this.max;\n    this.monthNames = params.monthNames || this.monthNames;\n    this.numericMonth = params.numericMonth || this.numericMonth;\n\n    if (this.type === 'year') {\n      if (params.min && !params.max) {\n        this.max = this.min + 100;\n      }\n      else if (params.max && !params.min) {\n        this.min = this.max - 100;\n      }\n    }\n\n    var i = this.min ? this.min - 1 : 0;\n    var len = this.max || this.monthNames.length;\n    var opts = [{}];\n\n    for (; i < len; i++) {\n      opts.push({\n        value: i + 1,\n        text: this.monthNames ? this.monthNames[i] : i + 1\n      });\n    }\n\n    this.select.setOptions(opts);\n\n    return this;\n  }\n\n\n  /**\n   * Set the label text for the select input.\n   * @param {String} text Optional\n   */\n  setLabel(text) {\n    this.select.setLabel(text !== undefined ? text : this._getTypeText());\n    return this;\n  }\n\n\n  /**\n   * Create a select input helper.\n   * @param {Object} el\n   */\n  _createSelect(el) {\n\n    this.select = new SelectInput(el, {\n      onChange: this._onSelectChangeBound,\n      onFocus: this._onSelectFocusBound,\n      onBlur: this._onSelectBlurBound\n    });\n\n    this.setOptions();\n    this.setLabel();\n\n    // Ensure we have an ARIA labelledby attribute\n    let select = el.querySelector('select');\n    if (select && !select.getAttribute('aria-labelledby')) {\n      let selectLabel = el.querySelector('.spark-label');\n      let labelID = 'spark-aria__' + this.ariaLabelPrefix + '--suffix-' + this.type;\n\n      if (selectLabel !== null && labelID !== null) {\n        selectLabel.setAttribute('id', labelID);\n        select.setAttribute('aria-labelledby', this.ariaLabelPrefix + ' ' + labelID);\n      }\n    }\n  }\n\n\n  /**\n   * Cache elements.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n    this.el = el;\n    this.selectEl = this.el.querySelector('select');\n  }\n\n\n  /**\n   * Parse parameters from the elements.\n   */\n  _parseParams() {\n\n    this.type = this.type !== null ? this.type : parseStringAttribute(this.selectEl, 'data-type', 'day');\n\n    this.ariaLabelPrefix = this.ariaLabelPrefix !== null ? this.ariaLabelPrefix : null;\n\n    if (this.type === 'year') {\n      var date = new Date();\n      this.min = this.min !== null ? this.min : parseNumberAttribute(this.selectEl, 'min', date.getFullYear() - 100);\n      this.max = this.max !== null ? this.max : parseNumberAttribute(this.selectEl, 'max', (this.min || date.getFullYear()) + 100);\n    }\n    else if (this.type === 'month') {\n\n      this.monthNames = this.monthNames !== null ? this.monthNames : parseStringAttribute(this.selectEl, 'data-month-names', null);\n      this.numericMonth = this.numericMonth !== null ? this.numericMonth : parseBooleanAttribute(this.selectEl, 'data-numeric-month', false);\n      this.min = this.min !== null ? this.min : parseNumberAttribute(this.selectEl, 'min', null);\n      this.max = this.max !== null ? this.max : parseNumberAttribute(this.selectEl, 'max', null);\n\n      // No monthNames yet and no min or max\n      if (!this.monthNames && !this.numericMonth && !this.min && !this.max) {\n        this.monthNames = this._getDefaultMonthNames();\n      }\n      else if (!this.min && !this.max) {\n        this.min = 1;\n        this.max = 12;\n      }\n\n      if (typeof this.monthNames === 'string') {\n        this.monthNames = this.monthNames.split(',');\n      }\n    }\n    else {\n      this.min = this.min !== null ? this.min : parseNumberAttribute(this.selectEl, 'min', 1);\n      this.max = this.max !== null ? this.max : parseNumberAttribute(this.selectEl, 'max', 31);\n    }\n  }\n\n\n  /**\n   * Make a list of month options.\n   * @return {Array}\n   */\n  _getDefaultMonthNames() {\n    return dateHelper.getMonthNamesShort();\n  }\n\n\n  /**\n   * Get the text for this type of date select.\n   * @return {String}\n   */\n  _getTypeText() {\n    return this.type.charAt(0).toUpperCase() + this.type.slice(1);\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onSelectChangeBound = this._onSelectChange.bind(this);\n    this._onSelectFocusBound = this._onSelectFocus.bind(this);\n    this._onSelectBlurBound = this._onSelectBlur.bind(this);\n  }\n\n\n  /**\n   * When the select changes, run the callback.\n   * @param {String} val The value of the input\n   */\n  _onSelectChange(val) {\n    (this.onChange || noop)(val, this);\n  }\n\n\n  /**\n   * When the select changes, run the callback.\n   * @param {String} val The value of the input\n   */\n  _onSelectFocus(val) {\n    (this.onFocus || noop)(val, this);\n  }\n\n\n\n  /**\n   * When the select changes, run the callback.\n   * @param {String} val The value of the input\n   */\n  _onSelectBlur(val) {\n    (this.onBlur || noop)(val, this);\n  }\n}\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nDateSelect.prototype._whitelistedParams = ['type', 'ariaLabelPrefix', 'monthNames', 'numericMonth', 'min', 'max', 'onChange', 'onFocus', 'onBlur'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nDateSelect.prototype.defaults = {\n  el: null,\n  selectEl: null,\n  type: null,\n  monthNames: null,\n  min: null,\n  max: null,\n  select: null,\n  numericMonth: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  _onChangeBound: null,\n  _onFocusBound: null,\n  _onBlurBound: null\n};\n\nexport default DateSelect;\n"]}