{"version":3,"sources":["components/tabs.js"],"names":["Tabs","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","_determineSize","setActive","panel","_findPanelByName","_findTabByPanel","tabEls","item","activeTabEl","querySelector","removeAttribute","previousTabEl","setAttribute","offsetLeft","x","focus","clientWidth","tabListScrollEl","_findPanelByTab","activePanelEl","useHash","window","location","hash","getAttribute","e","document","createEvent","initEvent","dispatchEvent","start","isDragging","lastX","lastY","_determineMinMax","_addMoveEventListeners","type","stop","_checkX","scrollDistance","scrollDirection","_removeMoveEventListeners","move","scroll","force","maxX","minX","Math","abs","_updatePosition","align","offsetWidth","remove","leaveElement","update","setTimeout","bind","name","replace","i","len","panelEls","length","found","tab","anchorChild","id","index","parentNode","children","foundById","idMatch","indexMatch","_findTabByChildElement","_cacheElements","tabListEl","querySelectorAll","navEl","leftEl","rightEl","Error","hashSet","_onResizeBound","_onResize","_onTabListClickBound","_onTabListClick","_onRightClickBound","_onRightClick","_onLeftClickBound","_onLeftClick","_onTouchStartBound","_onTouchStart","_onTouchMoveBound","_onTouchMove","_onTouchEndBound","_onTouchEnd","_onMouseDownBound","_onMouseDown","_onMouseMoveBound","_onMouseMove","_onMouseUpBound","_onMouseUp","_onScrollBound","_onScroll","_onFocusBound","_onFocus","_onBlurBound","_onBlur","addEventListener","_removeEventListeners","removeEventListener","width","bp","breakpoints","currentBreakpoint","isScrollable","_enableAnimation","isAnimatable","_disableAnimation","preventDefault","target","touches","clientX","clientY","xDistance","yDistance","val","wheelDeltaX","detail","scrollTimer","clearTimeout","_onScrollEnd","srcElement","parent","prototype","_whitelistedParams","defaults"],"mappings":"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","file":"tabs.js","sourcesContent":["/**\n * # Tabs\n * Tabbed navigation\n *\n * @example\n * new Tabs(el, {\n *   // Optional. Alternate breakpoint values.\n *   breakpoints: {\n *    xs: {\n *      min: 0,\n *      max: 639\n *    }\n *    // ...\n *  }\n * });\n *\n * @module components/tabs.js\n */\nimport BaseComponent from './base';\nimport transform from '../helpers/css/transform';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport addClass from '../helpers/dom/add-class';\nimport removeClass from '../helpers/dom/remove-class';\nimport getParent from '../helpers/traversal/get-parent';\nimport getIndex from '../helpers/traversal/get-index';\nimport hasParent from '../helpers/traversal/has-parent';\nimport getChildren from '../helpers/traversal/get-children';\nimport {get as getBreakpoint} from '../helpers/dom/breakpoint';\n\nclass Tabs extends BaseComponent {\n\n  /**\n   * Tabs constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n    this._determineSize();\n  }\n\n\n  /**\n   * Set the active item.\n   * @param {String|Number|Object} el\n   */\n  setActive(el) {\n\n    var panel;\n\n    // If we're passed a string instead of an element or number,\n    // get the panel with that id.\n    if (typeof el === 'string') {\n      panel = this._findPanelByName(el);\n\n      // If we've found a panel, find the corresponding tab.\n      if (panel) {\n        el = this._findTabByPanel(panel);\n      }\n    }\n\n    // If we're passed a number instead of an element,\n    // get that item from the tabEls NodeList\n    if (typeof el === 'number') {\n      el = this.tabEls.item(el);\n    }\n\n    // If we couldn't find the element or it's already active, stop.\n    if (!el || typeof el !== 'object' || el === this.activeTabEl) {\n      return false;\n    }\n\n    // Remove the active class from the currently active tab\n    if (this.activeTabEl) {\n      toggleClass(this.activeTabEl, 'active', false);\n\n      // Remove the aria-selected attribute from the old tab\n      this.activeTabEl.querySelector('a').removeAttribute('aria-selected');\n      this.previousTabEl = this.activeTabEl;\n    }\n\n    // Add the active class and store.\n    toggleClass(el, 'active', true);\n\n    // Add the aria-selected attribute to the new tab\n    el.querySelector('a').setAttribute('aria-selected', 'true');\n    this.activeTabEl = el;\n\n    // Focus the tab on the left side if it's to the left of the frame.\n    if (-el.offsetLeft > this.x) {\n      this.focus(el, 'left');\n    }\n    // Focus the tab on the right side if it's to the right of the frame.\n    else if (el.offsetLeft + el.clientWidth > this.tabListScrollEl.clientWidth - this.x) {\n      this.focus(el, 'right');\n    }\n\n    // If we don't already have a panel, find the panel that corresponds to this tab.\n    if (!panel) {\n      panel = this._findPanelByTab(el);\n    }\n\n    // Set the new panel to be active.\n    toggleClass(panel, 'active', true);\n\n    // Set aria-hidden attribute to false for this panel\n    panel.setAttribute('aria-hidden', 'false');\n\n    // Remove the active class from the currently active panel.\n    if (this.activePanelEl) {\n      toggleClass(this.activePanelEl, 'active', false);\n\n      // Set aria-hidden attribute to true for this panel\n      this.activePanelEl.setAttribute('aria-hidden', 'true');\n    }\n\n    // Store the new active panel\n    this.activePanelEl = panel;\n\n    // Set the hash\n    if (this.useHash) {\n      window.location.hash = this.activePanelEl.getAttribute('id') || '';\n    }\n    var e = document.createEvent('Event');\n    e.initEvent('spark.visible-children', true, true);\n    this.activePanelEl.dispatchEvent(e);\n\n    return this;\n  }\n\n\n  /**\n   * Start the drag\n   * @param {Object} params\n   */\n  start(params) {\n\n    params = params || {};\n\n    // Start dragging\n    this.isDragging = true;\n\n    // Stash the element and its position\n    this.lastX = params.lastX;\n    this.lastY = params.lastY;\n\n    // Stash the min and max values\n    this._determineMinMax();\n\n    // Add listeners to the body so we can drag this thing anywhere and still get events\n    this._addMoveEventListeners(params.type || 'mouse');\n\n    return this;\n  }\n\n\n  /**\n   * Stop the drag\n   * @param {Object} params\n   */\n  stop(params) {\n\n    params = params || {};\n\n    // Make sure we're in bounds\n    this._checkX();\n\n    // Stop dragging\n    this.isDragging = false;\n    this.scrollDistance = 0;\n\n    // Reset the scroll direction\n    this.scrollDirection = '';\n\n    // Unbind event listeners on the body\n    this._removeMoveEventListeners(params.type);\n\n    return this;\n  }\n\n\n  /**\n   * Move the drag point\n   * @param {Object} params\n   */\n  move(params) {\n\n    // Make sure we're currently dragging\n    if (!this.isDragging && !params.scroll && !params.force) {\n      return this;\n    }\n\n    // If we're beyond the bounds, add some resistance to the scroll.\n    if (!params.force && (this.x + params.x > this.maxX || this.x + params.x < this.minX)) {\n      this.x += params.x / 4;\n    }\n    else {\n      this.x += params.x;\n    }\n\n    this.scrollDistance += Math.abs(params.x);\n\n    if (params.scroll) {\n      this._checkX();\n    }\n\n    this._updatePosition();\n\n    return this;\n  }\n\n\n  /**\n   * Focus on a specific element by bringing it to the middle of the scroller.\n   * @param {Element} el\n   * @param {String} align Which side to align with.\n   */\n  focus(el, align) {\n\n    align = align || 'left';\n\n    this.x = align === 'left' ? -el.offsetLeft : -(el.offsetLeft - this.tabListScrollEl.clientWidth + el.offsetWidth);\n\n    this._checkX();\n    this._updatePosition();\n\n    return this;\n  }\n\n\n  /**\n   * Remove the element from the DOM and prepare for garbage collection by dereferencing values.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n  remove(leaveElement) {\n    this._removeMoveEventListeners('touch');\n    this._removeMoveEventListeners('mouse');\n    this._removeMoveEventListeners('keyboard');\n    return super.remove(leaveElement);\n  }\n\n\n  /**\n   * Update the elements used.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    super.update(el);\n\n    // Run on the next frame so sizes have updated\n    setTimeout(function() {\n      this._determineSize();\n      this.focus(this.activeTabEl);\n    }.bind(this), 0);\n\n    return this;\n  }\n\n\n  /**\n   * Find a panel element by name.\n   * @param {String} name\n   * @return {Object|Null}\n   */\n  _findPanelByName(name) {\n\n    name = name.replace('#', '');\n\n    var i = 0;\n    var len = this.panelEls.length;\n    var found = null;\n    var el;\n\n    for (; i < len && !found; i++) {\n      if (this.panelEls[i].getAttribute('id') === name) {\n        el = this.panelEls[i];\n        found = true;\n      }\n    }\n\n    return found && el;\n  }\n\n\n  /**\n   * Find a panel given its corresponding tab. Try to match based on the\n   * id attribute, but fall back to matching based on index.\n   * @param {Object} tab\n   * @return {Object|Null}\n   */\n  _findPanelByTab(tab) {\n\n    var anchorChild = tab.querySelector('a');\n    var id = anchorChild && anchorChild.getAttribute('href');\n    var index = getIndex(tab.parentNode.children, tab);\n    var i = 0;\n    var len = this.panelEls.length;\n    var foundById = null;\n    var idMatch = null;\n    var indexMatch = null;\n\n    id = id ? id.replace('#', '') : id;\n\n    for (; i < len && !foundById; i++) {\n      if (id && this.panelEls[i].getAttribute('id') === id) {\n        foundById = true;\n        idMatch = this.panelEls[i];\n      } else if (i === index) {\n        indexMatch = this.panelEls[i];\n      }\n    }\n\n    return (foundById && idMatch) || indexMatch;\n  }\n\n\n  /**\n   * Find a tab given its corresponding panel. Try to match based on the\n   * [href] attribute, but fall back to matching based on index.\n   * @param {Object} panel\n   * @return {Object|Null}\n   */\n  _findTabByPanel(panel) {\n\n    var id = panel.getAttribute('id');\n    var index = getIndex(panel.parentNode.children, panel);\n    var i = 0;\n    var len = this.tabEls.length;\n    var foundById = null;\n    var idMatch = null;\n    var indexMatch = null;\n\n    for (; i < len && !foundById; i++) {\n      if (id && (this.tabEls.item(i).querySelector('a').getAttribute('href') === ('#' + id) || this.tabEls.item(i).getAttribute('href') === ('#' + id))) {\n        foundById = true;\n        idMatch = this.tabEls.item(i);\n      } else if (i === index) {\n        indexMatch = this.tabEls.item(i);\n      }\n    }\n\n    return (foundById && idMatch) || indexMatch;\n  }\n\n\n  /**\n   * Find the tab which an element lives inside.\n   * @param {Element} el\n   * @return {Object}\n   */\n  _findTabByChildElement(el) {\n\n    var i = 0;\n    var len = this.tabEls.length;\n    var found;\n    var tab;\n\n    for (; i < len && !found; i++) {\n\n      // There is a chance that the element passed IS a tab. Or maybe a tab is its parent.\n      if (this.tabEls.item(i) === el || hasParent(el, this.tabEls.item(i))) {\n        found = true;\n        tab = this.tabEls.item(i);\n      }\n    }\n\n    return found && tab;\n  }\n\n\n  /**\n   * Store a reference to the tabs list, each tab and each panel.\n   * Set which tab is active, or use the first.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n\n    this.el = el;\n    this.tabListEl = this.el.querySelector('.spark-tabs__list');\n    this.tabListScrollEl = this.tabListEl.parentNode;\n    this.tabEls = this.tabListEl.querySelectorAll('.spark-tabs__tab');\n    this.panelEls = getChildren(this.el.querySelector('.spark-tabs__panels'), '[role=\"tabpanel\"]');\n    this.navEl = this.el.querySelector('.spark-tabs__nav');\n    this.leftEl = this.navEl.querySelector('.spark-tabs__btn--left');\n    this.rightEl = this.navEl.querySelector('.spark-tabs__btn--right');\n\n    // Make sure we have the elements we need\n    if (!this.tabListEl || !this.tabEls.length || !this.panelEls.length) {\n      throw new Error('Tab element missing either a .spark-tabs__list, or elements with .spark-tabs__tab and .spark-tabs__panel!', this.el);\n    }\n\n    // If there is a hash set, use that to try and set the active panel\n    var hashSet = window.location.hash && this.setActive(window.location.hash);\n\n    // If we weren't able to set with a hash, find the tab marked active or default to the first tab\n    if (!hashSet) {\n      this.setActive(this.tabListEl.querySelector('.spark-tabs__tab.active') || 0);\n    }\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n\n    this._onResizeBound = this._onResize.bind(this);\n\n    this._onTabListClickBound = this._onTabListClick.bind(this);\n\n    this._onRightClickBound = this._onRightClick.bind(this);\n    this._onLeftClickBound = this._onLeftClick.bind(this);\n\n    this._onTouchStartBound = this._onTouchStart.bind(this);\n    this._onTouchMoveBound = this._onTouchMove.bind(this);\n    this._onTouchEndBound = this._onTouchEnd.bind(this);\n\n    this._onMouseDownBound = this._onMouseDown.bind(this);\n    this._onMouseMoveBound = this._onMouseMove.bind(this);\n    this._onMouseUpBound = this._onMouseUp.bind(this);\n\n    this._onScrollBound = this._onScroll.bind(this);\n\n    this._onFocusBound = this._onFocus.bind(this);\n    this._onBlurBound = this._onBlur.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n\n    window.addEventListener('resize', this._onResizeBound);\n    window.addEventListener('orientationchange', this._onResizeBound);\n\n    this.tabListEl.addEventListener('click', this._onTabListClickBound);\n\n    this.tabListEl.addEventListener('touchstart', this._onTouchStartBound);\n    this.tabListEl.addEventListener('mousedown', this._onMouseDownBound);\n    this.tabListEl.addEventListener('mousewheel', this._onScrollBound);\n    this.tabListEl.addEventListener('DOMMouseScroll', this._onScrollBound);\n\n    this.tabListEl.addEventListener('focus', this._onFocusBound, true);\n    this.tabListEl.addEventListener('blur', this._onBlurBound, true);\n\n    if (this.leftEl) {\n      this.leftEl.addEventListener('click', this._onLeftClickBound);\n    }\n\n    if (this.rightEl) {\n      this.rightEl.addEventListener('click', this._onRightClickBound);\n    }\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n\n    window.removeEventListener('resize', this._onResizeBound);\n    window.removeEventListener('orientationchange', this._onResizeBound);\n\n    this.tabListEl.removeEventListener('click', this._onTabListClickBound);\n\n    this.tabListEl.removeEventListener('touchstart', this._onTouchStartBound);\n    this.tabListEl.removeEventListener('mousedown', this._onMouseDownBound);\n    this.tabListEl.removeEventListener('mousewheel', this._onScrollBound);\n    this.tabListEl.removeEventListener('DOMMouseScroll', this._onScrollBound);\n\n    this.tabListEl.removeEventListener('focus', this._onFocusBound);\n    this.tabListEl.removeEventListener('blur', this._onBlurBound);\n\n    if (this.leftEl) {\n      this.leftEl.removeEventListener('click', this._onLeftClickBound);\n    }\n\n    if (this.rightEl) {\n      this.rightEl.removeEventListener('click', this._onRightClickBound);\n    }\n  }\n\n\n  /**\n   * Add event listeners for touchmove, touchend, mousemove and mouseup.\n   * We add these to the window so that the user can move off of the element\n   * but keep dragging the tabs.\n   * @param {String} type Which type of listeners to add\n   */\n  _addMoveEventListeners(type) {\n\n    // Only listen for events of the type we asked for.\n    switch (type) {\n      case 'mouse':\n        window.addEventListener('mousemove', this._onMouseMoveBound);\n        window.addEventListener('mouseup', this._onMouseUpBound);\n        break;\n      case 'touch':\n        window.addEventListener('touchmove', this._onTouchMoveBound);\n        window.addEventListener('touchend', this._onTouchEndBound);\n        break;\n    }\n  }\n\n\n  /**\n   * Remove event listeners for move events.\n   * @param {String} type Which type of listeners to remove\n   */\n  _removeMoveEventListeners(type) {\n\n    // Only unbind events of the type we asked for.\n    switch (type) {\n      case 'mouse':\n        window.removeEventListener('mousemove', this._onMouseMoveBound);\n        window.removeEventListener('mouseup', this._onMouseUpBound);\n        break;\n      case 'touch':\n        window.removeEventListener('touchmove', this._onTouchMoveBound);\n        window.removeEventListener('touchend', this._onTouchEndBound);\n        break;\n    }\n  }\n\n\n  /**\n   * Determine which size class to set on the element. This is a way of using breakpoint-like\n   * logic for the tabs. We can't rely on real breakpoints because there is no guarantee that\n   * the tabs will be the width of the window.\n   * Also determine if we should be showing navigation arrows.\n   */\n  _determineSize() {\n\n    var width = this.el.clientWidth;\n    var bp = getBreakpoint(width, this.breakpoints);\n\n    // If the found breakpoint is different than the current breakpoint, set the proper state.\n    if (this.currentBreakpoint !== bp) {\n      toggleClass(this.el, this.currentBreakpoint, false);\n      this.currentBreakpoint = bp;\n      toggleClass(this.el, this.currentBreakpoint, true);\n    }\n\n    // If the tab list is wider than the scroll container, set the scrollable class.\n    this.isScrollable = this.tabListEl.clientWidth > this.tabListScrollEl.clientWidth;\n    toggleClass(this.navEl, 'scrollable', this.isScrollable);\n    this._determineMinMax();\n  }\n\n\n  /**\n   * Determine the min and max values for the slider.\n   */\n  _determineMinMax() {\n\n    if (!this.tabListEl || !this.tabListScrollEl) {\n      return;\n    }\n\n    this.maxX = 0;\n    this.minX = this.tabListScrollEl.clientWidth - this.tabListEl.clientWidth - this.maxX;\n  }\n\n\n  /**\n   * Enable the animation state.\n   */\n  _enableAnimation() {\n    this.isAnimatable = true;\n    toggleClass(this.navEl, 'no-animation', !this.isAnimatable);\n  }\n\n\n  /**\n   * Disable the animation state.\n   */\n  _disableAnimation() {\n    this.isAnimatable = false;\n    toggleClass(this.navEl, 'no-animation', !this.isAnimatable);\n  }\n\n\n  /**\n   * Update the position of the tabs.\n   */\n  _updatePosition() {\n    this.tabListEl.setAttribute('style', transform('translate', this.x + 'px'));\n  }\n\n\n  /**\n   * Check the x position\n   */\n  _checkX() {\n\n    if (this.x < this.minX) {\n      this.x = this.minX;\n      this._updatePosition();\n    }\n\n    if (this.x > 0) {\n      this.x = 0;\n      this._updatePosition();\n    }\n  }\n\n\n  /**\n   * When the user clicks on a tab, make it active.\n   * @param {Object} e\n   */\n  _onTabListClick(e) {\n\n    // Make sure we haven't scrolled.\n    if (this.scrollDistance > 5) {\n      e.preventDefault();\n      return;\n    }\n\n    var tab;\n\n    // Find if one of our tab elements is in the path\n    if ((tab = this._findTabByChildElement(e.target))) {\n      e.preventDefault();\n      this.setActive(tab);\n    }\n  }\n\n\n  /**\n   * When the window resizes, determine the size we should be using for tabs.\n   * @param {Object} e\n   */\n  _onResize() {\n    this._determineSize();\n    this.focus(this.activeTabEl);\n  }\n\n\n  /**\n   * When the touchstart event fires, start the scrolling process\n   * @param {Object} e\n   */\n  _onTouchStart(e) {\n\n    if (!this.isScrollable) {\n      return;\n    }\n\n    // Disable the animation class so we scroll smoothly\n    this._disableAnimation();\n\n    this.start({\n      lastX: e.touches[0].clientX,\n      lastY: e.touches[0].clientY,\n      type: 'touch'\n    });\n  }\n\n\n  /**\n   * As the user continues moving the touch, determine\n   * if we should move.\n   * @param {Object} e\n   */\n  _onTouchMove(e) {\n\n    var xDistance = e.touches[0].clientX - this.lastX;\n    var yDistance = e.touches[0].clientY - this.lastY;\n\n    // If we haven't yet determined a scroll direction\n    if (!this.scrollDirection) {\n\n      // Moving up and down\n      if (Math.abs(yDistance) > Math.abs(xDistance)) {\n        this.scrollDirection = 'ns';\n      }\n      // Moving side to side\n      else {\n        this.scrollDirection = 'ew';\n      }\n    }\n\n    // If We're moving left to right, start the move.\n    if (this.scrollDirection === 'ew') {\n\n      e.preventDefault();\n\n      this.move({\n        x: xDistance\n      });\n    }\n\n    this.lastX = e.touches[0].clientX;\n    this.lastY = e.touches[0].clientY;\n  }\n\n\n  /**\n   * When the touch is over.\n   * @param {Object} e\n   */\n  _onTouchEnd() {\n\n    // Enable the animation class\n    this._enableAnimation();\n\n    // Stop after one frame so that animation is fully reenabled\n    window.setTimeout(function() {\n      this.stop({\n        type: 'touch'\n      });\n    }.bind(this), 1);\n  }\n\n\n  /**\n   * When the mousedown event fires, start the scrolling process\n   * @param {Object} e\n   */\n  _onMouseDown(e) {\n\n    if (!this.isScrollable) {\n      return;\n    }\n\n    // Disable the animation class so we scroll smoothly\n    this._disableAnimation();\n\n    this.start({\n      lastX: e.clientX,\n      lastY: e.clientY,\n      type: 'mouse'\n    });\n  }\n\n\n  /**\n   * As the user continues moving the mouse, determine\n   * if we should move.\n   * @param {Object} e\n   */\n  _onMouseMove(e) {\n\n\n    var xDistance = e.clientX - this.lastX;\n    var yDistance = e.clientY - this.lastY;\n\n    // If we haven't yet determined a scroll direction\n    if (!this.scrollDirection) {\n\n      // Moving up and down\n      if (Math.abs(yDistance) > Math.abs(xDistance)) {\n        this.scrollDirection = 'ns';\n      }\n      // Moving side to side\n      else {\n        this.scrollDirection = 'ew';\n      }\n    }\n\n    // If We're moving left to right, start the move.\n    if (this.scrollDirection === 'ew') {\n\n      e.preventDefault();\n\n      this.move({\n        x: xDistance\n      });\n    }\n\n    this.lastX = e.clientX;\n    this.lastY = e.clientY;\n  }\n\n\n  /**\n   * When the mouse move is complete.\n   * @param {Object} e\n   */\n  _onMouseUp() {\n\n    // If we haven't been dragging, get outta here!\n    if (!this.isDragging) {\n      return;\n    }\n\n    // Enable the animation class\n    this._enableAnimation();\n\n    // Stop after one frame so that animation is fully reenabled\n    window.setTimeout(function() {\n      this.stop({\n        type: 'mouse'\n      });\n    }.bind(this), 1);\n  }\n\n\n  /**\n   * When the user scrolls horizontally on the tabs, slide.\n   * @param {Object} e\n   */\n  _onScroll(e) {\n\n    // Don't bother if we aren't scrollable\n    if (!this.isScrollable) {\n      return;\n    }\n\n    // Disable the animation class so we scroll smoothly\n    this._disableAnimation();\n\n    // Allow for Firefox's wheel detail\n    var val = e.wheelDeltaX || (-e.detail * 40);\n\n    // If the scroll has moved...\n    if (val) {\n\n      // Supress native\n      e.preventDefault();\n\n      // Move us to the new position\n      this.move({\n        x: val,\n        scroll: true\n      });\n    }\n\n    // Cancel an existing scroll timer\n    if (this.scrollTimer) {\n      window.clearTimeout(this.scrollTimer);\n      this.scrollTimer = null;\n    }\n\n    // The scroll is considered \"done\" after 100ms\n    this.scrollTimer = window.setTimeout(this._onScrollEnd.bind(this), 100);\n  }\n\n\n  /**\n   * When the scrolling ends, reset the scrollTop\n   */\n  _onScrollEnd() {\n\n    // Enable the animation class\n    this._enableAnimation();\n\n    // Stop after one frame so that animation is fully reenabled\n    window.setTimeout(function() {\n      this.stop({\n        type: 'scroll'\n      });\n    }.bind(this), 1);\n  }\n\n\n  /**\n   * When the left button is clicked, slide the tabs to the right.\n   */\n  _onLeftClick() {\n    this.move({\n      x: this.tabListScrollEl.clientWidth,\n      force: true\n    });\n    this.stop({\n      type: 'force'\n    });\n  }\n\n\n  /**\n   * When the right button is clicked, slide the tabs to the left.\n   */\n  _onRightClick() {\n    this.move({\n      x: -this.tabListScrollEl.clientWidth,\n      force: true\n    });\n    this.stop({\n      type: 'force'\n    });\n  }\n\n\n  /**\n   * When focus is gained on a tab.\n   * @param {Object} e\n   */\n  _onFocus(e) {\n    var target = e.target || e.srcElement;\n    var parent = getParent(target, '.spark-tabs__tab', this.tabListEl);\n    if (parent) addClass(parent, 'focus');\n  }\n\n\n  /**\n   * When focus is lost on a tab.\n   * @param {Object} e\n   */\n  _onBlur(e) {\n    var target = e.target || e.srcElement;\n    var parent = getParent(target, '.spark-tabs__tab', this.tabListEl);\n    if (parent) removeClass(parent, 'focus');\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nTabs.prototype._whitelistedParams = ['useHash', 'breakpoints'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nTabs.prototype.defaults = {\n  el: null,\n  tabListEl: null,\n  tabListScrollEl: null,\n  tabEls: null,\n  panelEls: null,\n  activeTabEl: null,\n  activePanelEl: null,\n  navEl: null,\n  leftEl: null,\n  rightEl: null,\n  useHash: false,\n  isScrollable: false,\n  isDragging: false,\n  isAnimatable: false,\n  scrollDirection: '',\n  scrollDistance: 0,\n  lastX: 0,\n  lastY: 0,\n  minX: 0,\n  maxX: 0,\n  x: 0,\n  _onFocusBound: null,\n  _onBlurBound: null,\n  _onTabListClickBound: null,\n  _onLeftClickBound: null,\n  _onRightClickBound: null,\n  _onResizeBound: null,\n  _onTouchStartBound: null,\n  _onTouchMoveBound: null,\n  _onTouchEndBound: null,\n  _onMouseDownBound: null,\n  _onMouseMoveBound: null,\n  _onMouseUpBound: null,\n  _onScrollBound: null\n};\n\nexport default Tabs;\n"]}