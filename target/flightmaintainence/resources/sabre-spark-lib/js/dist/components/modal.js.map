{"version":3,"sources":["components/modal.js"],"names":["Modal","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","open","isActive","document","activeElement","focusedElBeforeOpen","modalFocusableEls","modalEl","querySelectorAll","length","Array","prototype","slice","call","firstModalFocusableEl","lastModalFocusableEl","_addWindowEventListeners","_updateClasses","body","focus","close","_removeWindowEventListeners","update","_removeEventListeners","_cacheElements","modalPassed","querySelector","getAttribute","scrollEl","_onClickBound","_onClick","bind","_onKeyupBound","_onKeyup","_onKeydownBound","_onKeydown","_onModalClickBound","_onModalClick","addEventListener","removeEventListener","window","e","target","preventDefault","_onBackwardTab","_onForwardTab","keyCode","shiftKey","defaults"],"mappings":"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","file":"modal.js","sourcesContent":["/**\n * # Modal\n * Show content in a modal.\n *\n * @example\n * new Modal(el);\n *\n * @module components/modal.js\n */\nimport BaseComponent from './base';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport addClass from '../helpers/dom/add-class';\nimport removeClass from '../helpers/dom/remove-class';\nimport hasClass from '../helpers/dom/has-class';\nimport getParent from '../helpers/traversal/get-parent';\n\nclass Modal extends BaseComponent {\n\n  /**\n   * Modal constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n  }\n\n\n  /**\n   * Open\n   */\n  open() {\n\n    this.isActive = true;\n    document.activeElement ? this.focusedElBeforeOpen = document.activeElement : null;\n\n    let modalFocusableEls = this.modalEl.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n    if ( modalFocusableEls.length > 0 ) {\n      this.modalFocusableEls = Array.prototype.slice.call(modalFocusableEls);\n      this.firstModalFocusableEl = this.modalFocusableEls[0];\n      this.lastModalFocusableEl = this.modalFocusableEls[ this.modalFocusableEls.length - 1 ];\n    }\n\n    this._addWindowEventListeners();\n    this._updateClasses();\n    addClass(document.body, 'spark-modal-open');\n\n    // Set focus to close button once modal has been displayed\n    if ( modalFocusableEls.length > 0 ) {\n      this.firstModalFocusableEl.focus();\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Close\n   */\n  close() {\n\n    this.isActive = false;\n    this.focusedElBeforeOpen ? this.focusedElBeforeOpen.focus() : null;\n    this._removeWindowEventListeners();\n    this._updateClasses();\n    removeClass(document.body, 'spark-modal-open');\n\n    return this;\n  }\n\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   * @param {Object} params\n   */\n  update(el, params = {}) {\n\n    this._removeEventListeners();\n    this._cacheElements(el || this.el, params);\n    this._addEventListeners();\n    this._updateClasses();\n    this._removeWindowEventListeners();\n\n    if (this.isActive) {\n      this._addWindowEventListeners();\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the element. Either a modal itself\n   * or a button referencing a modal may be passed.\n   * @param {Element} el\n   * @param {Element} params @optional\n   */\n  _cacheElements(el, params) {\n\n    var modalPassed = hasClass(el, 'spark-modal');\n    var modalEl = params.modalEl;\n\n    if (modalPassed) {\n      this.modalEl = el;\n    }\n    else {\n      this.el = el;\n      this.modalEl = modalEl || document.querySelector(el.getAttribute('data-modal'));\n    }\n\n    this.scrollEl = this.modalEl.querySelector('.spark-modal__scroll') || this.modalEl;\n\n    this.isActive = hasClass(this.el || this.modalEl, 'active');\n  }\n\n\n  /**\n   * Update classes for the open or close state.\n   */\n  _updateClasses() {\n    toggleClass(this.modalEl, 'active', this.isActive);\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onClickBound = this._onClick.bind(this);\n    this._onKeyupBound = this._onKeyup.bind(this);\n    this._onKeydownBound = this._onKeydown.bind(this);\n    this._onModalClickBound = this._onModalClick.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n    if (this.el) this.el.addEventListener('click', this._onClickBound);\n    if (this.modalEl) this.modalEl.addEventListener('click', this._onModalClickBound);\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n    if (this.el) this.el.removeEventListener('click', this._onClickBound);\n    if (this.modalEl) this.modalEl.removeEventListener('click', this._onModalClickBound);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addWindowEventListeners() {\n    this._removeWindowEventListeners();\n    window.addEventListener('keyup', this._onKeyupBound);\n    window.addEventListener('keydown', this._onKeydownBound);\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeWindowEventListeners() {\n    window.removeEventListener('keyup', this._onKeyupBound);\n    window.removeEventListener('keydown', this._onKeydownBound);\n  }\n\n\n  /**\n   * When the button is clicked.\n   * @param {Object} e\n   */\n  _onClick() {\n    this.open();\n  }\n\n\n  /**\n   * When we are clicked, toggle the opened state.\n   * @param {Object} e\n   */\n  _onModalClick(e) {\n\n    // The close button is clicked or the actual modal (gray area)\n    if (e.target === this.scrollEl || e.target === this.modalEl || getParent(e.target, '.spark-modal__close, .spark-modal__dismiss', this.scrollEl)) {\n      e.preventDefault();\n      this.close();\n    }\n  }\n\n\n  /**\n   * When tabbing backwards, localize traversal to modal elements only\n   * @param {Object} e\n   */\n  _onBackwardTab(e) {\n    if ( document.activeElement === this.firstModalFocusableEl ) {\n      e.preventDefault();\n      this.lastModalFocusableEl.focus();\n    }\n  }\n\n\n  /**\n   * When tabbing forwards, localize traversal to modal elements only\n   * @param {Object} e\n   */\n  _onForwardTab(e) {\n    if ( document.activeElement === this.lastModalFocusableEl ) {\n      e.preventDefault();\n      this.firstModalFocusableEl.focus();\n    }\n  }\n\n\n  /**\n   * When a key is pressed on the window and it's an ESC, close the modal.\n   * @param {Object} e\n   */\n  _onKeyup(e) {\n    if (e.keyCode === 27) {\n      this.close();\n    }\n  }\n\n\n  /**\n   * When a key is pressed and it is the Tab key or Shift+Tab keys, determine whether to adjust focus\n   * @param {Object} e\n   */\n  _onKeydown(e) {\n    if (e.keyCode === 9) {\n      if ( this.modalFocusableEls.length === 1 ) {\n        e.preventDefault();\n      }\n\n      if (e.shiftKey) {\n        this._onBackwardTab(e);\n      }\n      else {\n        this._onForwardTab(e);\n      }\n    }\n\n    if (e.keyCode === 13) {\n      if (e.target === document.querySelector('.spark-modal__close') || e.target === document.querySelector('.spark-modal__dismiss')) {\n        e.preventDefault();\n        this.close();\n      }\n    }\n  }\n}\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nModal.prototype.defaults = {\n  el: null,\n  modalEl: null,\n  scrollEl: null,\n  isActive: false,\n  _onClickBound: null,\n  _onKeyupBound: null,\n  _onKeydownBound: null,\n  _onModalClickBound: null\n};\n\nexport default Modal;\n"]}