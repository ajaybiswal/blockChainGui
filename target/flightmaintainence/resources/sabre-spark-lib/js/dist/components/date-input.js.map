{"version":3,"sources":["components/date-input.js"],"names":["domDateFormat","parsedDomFormat","noop","DateInput","el","params","elRequired","_bindEventListenerCallbacks","_convertLabel","_initializeInputs","_updateClass","_addEventListeners","show","isActive","_runTypeaheads","hide","remove","leaveElement","_removeTypeaheads","_removeSelects","_removeInputPieces","setValue","values","day","month","year","i","hadValue","typeaheads","undefined","selects","_padTypeaheads","updateInput","getValue","inputEl","value","clearValue","isTypeahead","k","v","setErrorState","opt","setAttribute","removeAttribute","enable","disable","inputs","isSelect","val","indexOf","_pauseInputChange","onChange","currValue","getTypingValue","result","toString","focus","character","inFocus","index","typeaheadEls","typeahead","sib","_getTypeaheadByElement","addCharacterAtIndex","sibInput","querySelector","moveCaret","focusNext","moveCaretToStart","focusPrevious","moveCaretToEnd","hasPartialValue","update","_removeEventListeners","_cacheElements","inputLabel","innerHTML","selectLabelPrefix","getAttribute","Error","toggleEl","messageEl","_parseParams","format","textFormat","showDateAsText","parsedFormat","parsedTextFormat","min","max","getValues","_initializeInputPieces","style","display","els","label","parts","forEach","part","_initializeTypeaheadPiece","_initializeSelectPiece","call","bind","piecesEl","document","createElement","className","appendChild","insertBefore","parentNode","removeChild","name","type","ariaLabelPrefix","len","length","placeholder","onFocus","_onTypeaheadFocusBound","onBlur","_onTypeaheadBlurBound","_onPieceChangeBound","onInput","_onTypeaheadInputBound","onBackspace","_onTypeaheadBackspaceBound","onEnd","_onTypeaheadEndBound","push","selectEls","select","minYear","maxYear","nodeName","toLowerCase","newEl","children","replaceChild","_validate","_validateTypeaheads","_validateSelects","maxDay","selectedDate","Date","selectedMonth","getMonth","_getMaxDaysInMonth","oldVal","oldMonth","getFullYear","getDate","_validateTypeaheadBounds","date","set","_padTypeahead","padded","_hasTypeaheadValue","setOptions","_onTypeaheadBlur","_onTypeaheadInput","_onTypeaheadFocus","_onPieceChange","_onTypeaheadBackspace","_onTypeaheadEnd","_onInputChangeBound","_onInputChange","_onVisibleChildrenBound","_onVisibleChildren","addEventListener","_onClickBound","removeEventListener","e","target","contains","window","setTimeout","runningTypeaheads","pause","run","resume","_showDateText","text","_getDateText","dateTextEl","_createDateTextEl","_hideDateText","str","isValid","getMonthNameShort","_hasFocus","_showTextTimer","clearTimeout","_blurTimer","_onClick","prototype","_whitelistedParams","defaults","onValidate"],"mappings":"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","file":"date-input.js","sourcesContent":["/**\n * # DateInput\n * A date input container.\n *\n * @example\n * new DateInput(el, {\n *   // Optional. Callback for when the input value changes.\n *   onChange(value, inputInstance) {}\n * });\n *\n * @module components/date-input.js\n */\nimport Base from './base';\nimport DateTypeahead from './date-typeahead';\nimport DateSelect from './date-select';\nimport parseDateFormat from '../helpers/date/parse-format';\nimport padNumber from '../helpers/util/pad';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport removeClass from '../helpers/dom/remove-class';\nimport addClass from '../helpers/dom/add-class';\nimport hasClass from '../helpers/dom/has-class';\nimport appendChildren from '../helpers/manipulation/append-children';\nimport triggerEvent from '../helpers/dom/trigger-event';\nimport copyAttributes from '../helpers/manipulation/copy-attributes';\nimport date from '../helpers/date/date';\nimport each from '../helpers/util/each';\nimport {string as parseStringAttribute, boolean as parseBooleanAttribute} from '../helpers/dom/parse-attribute';\nimport mixin from '../helpers/util/mixin';\nimport messaging from '../mixins/messaging';\nimport makeElement from '../helpers/dom/make-element';\nimport validation from '../mixins/validation';\n\nconst domDateFormat = 'YYYY-MM-DD';\nconst parsedDomFormat = parseDateFormat(domDateFormat);\nconst noop = function() {};\n\nclass DateInput extends Base {\n\n  /**\n   * DateInput constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._convertLabel();\n    this._initializeInputs();\n    this._updateClass();\n    this._addEventListeners();\n  }\n\n\n  /**\n   * Show the input by adding the active state and setting character counts (if necessary).\n   */\n  show() {\n\n    if (!this.isActive) {\n      this._runTypeaheads();\n      this.isActive = true;\n      this._updateClass();\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Hide the input by removing the active state.\n   */\n  hide() {\n    if (!this.isActive) return this;\n    this.isActive = false;\n    this._updateClass();\n    return this;\n  }\n\n\n  /**\n   * Augment default remove call w/ helper cleanup.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n  remove(leaveElement) {\n\n    this._removeTypeaheads(leaveElement);\n    this._removeSelects(leaveElement);\n    this._removeInputPieces();\n\n    super.remove(leaveElement);\n\n    return this;\n  }\n\n\n  /**\n   * Given an object with day, month and year, set the value of the input.\n   * @param {Object} values\n   */\n  setValue(values) {\n\n    values = values || {\n      day: '',\n      month: '',\n      year: ''\n    };\n    let i;\n    let hadValue;\n\n    for (i in this.typeaheads) {\n      if (values[i] !== undefined) {\n        this.typeaheads[i].setValue(values[i]);\n        hadValue = hadValue || (values[i] ? true : false);\n      }\n    }\n\n    for (i in this.selects) {\n      if (values[i] !== undefined) {\n        this.selects[i].setValue(values[i]);\n        hadValue = hadValue || (values[i] ? true : false);\n      }\n    }\n\n    if (!this.isActive && hadValue) {\n      this.isActive = true;\n    }\n\n    this._padTypeaheads();\n    this._updateClass();\n    this.updateInput();\n\n    return this;\n  }\n\n\n  /**\n   * Get the value of the input.\n   * @return {String}\n   */\n  getValue() {\n    return this.inputEl.value;\n  }\n\n\n  /**\n   * Clear the values.\n   */\n  clearValue() {\n\n    each(this.isTypeahead ? this.typeaheads : this.selects, (k, v) => {\n      v.clearValue();\n    });\n\n    this.inputEl.value = '';\n\n    return this;\n  }\n\n  /**\n   * Set/reset error state\n   * @param {Boolean} true: set error state, false: reset\n   */\n  setErrorState(opt) {\n    if(opt){\n      this.el.setAttribute('data-error', '');\n    }\n    else {\n      this.el.removeAttribute('data-error');\n    }\n  }\n\n  /**\n   * Enable the inputs\n   */\n  enable() {\n\n    each(this.isTypeahead ? this.typeaheads : this.selects, (k, v) => {\n      v.enable();\n    });\n\n    this.inputEl.removeAttribute('disabled');\n\n    toggleClass(this.el, 'disabled', false);\n\n    return this;\n  }\n\n\n  /**\n   * Clear the values.\n   */\n  disable() {\n\n    each(this.isTypeahead ? this.typeaheads : this.selects, (k, v) => {\n      v.disable();\n    });\n\n    this.inputEl.setAttribute('disabled', '');\n\n    toggleClass(this.el, 'disabled', true);\n\n    return this;\n  }\n\n\n  /**\n   * Update the input values to match the typeaheads.\n   */\n  updateInput() {\n\n    let inputs;\n\n    if (this.isTypeahead && this.typeaheads) {\n      inputs = this.typeaheads;\n    }\n    else if (this.isSelect) {\n      inputs = this.selects;\n    }\n\n    if (inputs) {\n\n      let day = (inputs.day && inputs.day.getValue(true)) || 0;\n      let month = (inputs.month && inputs.month.getValue(true)) || 0;\n      let year = (inputs.year && inputs.year.getValue(true)) || 0;\n\n      let val = this.inputEl.value;\n\n      this.inputEl.value = [day, month, year].indexOf(0) === -1 ? padNumber(year, 4) + '-' + padNumber(month, 2) + '-' + padNumber(day, 2) : '';\n\n      if (val !== this.inputEl.value) {\n        this._pauseInputChange = true;\n        triggerEvent(this.inputEl, 'change');\n        (this.onChange || noop)(this.inputEl.value, this);\n        this._pauseInputChange = false;\n      }\n    }\n\n    this.currValue = this.inputEl.value;\n\n    return this;\n  }\n\n  /**\n   * Get current typing value\n   *\n   */\n  getTypingValue() {\n\n    let inputs;\n    let result = '';\n\n    if (this.isTypeahead && this.typeaheads) {\n      inputs = this.typeaheads;\n    }\n    else if (this.isSelect) {\n      inputs = this.selects;\n    }\n\n    if (inputs) {\n\n      let day = (inputs.day && inputs.day.getValue(true));\n      let month = (inputs.month && inputs.month.getValue(true));\n      let year = (inputs.year && inputs.year.getValue(true));\n\n      result = month.toString() + day.toString() + year.toString();\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Move the focus to a typeahead element.\n   * @param {Number} i\n   * @param {String} character Optional A character to add\n   */\n  focus(i, character) {\n\n    if (!this.isActive || !this.inFocus) {\n      return this;\n    }\n\n    let index = this.typeaheadEls.indexOf(this.inFocus.typeahead.el);\n    let sib = this.typeaheadEls[index + i];\n    let typeahead;\n\n    // If we were passed a character to prepend, find the typeahead for this element\n    if (character) {\n      typeahead = this._getTypeaheadByElement(sib);\n      if (typeahead) {\n        typeahead.typeahead.addCharacterAtIndex(character, 0);\n      }\n    }\n\n    if (!sib) {\n      return false;\n    }\n\n    let sibInput = sib.querySelector('input');\n\n    if (sibInput) {\n      sibInput.focus();\n\n      // If we have a typeahead (because we needed to prepend a character), move the caret.\n      if (typeahead) {\n        typeahead.typeahead.moveCaret(1);\n      }\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Move the focus to the next element.\n   * @param {String} character Optional A character to add\n   */\n  focusNext(character) {\n\n    if (this.focus(1, character)) {\n      if (this.inFocus && !character)\n        this.inFocus.typeahead.moveCaretToStart();\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Move the focus to the next element.\n   * @param {String} character Optional A character to add\n   */\n  focusPrevious(character) {\n\n    if (this.focus(-1, character)) {\n      if (this.inFocus)\n        this.inFocus.typeahead.moveCaretToEnd();\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Do we have any values?\n   * @return {Boolean}\n   */\n  hasPartialValue() {\n\n    let i;\n\n    for (i in this.typeaheads) {\n      if (this.typeaheads[i].getValue()) {\n        return true;\n      }\n    }\n\n    for (i in this.selects) {\n      if (this.selects[i].getValue()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n\n  /**\n   * Resize the elements, to account for any changed display property.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    if (el) {\n\n      this._removeTypeaheads();\n      this._removeSelects();\n      this._removeInputPieces();\n\n      this._removeEventListeners();\n\n      this._cacheElements(el);\n      this._convertLabel();\n      this._initializeInputs();\n      this._updateClass();\n\n      this._addEventListeners();\n    }\n    else {\n      this._runTypeaheads();\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the needed elements.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n\n    this.el = el;\n    this.inputEl = this.el.querySelector('[type=\"date\"]');\n    this.inputLabel = this.el.querySelector('.spark-label').innerHTML;\n    this.selectLabelPrefix = this.el.querySelector('.spark-label').getAttribute('id');\n\n    if (!this.inputEl) {\n      throw new Error('No <input type=\"date\"> element present in date input container!', this.el);\n    }\n\n    this.toggleEl = this.el.querySelector('.spark-date__toggle');\n\n    this.messageEl = this.el.querySelector('.spark-input__message') || makeElement('<span class=\"spark-input__message\"></span>');\n  }\n\n\n  /**\n   * Parse parameters from the elements.\n   */\n  _parseParams() {\n\n    this.isActive = this.isActive !== null ? this.isActive : (this.inputEl.value ? true : false);\n    this.isSelect = this.isSelect !== null ? this.isSelect : (hasClass(this.el, 'spark-date--select') ? true : false);\n    this.isTypeahead = this.isTypeahead !== null ? this.isTypeahead : (!this.isSelect ? true : false);\n    this.format = this.format !== null ? this.format : parseStringAttribute(this.inputEl, 'data-format', 'MM-DD-YYYY');\n    this.textFormat = this.textFormat !== null ? this.textFormat : parseStringAttribute(this.inputEl, 'data-text-format', 'MM DD YYYY');\n    this.showDateAsText = this.showDateAsText !== null ? this.showDateAsText : parseBooleanAttribute(this.inputEl, 'data-show-date-as-text', false);\n\n    this.parsedFormat = parseDateFormat(this.format);\n    this.parsedTextFormat = parseDateFormat(this.textFormat);\n    this.min = this.min !== null ? this.min : this.inputEl.getAttribute('min');\n    this.max = this.max !== null ? this.max : this.inputEl.getAttribute('max');\n    this.min = this.min && parsedDomFormat.getValues(this.min);\n    this.max = this.max && parsedDomFormat.getValues(this.max);\n\n    this.currValue = this.inputEl.value !== null ? this.inputEl.value : null;\n  }\n\n\n  /**\n   * Setup the proper inputs. This could mean creating a typeahead, or creating selects.\n   */\n  _initializeInputs() {\n\n    if (this.isTypeahead) {\n      this._initializeInputPieces();\n      this._runTypeaheads();\n    }\n    else if (this.isSelect) {\n      removeClass(this.el, 'spark-input');\n      this._initializeInputPieces();\n    }\n  }\n\n\n  /**\n   * Replace the date input with a group of typeaheads or select inputs.\n   * Keep the date input around and store the typeahead data in there in an ISO date format.\n   */\n  _initializeInputPieces() {\n\n    // Hide the original element. This will be updated as the typeahead values change\n    this.inputEl.style.display = 'none';\n\n    let els = [];\n    let label;\n\n    // Create a new typeahead for each part of the parsed format. Also add placeholder elements.\n    this.parsedFormat.parts.forEach(function(part) {\n      // Something weird with Node that makes us have to specify what `this` is here.\n      (this.isTypeahead ? this._initializeTypeaheadPiece : this._initializeSelectPiece).call(this, els, part);\n    }.bind(this));\n\n    // Create a holder for all the pieces\n    this.piecesEl = document.createElement('span');\n    this.piecesEl.className = this.isTypeahead ? 'spark-input__fields' : 'spark-select-group';\n\n    // Add all the necessary elements\n    appendChildren(this.piecesEl, els);\n\n    // If this is a select group, move the label element.\n    if (this.isSelect && (label = this.el.querySelector('.spark-label'))) {\n      this.piecesEl.appendChild(label);\n    }\n\n    // Add the pieces holder\n    this.el.insertBefore(this.piecesEl, this.inputEl);\n\n    // Set the value\n    if (this.inputEl.value) {\n      this.setValue(parsedDomFormat.getValues(this.inputEl.value));\n      this.isActive = true;\n    }\n  }\n\n\n  /**\n   * Remove the input pieces.\n   */\n  _removeInputPieces() {\n\n    this.inputEl.style.display = '';\n\n    // Remove elements we inserted into the DOM\n    if (this.piecesEl) {\n      this.piecesEl.parentNode.removeChild(this.piecesEl);\n    }\n  }\n\n\n  /**\n   * Remove typeaheads.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n  _removeTypeaheads(leaveElement) {\n\n    // Remove typeaheads\n    if (this.typeaheads) {\n      for (let i in this.typeaheads) {\n        this.typeaheads[i].remove(leaveElement);\n      }\n    }\n  }\n\n\n  /**\n   * Remove selects.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n  _removeSelects(leaveElement) {\n\n    let label;\n\n    // Remove selects\n    if (this.selects) {\n\n      for (let i in this.selects) {\n        this.selects[i].remove(leaveElement);\n      }\n\n      // If this is a select group, move the label element.\n      if ((label = this.piecesEl.querySelector('.spark-label'))) {\n        this.el.appendChild(label);\n      }\n\n      addClass(this.el, 'spark-input');\n    }\n  }\n\n\n  /**\n   * Create a typeahead or placeholder piece.\n   * @param {Array} els\n   * @param {Object} part\n   */\n  _initializeTypeaheadPiece(els, part) {\n\n    this.typeaheads = this.typeaheads || {};\n    this.typeaheadEls = this.typeaheadEls || [];\n\n    let el;\n\n    switch (part.name) {\n      case 'day':\n      case 'month':\n      case 'year':\n        this.typeaheads[part.name] = new DateTypeahead({\n          type: part.name,\n          ariaLabelPrefix: this.inputLabel,\n          len: part.length,\n          placeholder: part.value,\n          onFocus: this._onTypeaheadFocusBound,\n          onBlur: this._onTypeaheadBlurBound,\n          onChange: this._onPieceChangeBound,\n          onInput: this._onTypeaheadInputBound,\n          onBackspace: this._onTypeaheadBackspaceBound,\n          onEnd: this._onTypeaheadEndBound\n        });\n        el = this.typeaheads[part.name].typeahead.el;\n        this.typeaheadEls.push(el);\n        break;\n      default:\n        el = document.createElement('span');\n        el.innerHTML = part.value;\n        el.className = 'spark-input__divider';\n        break;\n    }\n\n    els.push(el);\n  }\n\n\n  /**\n   * Replace the date input with three date dropdowns. Keep the date input around and store the\n   * select data in there.\n   */\n  _initializeSelectPiece(els, part) {\n\n    this.selects = this.selects || {};\n    this.selectEls = this.selectEls || [];\n\n    if (['day', 'month', 'year'].indexOf(part.name) === -1) {\n      return;\n    }\n\n    let el;\n\n    switch (part.name) {\n      case 'day':\n      case 'month':\n        this.selects[part.name] = new DateSelect({\n          type: part.name,\n          ariaLabelPrefix: this.selectLabelPrefix,\n          onChange: this._onPieceChangeBound\n        });\n        el = this.selects[part.name].select.el;\n        break;\n      case 'year': {\n        let minYear = this.inputEl.min ? parsedDomFormat.getValues(this.inputEl.min).year : null;\n        let maxYear = this.inputEl.max ? parsedDomFormat.getValues(this.inputEl.max).year : null;\n\n        this.selects[part.name] = new DateSelect({\n          min: minYear,\n          max: maxYear,\n          type: part.name,\n          ariaLabelPrefix: this.selectLabelPrefix,\n          onChange: this._onPieceChangeBound\n        });\n        el = this.selects[part.name].select.el;\n        break;\n      }\n    }\n\n    els.push(el);\n    this.selectEls.push(el);\n  }\n\n\n  /**\n   * If our element is a label, convert it to a div so that\n   * we are semantically correct. Can't have more than one\n   * input inside of a label!\n   */\n  _convertLabel() {\n\n    if (this.isTypeahead || this.el.nodeName.toLowerCase() !== 'label') {\n      return;\n    }\n\n    let newEl = document.createElement('fieldset');\n\n    copyAttributes(this.el, newEl);\n    appendChildren(newEl, this.el.children);\n\n    if (this.el.parentNode) {\n      this.el.parentNode.replaceChild(newEl, this.el);\n    }\n\n    this.el = newEl;\n  }\n\n\n  /**\n   * Validate the date values.\n   */\n  _validate() {\n\n    if (this.isTypeahead) {\n      this._validateTypeaheads();\n    }\n    else if (this.isSelect) {\n      this._validateSelects();\n    }\n  }\n\n\n  /**\n   * Validate the typeahead values.\n   */\n  _validateTypeaheads() {\n\n    if (!this.typeaheads) {\n      return;\n    }\n\n    let month = this.typeaheads.month ? this.typeaheads.month.getValue(true) : null;\n    let year = this.typeaheads.year ? this.typeaheads.year.getValue(true) : null;\n    let day = this.typeaheads.day ? this.typeaheads.day.getValue(true) : null;\n    let maxDay;\n\n    if (this.format === 'DD-MM-YYYY') {\n      let selectedDate = new Date(this.inputEl.value); // this is in format YYYY-MM-DD\n      let selectedMonth = selectedDate.getMonth() + 1;\n\n      if (month === null || month === '') {\n        maxDay = this._getMaxDaysInMonth(selectedMonth);\n      }\n      else {\n        let oldVal = new Date(this.currValue);\n        let oldMonth = oldVal.getMonth() + 1;\n\n        if (selectedMonth !== oldMonth) {\n          maxDay = this._getMaxDaysInMonth(selectedMonth);\n        }\n        else {\n          maxDay = (month && new Date(year !== null ? year : new Date().getFullYear(), month, 0).getDate()) || this._getMaxDaysInMonth(month);\n        }\n      }\n    }\n    else {\n      maxDay = (month && new Date(year !== null ? year : new Date().getFullYear(), month, 0).getDate()) || this._getMaxDaysInMonth(month);\n    }\n\n    if (maxDay < day) {\n      this.typeaheads.day.setValue(maxDay);\n      this.updateInput();\n    }\n  }\n\n\n  /**\n   * Validate the boundaries of the typeahead values relative to the min and max values.\n   */\n  _validateTypeaheadBounds() {\n\n    let year = this.typeaheads.year ? this.typeaheads.year.getValue(true) : null;\n    let month = this.typeaheads.month ? this.typeaheads.month.getValue(true) : null;\n    let day = this.typeaheads.day ? this.typeaheads.day.getValue(true) : null;\n\n    if (!year || !month || !day) {\n      return;\n    }\n\n    let date = new Date(year, month - 1, day);\n    let set = '';\n\n    if (this.min && date < new Date(this.min.year, this.min.month - 1, this.min.day)) {\n      set = 'min';\n    }\n    else if (this.max && date > new Date(this.max.year, this.max.month - 1, this.max.day)) {\n      set = 'max';\n    }\n\n    if (set) {\n      this.typeaheads.year.setValue(padNumber(this[set].year, this.typeaheads.year.typeahead.format.length));\n      this.typeaheads.month.setValue(padNumber(this[set].month, this.typeaheads.month.typeahead.format.length));\n      this.typeaheads.day.setValue(padNumber(this[set].day, this.typeaheads.day.typeahead.format.length));\n      this.updateInput();\n    }\n  }\n\n\n  /**\n   * Pad the typeahead input values.\n   */\n  _padTypeaheads() {\n\n    if (this._pauseInputChange) return;\n\n    this._pauseInputChange = true;\n\n    for (let i in this.typeaheads) {\n      this._padTypeahead(this.typeaheads[i]);\n    }\n\n    this._pauseInputChange = false;\n  }\n\n  /**\n   * Pad the typeahead input values.\n   * @param {Typeahead} typeahead\n   */\n  _padTypeahead(typeahead) {\n\n    let value = typeahead.getValue();\n\n    if (value) {\n      let padded = padNumber(value, typeahead.typeahead.format.length);\n      if (value !== padded) typeahead.setValue(padNumber(value, typeahead.typeahead.format.length));\n    }\n  }\n\n\n  /**\n   * Do any of the typeaheads have a value?\n   * @return {Boolean}\n   */\n  _hasTypeaheadValue() {\n\n    for (let i in this.typeaheads) {\n      if (this.typeaheads[i].getValue(true)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n\n  /**\n   * Validate select input values.\n   */\n  _validateSelects() {\n\n    if (!this.selects) {\n      return;\n    }\n\n    let month = this.selects.month ? this.selects.month.getValue(true) : null;\n    let year = this.selects.year ? this.selects.year.getValue(true) : null;\n\n    let maxDay = (month && new Date(year !== null ? year : new Date().getFullYear(), month, 0).getDate()) || this._getMaxDaysInMonth(month);\n    let day = this.selects.day ? this.selects.day.getValue(true) : null;\n\n    this.selects.day.setOptions({\n      max: maxDay\n    });\n    if (maxDay < day) {\n      this.selects.day.setValue(maxDay);\n    }\n\n    this.updateInput();\n  }\n\n\n  /**\n   * Get the maximum number of days for a given month.\n   * @param {Number} month The month's number. 1-12.\n   * @return {Number} The maximum number of days. 28-31.\n   */\n  _getMaxDaysInMonth(month) {\n    if (month === 2) return 29;\n    else if ([4, 6, 9, 11].indexOf(month) !== -1) return 30;\n    return 31;\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because them.\n   */\n  _bindEventListenerCallbacks() {\n    this._onTypeaheadBlurBound = this._onTypeaheadBlur.bind(this);\n    this._onTypeaheadInputBound = this._onTypeaheadInput.bind(this);\n    this._onTypeaheadFocusBound = this._onTypeaheadFocus.bind(this);\n    this._onPieceChangeBound = this._onPieceChange.bind(this);\n    this._onTypeaheadBackspaceBound = this._onTypeaheadBackspace.bind(this);\n    this._onTypeaheadEndBound = this._onTypeaheadEnd.bind(this);\n    this._onInputChangeBound = this._onInputChange.bind(this);\n    this._onVisibleChildrenBound = this._onVisibleChildren.bind(this);\n  }\n\n\n  /**\n   * Add event listeners.\n   */\n  _addEventListeners() {\n    this.el.addEventListener('click', this._onClickBound);\n    this.inputEl.addEventListener('change', this._onInputChangeBound);\n    document.addEventListener('spark.visible-children', this._onVisibleChildrenBound, true);\n  }\n\n\n  /**\n   * Remove event listeners.\n   */\n  _removeEventListeners() {\n    this.el.removeEventListener('click', this._onClickBound);\n    this.inputEl.removeEventListener('change', this._onInputChangeBound);\n    document.removeEventListener('spark.visible-children', this._onVisibleChildrenBound, true);\n  }\n\n  /**\n   * Handle the spark.visible-children event\n   * @param {Object} e\n   */\n  _onVisibleChildren(e) {\n    if (e.target.contains(this.el)) {\n      window.setTimeout(function() {\n        this.update();\n      }.bind(this), 0);\n    }\n  }\n\n  /**\n   * Run all typeaheads so they have placeholder values.\n   */\n  _runTypeaheads() {\n\n    // Make sure we don't get into an infinite loop. Even though the logic\n    // in the typeaheads should be stopping this from happening, there is\n    // something in Safari where the focus and blur events fire in different\n    // order than other browsers so those failsafes do not work.\n    if (this.runningTypeaheads) {\n      return;\n    }\n\n    this.runningTypeaheads = true;\n\n    if (this.inFocus) {\n      this.inFocus.pause();\n    }\n\n    for (let i in this.typeaheads) {\n      if (this.typeaheads[i] !== this.inFocus) {\n        this.typeaheads[i].run();\n      }\n    }\n\n    if (this.inFocus) {\n      this.inFocus.resume();\n      this.inFocus.run();\n    }\n\n    this.runningTypeaheads = false;\n  }\n\n\n  /**\n   * Update the active and focus classes.\n   */\n  _updateClass() {\n    toggleClass(this.el, 'active', this.isActive);\n    toggleClass(this.el, 'has-partial-value', this.hasPartialValue());\n    toggleClass(this.el, 'focus', this.inFocus ? true : false);\n  }\n\n\n  /**\n   * Get the typeahead that corresponds to the given element.\n   * @param {Element} el\n   * @return {Object}\n   */\n  _getTypeaheadByElement(el) {\n    for (let i in this.typeaheads) {\n      if (this.typeaheads[i].typeahead.el === el) {\n        return this.typeaheads[i];\n      }\n    }\n  }\n\n\n  /**\n   * Show the date as text.\n   */\n  _showDateText() {\n\n    var text = this._getDateText();\n\n    if (!text || !this.showDateAsText) {\n      return;\n    }\n\n    if (!this.dateTextEl) {\n      this._createDateTextEl();\n    }\n\n    this.dateTextEl.innerHTML = text;\n    this.dateTextEl.style.display = '';\n  }\n\n\n  /**\n   * Hide the date as text.\n   */\n  _hideDateText() {\n\n    if (!this.showDateAsText || !this.dateTextEl) {\n      return;\n    }\n\n    this.dateTextEl.style.display = 'none';\n  }\n\n\n  /**\n   * Create the date text element.\n   */\n  _createDateTextEl() {\n\n    var el = document.createElement('div');\n    el.className = 'spark-input__overlay';\n    el.style.display = 'none';\n\n    this.el.appendChild(el);\n    this.dateTextEl = el;\n  }\n\n\n  /**\n   * Get the date as text.\n   */\n  _getDateText() {\n\n    var parts = this.parsedTextFormat.parts;\n    var i = 0;\n    var len = parts.length;\n    var str = '';\n    var isValid = true;\n    var val;\n\n    for(; i < len; i++) {\n\n      val = this.typeaheads[parts[i].name] && this.typeaheads[parts[i].name].getValue();\n\n      switch(parts[i].name) {\n        case 'month':\n          str += date.getMonthNameShort(val);\n          if (!val) {\n            isValid = false;\n            break;\n          }\n          break;\n        case 'day':\n        case 'year':\n          str += val;\n          if (!val) {\n            isValid = false;\n            break;\n          }\n          break;\n        default:\n          str += parts[i].value;\n          break;\n      }\n    }\n\n    return (isValid ? str : false);\n  }\n\n\n  /**\n   * When the value of a typeahead or select changes, validate.\n   * @param {Number} val\n   * @param {Object} typeahead\n   */\n  _onPieceChange() {\n\n    this._validate();\n\n    if (this.isTypeahead && this.showDateAsText && !this._hasFocus) {\n\n      if (this._showTextTimer) {\n        clearTimeout(this._showTextTimer);\n      }\n\n      this._showTextTimer = setTimeout(function() {\n        this._showDateText();\n      }.bind(this), 0);\n    }\n  }\n\n\n  /**\n   * When the typeahead gains focus.\n   * @param {Number} val\n   * @param {Object} typeahead\n   */\n  _onTypeaheadFocus(val, typeahead) {\n\n    if (this.runningTypeaheads) return;\n\n    this._hideDateText();\n\n    if (!this._hasFocus) {\n      this._hasFocus = true;\n      (this.onFocus || noop)(this.inputEl.value, this);\n    }\n\n    triggerEvent(this.inputEl, 'focus');\n    this.inFocus = typeahead;\n    this.show();\n    this._updateClass();\n\n    if (this._blurTimer) {\n      clearTimeout(this._blurTimer);\n      this._blurTimer = null;\n    }\n  }\n\n\n  /**\n   * When the typeahead loses focus, make sure numbers are padded properly.\n   * @param {Number} val\n   * @param {Object} typeahead\n   */\n  _onTypeaheadBlur(val, typeahead) {\n\n    if (this.runningTypeaheads) return;\n\n    this.inFocus = null;\n\n    this._padTypeahead(typeahead);\n    this.updateInput();\n    this._updateClass();\n\n    if (!this.inputEl.value && !this._hasTypeaheadValue()) {\n      this.hide();\n    }\n    else {\n      this._validateTypeaheadBounds();\n    }\n\n    this._blurTimer = setTimeout(function() {\n      this._hasFocus = false;\n      (this.onBlur || noop)(this.inputEl.value, this);\n      this._showDateText();\n    }.bind(this), 1);\n  }\n\n  /**\n   * `input` event callback for typeahead\n   */\n  _onTypeaheadInput() {\n    (this.onInput || noop)(this.getTypingValue(), this);\n  }\n\n  /**\n   * When the typeahead fires a backspace event, move back to the previous input.\n   * @param {Number} val\n   * @param {Object} typeahead\n   */\n  _onTypeaheadBackspace() {\n    this.focusPrevious();\n  }\n\n\n  /**\n   * When the typeahead is at its maximum length and the caret is at the end,\n   * focus on the next input field.\n   * @param {Object} typeahead\n   * @param {String} character Optional\n   */\n  _onTypeaheadEnd(typeahead, character) {\n    this.focusNext(character);\n  }\n\n\n  /**\n   * When the input that corresponds to this instance changes. Allows us to listen\n   * and respond to changes made by other components (Calendar Popover, for example).\n   * @param {Object} e\n   */\n  _onInputChange(e) {\n\n    if (this.isTypeahead) {\n      this.isActive = e.target.value ? true : false;\n      this._updateClass();\n    }\n\n    if (this._pauseInputChange) return;\n    this.setValue(parsedDomFormat.getValues(e.target.value));\n    (this.onChange || noop)(this.inputEl.value, this);\n  }\n\n\n  /**\n   * When the input group is clicked, focus on the first typeahead\n   * if we don't already have focus.\n   * @todo : we should still replace the label on typeaheads and use this,\n   * but we need a way to focus on the closest element to a click.\n   * @param {Object} e\n   */\n  _onClick(/*e*/) {\n\n    /*if (this.isTypeahead || this.inFocus || this.isActive || getParent(e.target, '.spark-input__addon')) {\n      return;\n    }\n\n    let input = this.typeaheadEls[0].querySelector('input');\n\n    if (input) {\n      input.focus();\n    }*/\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nDateInput.prototype._whitelistedParams = ['validate', 'onValidate', 'onChange', 'onInput', 'onFocus', 'onBlur', 'isTypeahead', 'isSelect', 'format', 'textFormat', 'showDateAsText', 'min', 'max'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nDateInput.prototype.defaults = {\n  el: null,\n  inputEl: null,\n  messageEl: null,\n  piecesEl: null,\n  toggleEl: null,\n  inFocus: null,\n  isActive: null,\n  isSelect: null,\n  isTypeahead: null,\n  typeaheads: null,\n  typeaheadEls: null,\n  selects: null,\n  selectEls: null,\n  format: null,\n  parsedFormat: null,\n  showDateAsText: null,\n  textFormat: null,\n  runningTypeaheads: false,\n  onValidate: null,\n  onChange: null,\n  onInput: null,\n  onFocus: null,\n  onBlur: null,\n  _hasFocus: false,\n  _pauseInputChange: false,\n  _onClickBound: null,\n  _onPieceChangeBound: null,\n  _onTypeaheadFocusBound: null,\n  _onTypeaheadBlurBound: null,\n  _onTypeaheadInputBound: null,\n  _onTypeaheadBackspaceBound: null,\n  _onTypeaheadEndBound: null,\n  _onInputChangeBound: null\n};\n\nmixin(DateInput.prototype, messaging, validation);\n\nexport default DateInput;\n"]}