{"version":3,"sources":["js/dist/components/node_modules/browser-pack/_prelude.js","js/dist/components/js/dist/components/base.js","js/dist/components/js/dist/components/carousel.js","js/dist/components/js/dist/helpers/css/transform.js","js/dist/components/js/dist/helpers/dom/add-class.js","js/dist/components/js/dist/helpers/dom/has-class.js","js/dist/components/js/dist/helpers/dom/remove-class.js","js/dist/components/js/dist/helpers/util/debounce.js","js/dist/components/js/dist/helpers/util/each.js","js/dist/components/js/dist/helpers/util/trim.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"carousel.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _each = require('../helpers/util/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * # Base Component\n                                                                                                                                                           * The base class for Spark JS components. This class should never be\n                                                                                                                                                           * instantiated directly.\n                                                                                                                                                           *\n                                                                                                                                                           * @param {Element} el\n                                                                                                                                                           * @param {Object} params\n                                                                                                                                                           *\n                                                                                                                                                           * @module components/base.js\n                                                                                                                                                           */\n\nvar noop = function noop() {};\n\nvar Base = function () {\n\n  /**\n   * Set parameters and cache elements.\n   */\n  function Base(el) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Base);\n\n    if (params.elRequired && !el) {\n      return;\n    }\n\n    this.setParams(this.defaults || {}, true);\n    this.setParams(params);\n    (this._cacheElements || noop).call(this, el, params);\n    (this._parseParams || noop).call(this);\n  }\n\n  /**\n   * Remove the component from the DOM and prepare for garbage collection by dereferencing values.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n\n\n  Base.prototype.remove = function remove(leaveElement) {\n\n    if (this._removeEventListeners) {\n      this._removeEventListeners();\n    }\n\n    if (!leaveElement && this.el && this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el);\n    }\n\n    this.unsetParams(this.defaults);\n\n    return this;\n  };\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   * @param {Object} params Optional\n   */\n\n\n  Base.prototype.update = function update(el) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    if (this._removeEventListeners) {\n      this._removeEventListeners();\n    }\n\n    (this._cacheElements || noop).call(this, el || this.el, params);\n    (this._parseParams || noop).call(this);\n\n    if (this._addEventListeners) {\n      this._addEventListeners();\n    }\n\n    return this;\n  };\n\n  /**\n   * Set a hash of parameters if they're whitelisted or we're told to force the set.\n   * This is used to set initial values as well as set passed parameters.\n   * @param {Object} params\n   * @param {Boolean} force Force setting even if the param is not whitelisted.\n   */\n\n\n  Base.prototype.setParams = function setParams(params, force) {\n    var _this = this;\n\n    (0, _each2.default)(params, function (k, v) {\n      if (_this._whitelistedParams.indexOf(k) !== -1 || force) {\n        _this[k] = v;\n      }\n    });\n\n    return this;\n  };\n\n  /**\n   * Unset all parameters.\n   * @param {Array|Object} keys\n   * @param {Object} scope The object to unset the params from. Defaults to `this`.\n   */\n\n\n  Base.prototype.unsetParams = function unsetParams(keys, scope) {\n\n    keys = keys instanceof Array ? keys : Object.keys(keys);\n    scope = scope || this;\n    (0, _each2.default)(keys, function (k) {\n      delete scope[k];\n    });\n\n    return this;\n  };\n\n  return Base;\n}();\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\n\n\nBase.prototype._whitelistedParams = [];\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nBase.prototype.defaults = {};\n\nexports.default = Base;\nmodule.exports = exports['default'];\n//# sourceMappingURL=base.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _base = require('./base');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _debounce = require('../helpers/util/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _transform = require('../helpers/css/transform');\n\nvar _transform2 = _interopRequireDefault(_transform);\n\nvar _addClass = require('../helpers/dom/add-class');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('../helpers/dom/remove-class');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\narousel\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Create a Carousel\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @example\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * new Carousel(el);\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module components/carousel.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar Carousel = function (_BaseComponent) {\n  _inherits(Carousel, _BaseComponent);\n\n  /**\n   * Carousel constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  function Carousel(el, params) {\n    _classCallCheck(this, Carousel);\n\n    var _this = _possibleConstructorReturn(this, _BaseComponent.call(this, el, params));\n\n    params = params || {};\n\n    if (!el) {\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this._init(el);\n    return _this;\n  }\n\n  /**\n   * Carousel Item Contructor, exposes access to functions setTransform, setSelected, and currentPosition\n   * @param {Element} el Node to initalize as carouselItem\n   * @param {Object} parent reference to the parent carousel\n   * @param {Element} dot Node to use as dot element\n   * @param {Number} order original order in the markup\n   */\n\n\n  Carousel.prototype._carouselItem = function _carouselItem(el, parent, dot, order) {\n    var a = {};\n    a.el = el;\n    a.parent = parent;\n    a.dot = dot;\n    a.order = order;\n    a.addTransform = function (x) {\n      a.setTransform(a.transform.x + x);\n    };\n    a.setTransform = function (x) {\n      x = x ? x : 0;\n      a.transform = {\n        'x': x\n      };\n      a.el.setAttribute('style', (0, _transform2.default)('translate3d', a.transform.x + 'px, 0px, 0px'));\n    };\n    a.setSelected = function (b) {\n      if (a.setSelected.selected === b && typeof a.setSelected.selected !== 'undefined') {\n        return;\n      }\n      if (b) {\n        (0, _addClass2.default)(a.el, 'selected');\n        (0, _addClass2.default)(a.dot, 'selected');\n        a.setSelected.selected = true;\n      } else {\n        (0, _removeClass2.default)(a.el, 'selected');\n        (0, _removeClass2.default)(a.dot, 'selected');\n        a.setSelected.selected = false;\n      }\n    };\n    a.currentPosition = function () {\n      return parent.transform.x + a.transform.x + a.dims.left + a.width / 2 - parent.dims.left;\n    };\n    a.setTransform();\n    a.dims = el.getBoundingClientRect();\n    a.width = a.dims.width;\n    a.el.sparkcarouselitem = a;\n    a.dot.sparkcarouselitemdot = a;\n    return a;\n  };\n\n  /**\n   * Scans element and sets up or resets the carousel based on configuration\n   * @param {Element} el Node to initalize as the carousel\n   */\n\n\n  Carousel.prototype._init = function _init(el) {\n    //cache elements and controls\n    this.el = el;\n    this.el.sparkcarousel = this;\n    this.backe = this.el.querySelector('.spark-carousel__back');\n    this.forwarde = this.el.querySelector('.spark-carousel__forward');\n    this.outerContainer = this.el.querySelector('.spark-carousel__outer-container');\n    this.containerMask = this.el.querySelector('.spark-carousel__container-mask');\n    this.container = this.el.querySelector('.spark-carousel__container');\n    this.dots = this.el.querySelector('.spark-carousel__dots');\n    this.pauseEl = this.el.querySelector('.spark-carousel__pause');\n    //get the options from the element\n    this.opts = {};\n    this.opts.wrapItems = this.el.attributes['data-spark-carousel-wrap-items'] ? true : false;\n    this.opts.startingVelocity = this.el.attributes['data-spark-carousel-scroll-velocity'] ? this.el.attributes['data-spark-carousel-scroll-velocity'].value : 10;\n    this.opts.smoothScroll = this.el.attributes['data-spark-carousel-smooth-scroll'] ? true : false;\n    this.opts.smoothScrollCenterItems = this.el.attributes['data-spark-carousel-smooth-scroll-center'] ? true : false;\n    this.opts.panelScroll = this.el.attributes['data-spark-carousel-panel'] ? true : false;\n    this.opts.edgeScroll = this.opts.panelScroll || this.el.attributes['data-spark-carousel-edge'] ? true : false;\n    this.opts.autoAdvance = this.el.attributes['data-spark-carousel-auto-advance'] ? this.el.attributes['data-spark-carousel-auto-advance'].value : false;\n    //setup autoAdvance\n    if (this.opts.autoAdvance && !this.autoAdvance && !this.pause) {\n      this.autoAdvance = window.setTimeout(function () {\n        this._autoAdvance();\n      }.bind(this), this.opts.autoAdvance * 1000);\n    }\n    //conditionally bind pause handlers.\n    //needs to be done here so that resetting the carousel will work correctly\n    if (this.opts.autoAdvance && !this.pauseH) {\n      this.pauseH = this._pause.bind(this);\n      this.pauseEl.addEventListener('click', this.pauseH);\n    }\n    //collect items and cache sizing\n    var a = this.el.querySelectorAll('.spark-carousel__item');\n    this.items = [];\n    this.totalItemWidth = 0;\n    this.dims = this.containerMask.getBoundingClientRect();\n    this.width = this.dims.width;\n    this.height = this.dims.height;\n    var dots = document.createDocumentFragment();\n    var b;\n    //create our carouselItems\n    for (var i = 0; i < a.length; i++) {\n      b = document.createElement('div');\n      dots.appendChild(b);\n      this.items.push(new this._carouselItem(a[i], this, b, i));\n      this.totalItemWidth += this.items[i].width;\n    }\n    //if we're resetting we need to empty out the exisiting elements first\n    while (this.dots.firstChild) {\n      this.dots.removeChild(this.dots.firstChild);\n    }\n    this.dots.appendChild(dots);\n    //this is to test if we're dealing with 2011 flexbox (IE10) and need to do an adjustment\n    //this is because ms-flex-pack: center doesn't work like 2012 flexbox center-pack\n    if (typeof this.container.style.msFlexAlign !== 'undefined') {\n      this._transformItems(-(this.totalItemWidth - this.width) / 2);\n    }\n    //setup inital transform\n    this._setTransform();\n    //need to bind this event handler here as we are always going to need to be listening\n    //for this event, in order to react to container visibility changing\n    this._handleVisibleChildren = this._handleVisibleChildrenH.bind(this);\n    document.addEventListener('spark.visible-children', this._handleVisibleChildren, true);\n    if (!this._rafHandler) {\n      this._rafHandler = this._rafHandlerH.bind(this);\n    }\n    //need to also listen to resize events, even if we don't have items overflowing\n    if (!this.resizeH) {\n      this.resizeH = (0, _debounce2.default)(this._resize.bind(this), 100);\n      window.addEventListener('resize', this.resizeH);\n    }\n    //if we haven't already init'd event listerers, and we have items overflowing\n    if (this.totalItemWidth > this.width) {\n      if (!this.touchstartH) {\n        (0, _removeClass2.default)(this.el, 'noscroll');\n        this._setupListeners();\n        //center the first item\n        this._addTransform(-this.items[0].currentPosition() + this.width / 2);\n      }\n    }\n    //if we don't have overflowing items, then disable scrolling and remove listeners\n    else {\n        (0, _addClass2.default)(this.el, 'noscroll');\n        this._removeListeners();\n      }\n    //set the new selected item\n    this._updateSelected();\n    //finally, display the element\n    (0, _addClass2.default)(this.el, 'ready');\n  };\n\n  /**\n   * Tears down the component, removes listeners, and conditionally delete the DOM element\n   * @param {Boolean} leaveElement Falsey value will remove the DOM element as well as the component instance\n   */\n\n\n  Carousel.prototype.remove = function remove(leaveElement) {\n    window.removeEventListener('resize', this.resizeH);\n    delete this.resizeH;\n    document.removeEventListener('spark.visible-children', this._handleVisibleChildren, true);\n    delete this._handleVisibleChildren;\n    _BaseComponent.prototype.remove.call(this, leaveElement);\n  };\n\n  /**\n   * Pause/unpause the autoAdvance feature\n   */\n\n\n  Carousel.prototype._pause = function _pause() {\n    if (this.pause) {\n      delete this.moves;\n      this.autoAdvance = window.setTimeout(function () {\n        this._autoAdvance();\n      }.bind(this), this.opts.autoAdvance * 1000);\n    } else {\n      this._rafCancel();\n      if (!this.opts.smoothScroll || this.opts.smoothScrollCenterItems) {\n        this._scrollTo(this._selectedItem());\n      }\n      window.clearTimeout(this.autoAdvance);\n      delete this.autoAdvance;\n    }\n    this._setPause(!this.pause);\n  };\n\n  /**\n   * toggles the pause class on the element\n   * @param {Boolean} b Truthy value will give the element the pause class\n   */\n\n\n  Carousel.prototype._setPause = function _setPause(b) {\n    if (typeof b === 'undefined') {\n      this.pause = typeof this.pause === 'undefined' ? false : this.pause;\n      return this.pause;\n    } else {\n      if (b) {\n        (0, _addClass2.default)(this.el, 'pause');\n      } else {\n        (0, _removeClass2.default)(this.el, 'pause');\n      }\n      this.pause = b;\n      return this.pause;\n    }\n  };\n\n  /**\n   * function called by window.setTimeout, will check first to see if element is in use before triggering a slide advance\n   */\n\n\n  Carousel.prototype._autoAdvance = function _autoAdvance() {\n    if (!this.moves && !this._laststart && !this.paused) {\n      this._rafCancel();\n      var a = this.items.indexOf(this._selectedItem());\n      this._scrollToItem = true;\n      this._scrollTo(this.items[a === this.items.length - 1 ? 0 : a + 1]);\n      this.autoAdvance = window.setTimeout(function () {\n        this._autoAdvance();\n      }.bind(this), this.opts.autoAdvance * 1000);\n    }\n  };\n\n  /**\n   * initalize and bind even listeners\n   */\n\n\n  Carousel.prototype._setupListeners = function _setupListeners() {\n    this.touchstartH = this._touchstart.bind(this);\n    this.container.addEventListener('touchstart', this.touchstartH);\n    this.touchmoveH = this._touchmove.bind(this);\n    window.addEventListener('touchmove', this.touchmoveH);\n    this.touchendH = this._touchend.bind(this);\n    window.addEventListener('touchend', this.touchendH);\n    this.mousedownH = this._mousedown.bind(this);\n    this.container.addEventListener('mousedown', this.mousedownH);\n    this.mousemoveH = this._mousemove.bind(this);\n    window.addEventListener('mousemove', this.mousemoveH);\n    this.mouseupH = this._mouseup.bind(this);\n    window.addEventListener('mouseup', this.mouseupH);\n    this.forwardH = this._forward.bind(this);\n    this.forwarde.addEventListener('click', this.forwardH);\n    this.backH = this._back.bind(this);\n    this.backe.addEventListener('click', this.backH);\n    this.clickH = this._click.bind(this);\n    this.el.addEventListener('click', this.clickH);\n    this._focusHandler = this._scrollToClicked.bind(this);\n    this.container.addEventListener('focus', this._focusHandler, true);\n  };\n\n  /**\n   * Removes non-essential event listeners, called when tearing down the component, or our content\n   * does not exceed the width of our element\n   */\n\n\n  Carousel.prototype._removeListeners = function _removeListeners() {\n    this.el.removeEventListener('touchstart', this.touchstartH);\n    delete this.touchstartH;\n    window.removeEventListener('touchmove', this.touchmoveH);\n    delete this.touchmoveH;\n    window.removeEventListener('touchend', this.touchendH);\n    delete this.touchendH;\n    this.el.removeEventListener('mousedown', this.mousedownH);\n    delete this.mousedownH;\n    window.removeEventListener('mousemove', this.mousemoveH);\n    delete this.mousemoveH;\n    window.removeEventListener('mouseup', this.mouseupH);\n    delete this.mouseupH;\n    this.forwarde.removeEventListener('click', this.forwardH);\n    delete this.forwardH;\n    this.backe.removeEventListener('click', this.backH);\n    delete this.backH;\n    this.el.removeEventListener('click', this.clickH);\n    delete this.clickH;\n    this.container.removeEventListener('focus', this._focusHandler, true);\n    delete this._focusHandler;\n    if (this.pauseEl) {\n      this.pauseEl.removeEventListener('click', this.pauseH);\n      delete this.pauseH;\n    }\n  };\n\n  /**\n   * Event handler for the spark.visible-children event, just call the change function to handle any\n   * visibility or sizing changes\n   * @param {Event} e The spark.visible-children event\n   */\n\n\n  Carousel.prototype._handleVisibleChildrenH = function _handleVisibleChildrenH(e) {\n    if (e.target.contains(this.el)) {\n      window.setTimeout(function () {\n        this.change();\n      }.bind(this), 0);\n    }\n  };\n\n  /**\n   * Forward button click handler triggers a scrollTo to the \"next\" element\n   * @param {Event} e The click event\n   */\n\n\n  Carousel.prototype._forward = function _forward(e) {\n    var s = this.items.indexOf(this._selectedItem());\n    s++;\n    if (s > this.items.length - 1) {\n      if (this.opts.wrapItems) {\n        s = 0;\n      } else {\n        s--;\n      }\n    }\n    delete this.moves;\n    var a = this._startingVelocity;\n    a = a < -this.opts.startingVelocity ? a : -this.opts.startingVelocity;\n    this._rafCancel();\n    this._scrollToItem = true;\n    this._scrollTo(this.items[s], a);\n    if (e) {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Back button click handler triggers a scrollTo to the \"previous\" element\n   * @param {Event} e The click event\n   */\n\n\n  Carousel.prototype._back = function _back(e) {\n    var s = this.items.indexOf(this._selectedItem());\n    s--;\n    if (s < 0) {\n      if (this.opts.wrapItems) {\n        s = this.items.length - 1;\n      } else {\n        s++;\n      }\n    }\n    delete this.moves;\n    var a = this._startingVelocity;\n    a = a > this.opts.startingVelocity ? a : this.opts.startingVelocity;\n    this._rafCancel();\n    this._scrollToItem = true;\n    this._scrollTo(this.items[s], a);\n    if (e) {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Move start handler, handles both touchstart and mousedown events\n   * @param {Object} e The start event\n   */\n\n\n  Carousel.prototype._movestart = function _movestart(e) {\n    this._rafCancel();\n    this.moves = [];\n    this.moves.push(e);\n  };\n\n  /**\n   * Move handler, handles internal move event objects\n   * @param {Object} e The move event\n   */\n\n\n  Carousel.prototype._move = function _move(e) {\n    if (this.moves && this.moves.length > 1) {\n      this._addTransform(e.pageX - this.moves[this.moves.length - 1].pageX);\n      this.moves.push(e);\n      e.preventDefault = true;\n    } else {\n      if (this.moves && this.moves[0]) {\n        if (Math.abs(this.moves[0].pageX - e.pageX) > Math.abs(this.moves[0].pageY - e.pageY) && Math.abs(this.moves[0].pageX - e.pageX) > 5 && e.cancelable) {\n          this._addTransform(e.pageX - this.moves[0].pageX);\n          this.moves.push(e);\n          e.preventDefault = true;\n        } else {\n          if (Math.abs(this.moves[0].pageX - e.pageX) > 5) {\n            this.moves[0] = e;\n          }\n        }\n      }\n      if (e.type === 'touchend' || e.type === 'mouseup') {\n        delete this.moves;\n      }\n    }\n  };\n\n  /**\n   * Move end handler, handles both touchend and mouseup events\n   * @param {Object} e The moveend event\n   */\n\n\n  Carousel.prototype._moveend = function _moveend(e) {\n    this._move(e);\n    if (!this.opts.smoothScroll) {\n      this._settle(this.moves);\n    } else {\n      this._interiaScroll(this.moves);\n    }\n    return e;\n  };\n\n  /**\n   * Resize event handler, calls change to handle any element dimension changes\n   */\n\n\n  Carousel.prototype._resize = function _resize() {\n    this.change();\n  };\n\n  /**\n   * Calling the change function will handle updating the element to take into account\n   * any styling, sizing, or visibility changes, and the addition or removal of any carouselItems\n   */\n\n\n  Carousel.prototype.change = function change() {\n    var dims = this.el.getBoundingClientRect();\n    if (dims.width !== this.width || dims.height !== this.height) {\n      if (this.autoAdvance) {\n        window.clearTimeout(this.autoAdvance);\n        delete this.autoAdvance;\n      }\n      this._rafCancel();\n      var c = this._selectedItem();\n      this._setTransform(0);\n      this._setTransformItems(0);\n      this._init(this.el);\n      if (this.items.indexOf(c.el.sparkcarouselitem) > -1 && this.totalItemWidth > this.width) {\n        if (this.opts.wrapItems) {\n          this._addTransform(-this.totalItemWidth + (-c.el.sparkcarouselitem.currentPosition() + this.width / 2));\n        } else {\n          this._addTransform(-c.el.sparkcarouselitem.currentPosition() + this.width / 2);\n        }\n      }\n    }\n  };\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   */\n\n\n  Carousel.prototype.update = function update(el) {\n\n    el = el || this.el;\n\n    this._removeListeners();\n    window.removeEventListener('resize', this.resizeH);\n    delete this.resizeH;\n    document.removeEventListener('spark.visible-children', this._handleVisibleChildren, true);\n    delete this._handleVisibleChildren;\n    this._init(el);\n\n    this.change();\n\n    return this;\n  };\n\n  /**\n   * Touchstart event handler, passes necessary data points to the movestart function\n   * @param {Object} e The touchstart event\n   */\n\n\n  Carousel.prototype._touchstart = function _touchstart(e) {\n    var a = {\n      'type': e.type,\n      'pageX': e.touches[0].pageX,\n      'pageY': e.touches[0].pageY,\n      'timeStamp': e.timeStamp\n    };\n    this._movestart(a);\n  };\n\n  /**\n   * Touchmove event handler, passes necessary data points to the move function\n   * @param {Object} e The touchmove event\n   */\n\n\n  Carousel.prototype._touchmove = function _touchmove(e) {\n    var a = {\n      'type': e.type,\n      'pageX': e.touches[0].pageX,\n      'pageY': e.touches[0].pageY,\n      'timeStamp': e.timeStamp,\n      'cancelable': e.cancelable\n    };\n    this._move(a);\n    if (a.preventDefault) {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Touchend event handler, passes necessary data points to the moveend function\n   * @param {Object} e The touchend event\n   */\n\n\n  Carousel.prototype._touchend = function _touchend(e) {\n    if (this.moves && this.moves.length > 2 && e.cancelable) {\n      var a = {\n        'type': e.type,\n        'pageX': this.moves[this.moves.length - 1].pageX,\n        'pageY': this.moves[this.moves.length - 1].pageY,\n        'timeStamp': e.timeStamp\n      };\n      this._moveend(a);\n    } else {\n      delete this.moves;\n    }\n  };\n\n  /**\n   * Mousedown event handler, passes necessary data points to the movestart function\n   * @param {Object} e The mousedown event\n   */\n\n\n  Carousel.prototype._mousedown = function _mousedown(e) {\n    if (e.button !== 0) {\n      return e;\n    }\n    this.isMouseDown = true;\n    var a = {\n      'type': e.type,\n      'pageX': e.pageX,\n      'pageY': e.pageY,\n      'timeStamp': e.timeStamp\n    };\n    this._movestart(a);\n    e.preventDefault();\n  };\n\n  /**\n   * Mousemove event handler, passes necessary data points to the move function\n   * @param {Object} e The mousemove event\n   */\n\n\n  Carousel.prototype._mousemove = function _mousemove(e) {\n    if (this.isMouseDown) {\n      var a = {\n        'type': e.type,\n        'pageX': e.clientX,\n        'pageY': e.clientY,\n        'timeStamp': e.timeStamp,\n        //this was changed to correct an issue in safari - it doesn't report cancelable correctly\n        'cancelable': true\n      };\n      this._move(a);\n      if (a.preventDefault) {\n        e.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Mouseup event handler, passes necessary data points to the moveend function\n   * @param {Object} e The mouseup event\n   */\n\n\n  Carousel.prototype._mouseup = function _mouseup(e) {\n    if (this.moves && this.moves.length > 2) {\n      var a = {\n        'type': e.type,\n        'pageX': e.pageX,\n        'pageY': e.pageY,\n        'timeStamp': e.timeStamp\n      };\n      this._moveend(a);\n      this.mouseUpHandled = true;\n    } else {\n      delete this.moves;\n      this._scrollToClicked(e);\n    }\n    this.isMouseDown = false;\n  };\n\n  /**\n   * Click event handler\n   * @param {Object} e The click event\n   */\n\n\n  Carousel.prototype._click = function _click(e) {\n    //if we are already tracking moves, then this will be handled by the mouseend event handler and we should prevent the default action\n    if (this.moves) {\n      e.preventDefault();\n    }\n    //if it has already been handled by mouseup handler, prevent the action\n    if (this.mouseUpHandled) {\n      e.preventDefault();\n    }\n    //reset our handled state\n    delete this.mouseUpHandled;\n    //checking both this.moves and this.mouseUpHandled ensures we capture events correctly in all browsers, where the order of the mouseup/click events can vary\n  };\n\n  /**\n   * Calculate the user's recent cursor/finger velocity\n   * @param {Array} moves The array of cursor positions\n   */\n\n\n  Carousel.prototype._velocity = function _velocity(moves) {\n    var avg = 0;\n    var m = Math.min(6, moves.length - 1);\n    for (var i = 1; i < m; i++) {\n      if (moves[moves.length - i].timeStamp === moves[moves.length - i - 1].timeStamp) {\n        avg += avg / i;\n      } else {\n        avg += 10 * (moves[moves.length - i].pageX - moves[moves.length - i - 1].pageX) / (moves[moves.length - i].timeStamp - moves[moves.length - i - 1].timeStamp) / m;\n      }\n    }\n    return avg;\n  };\n\n  /**\n   * Handles click events on items and dots, scrolling to the clicked item\n   * @param {Event} e The click event\n   */\n\n\n  Carousel.prototype._scrollToClicked = function _scrollToClicked(e) {\n    var tar = e.target;\n    if (this.el.contains(tar)) {\n      while (!tar.sparkcarousel) {\n        if (tar.sparkcarouselitem) {\n          this.containerMask.scrollLeft = 0;\n          delete this.moves;\n          this._rafCancel();\n          this._scrollTo(tar.sparkcarouselitem);\n          e.preventDefault();\n          break;\n        }\n        if (tar.sparkcarouselitemdot) {\n          this.containerMask.scrollLeft = 0;\n          delete this.moves;\n          this._rafCancel();\n          var v = tar.sparkcarouselitemdot.order < this._selectedItem().order ? this.opts.startingVelocity : -this.opts.startingVelocity;\n          this._scrollTo(tar.sparkcarouselitemdot, v);\n          e.preventDefault();\n          break;\n        }\n        tar = tar.parentNode;\n      }\n    }\n  };\n\n  /**\n   * Scroll to the carouselItem, with specified startingVelocity, auto determines default velocity if not specified\n   * @param {Object} item The carouselItem to scroll to\n   * @param {Number} startingVelocity The startingVelocity of the scroll animation\n   */\n\n\n  Carousel.prototype._scrollTo = function _scrollTo(item, startingVelocity) {\n    var offset = this.width / 2;\n    var currentPosition = item.currentPosition();\n    if (!startingVelocity) {\n      startingVelocity = offset - item.currentPosition() > 0 ? this.opts.startingVelocity : -this.opts.startingVelocity;\n    }\n    if (this.opts.wrapItems) {\n      if (startingVelocity > 0) {\n        //left\n        if (currentPosition > offset) {\n          this._totalDistance = offset + this.totalItemWidth - currentPosition;\n        } else {\n          this._totalDistance = offset - currentPosition;\n        }\n      } else {\n        //right\n        if (currentPosition < offset) {\n          this._totalDistance = -(this.totalItemWidth + currentPosition - offset);\n        } else {\n          this._totalDistance = offset - currentPosition;\n        }\n      }\n    } else {\n      this._totalDistance = offset - currentPosition;\n    }\n    this._startingVelocity = startingVelocity;\n    delete this.moves;\n    this._scrollToItem = true;\n    this._raf = window.requestAnimationFrame(this._rafHandler);\n  };\n\n  /**\n   * This is the animator function, it examines the options set on the carousel object\n   * and selectively adds transform and requests addtional animation frames if necesary\n   * @param {Number} t The timestamp for the current animation frame\n   */\n\n\n  Carousel.prototype._rafHandlerH = function _rafHandlerH(t) {\n    if (this.opts.autoAdvance && this.autoAdvance) {\n      window.clearTimeout(this.autoAdvance);\n      delete this.autoAdvance;\n    }\n    var frames;\n    if (this.moves || !this._startingVelocity) {\n      this._rafCancel();\n      return;\n    }\n    if (!this._laststart) {\n      this._laststart = t;\n    }\n    if (!this._remainingDistance) {\n      this._remainingDistance = this._totalDistance;\n    }\n    if (!this._lastframe) {\n      this._lastframe = t;\n      frames = 1;\n    } else {\n      frames = (t - this._lastframe) / (1 / 60 * 1000);\n    }\n    var d = this._startingVelocity * frames;\n    if (this.opts.smoothScroll && !this._scrollToItem) {\n      this._addTransform(d);\n      this._startingVelocity *= Math.pow(0.97, frames);\n      if (this.opts.smoothScrollCenterItems && Math.abs(this._startingVelocity) < 1) {\n        this._scrollTo(this._selectedItem());\n      }\n      if (Math.abs(this._startingVelocity) < 0.5) {\n        if (this._startingVelocity > 0 && this.transform.x > this.totalItemWidth / 2 - this.items[0].width / 2 || this._startingVelocity < 0 && this.transform.x < -(this.totalItemWidth / 2 - this.items[this.items.length - 1].width / 2)) {\n          this._scrollToItem = true;\n          this._scrollTo(this._selectedItem());\n        } else {\n          this._rafCancel();\n        }\n      } else {\n        this._raf = window.requestAnimationFrame(this._rafHandler);\n      }\n    } else {\n      if (this._startingVelocity > 0) {\n        if (d < this._remainingDistance) {\n          this._addTransform(d);\n          this._remainingDistance -= d;\n          if (this._remainingDistance > this._totalDistance / 2) {\n            this._startingVelocity *= Math.pow(1.15, frames);\n          } else {\n            this._startingVelocity *= Math.pow(0.9, frames);\n            this._startingVelocity = this._startingVelocity > 2 ? this._startingVelocity : 2;\n          }\n          this._raf = window.requestAnimationFrame(this._rafHandler);\n        } else {\n          this._addTransform(this._remainingDistance);\n          this._rafCancel();\n        }\n      } else {\n        if (d > this._remainingDistance) {\n          this._addTransform(d);\n          this._remainingDistance -= d;\n          if (this._remainingDistance < this._totalDistance / 2) {\n            this._startingVelocity *= Math.pow(1.15, frames);\n          } else {\n            this._startingVelocity *= Math.pow(0.9, frames);\n            this._startingVelocity = this._startingVelocity < -2 ? this._startingVelocity : -2;\n          }\n          this._raf = window.requestAnimationFrame(this._rafHandler);\n        } else {\n          this._addTransform(this._remainingDistance);\n          this._rafCancel();\n        }\n      }\n    }\n    this._lastframe = t;\n  };\n\n  /**\n   * This is the animator clearing function\n   * it clears values used during animation, and selectively enables autoAdvance\n   */\n\n\n  Carousel.prototype._rafCancel = function _rafCancel() {\n    if (this.opts.autoAdvance && !this.autoAdvance && !this.pause) {\n      this.autoAdvance = window.setTimeout(function () {\n        this._autoAdvance();\n      }.bind(this), this.opts.autoAdvance * 1000);\n    }\n    window.cancelAnimationFrame(this._raf);\n    delete this._scrollToItem;\n    delete this._laststart;\n    delete this._startingVelocity;\n    delete this._remainingDistance;\n    delete this._totalDistance;\n    delete this._lastframe;\n  };\n\n  /**\n   * This computes values necessary to start an animation frame when the carousel is\n   * configured to use smoothScroll\n   * @param {Array} moves The captured move events\n   */\n\n\n  Carousel.prototype._interiaScroll = function _interiaScroll(moves) {\n    if (moves[moves.length - 1].timeStamp - moves[moves.length - 2].timeStamp > 100 || moves.length < 3) {\n      if (this.opts.smoothScrollCenterItems) {\n        return this._scrollTo(this._selectedItem());\n      }\n      return;\n    }\n    this._startingVelocity = this._velocity(moves);\n    delete this.moves;\n    this._raf = window.requestAnimationFrame(this._rafHandler);\n  };\n\n  /**\n   * This determines which carousel item should be focused based on the previous moves\n   * made by the user\n   * @param {Array} moves The captured move events\n   */\n\n\n  Carousel.prototype._settle = function _settle(moves) {\n    if (moves && moves.length > 3) {\n      if (moves[moves.length - 1].timeStamp - moves[moves.length - 2].timeStamp > 80) {\n        return this._scrollTo(this._selectedItem());\n      }\n      var v1 = 10 * (moves[moves.length - 3].pageX - moves[moves.length - 4].pageX) / (moves[moves.length - 3].timeStamp - moves[moves.length - 4].timeStamp);\n      var v2 = 10 * (moves[moves.length - 2].pageX - moves[moves.length - 3].pageX) / (moves[moves.length - 2].timeStamp - moves[moves.length - 3].timeStamp);\n      if (Math.abs(v1) < Math.abs(v2) || Math.abs(v2) > 0.5 && Math.abs(v2) > 0.5) {\n        //user is probably trying to go to next or prev item\n        var s = this.items.indexOf(this._selectedItem());\n        if (v2 > 0) {\n          //prev\n          if (s > 0) {\n            this._scrollTo(this.items[s - 1], v2);\n          } else {\n            if (this.opts.wrapItems) {\n              this._scrollTo(this.items[this.items.length - 1], v2);\n            } else {\n              this._scrollTo(this.items[0]);\n            }\n          }\n        } else {\n          //next\n          if (s < this.items.length - 1) {\n            this._scrollTo(this.items[s + 1], v2);\n          } else {\n            if (this.opts.wrapItems) {\n              this._scrollTo(this.items[0], v2);\n            } else {\n              this._scrollTo(this.items[this.items.length - 1]);\n            }\n          }\n        }\n      } else {\n        if (this._selectedItem().currentPosition() > this.width / 2) {\n          this._scrollTo(this._selectedItem(), -this.opts.startingVelocity);\n        } else {\n          this._scrollTo(this._selectedItem(), this.opts.startingVelocity);\n        }\n      }\n    }\n  };\n\n  /**\n   * Transforms the position of all carouselItems\n   * @param {Number} x The pixel value to transform\n   */\n\n\n  Carousel.prototype._transformItems = function _transformItems(x) {\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].addTransform(x);\n    }\n  };\n\n  /**\n   * Sets the transform position of all carouselItems\n   * @param {Number} x The pixel value to transform\n   */\n\n\n  Carousel.prototype._setTransformItems = function _setTransformItems(x) {\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].setTransform(x);\n    }\n  };\n\n  /**\n   * Adds transform to the container element, does checking for bounds conditions and\n   * wraps items if necessary and configured\n   * @param {Number} x The pixel value to transform\n   */\n\n\n  Carousel.prototype._addTransform = function _addTransform(x) {\n    var a;\n    if ((this.opts.smoothScrollCenterItems || !this.opts.smoothScroll) && !this.opts.wrapItems && !this.opts.edgeScroll) {\n      var l = this.items.indexOf(this.selectedItem);\n      if (l === this.items.length - 1) {\n        this._leftbound(true);\n      } else {\n        this._leftbound(false);\n      }\n      if (l === 0) {\n        this._rightbound(true);\n      } else {\n        this._rightbound(false);\n      }\n    } else {\n      this._leftbound(false);\n      this._rightbound(false);\n    }\n    if (this.transform.x + x < 0 && x < 0) {\n      if (this.opts.wrapItems) {\n        //wrap items until we have covered the visible area\n        while (this.transform.x + x < -(this.totalItemWidth - this.width) / 2 && (this.totalItemWidth < this.width ? this.transform.x + x < -this.totalItemWidth / 2 : true)) {\n          a = this.items.shift();\n          this.items.push(a);\n          a.addTransform(this.totalItemWidth);\n          this._transformItems(-a.width);\n          x += a.width;\n        }\n      } else {\n        //there is a 1 pixel adjustment to account for some math rounding\n        if (this.opts.edgeScroll && x < 0 && this.transform.x + x - 1 <= -(this.totalItemWidth - this.width) / 2) {\n          this._leftbound(true);\n          return this._setTransform(-(this.totalItemWidth - this.width) / 2);\n        }\n        //progressively reduce scrolling when no more items to the right\n        if (x < 0 && this.transform.x + x < -(this.totalItemWidth / 2 - this.items[this.items.length - 1].width / 2)) {\n          x = x * ((this.totalItemWidth / 2 + this.items[this.items.length - 1].width / 2 + (this.transform.x + x)) / this.items[this.items.length - 1].width);\n          x = x > 0 ? 0 : x;\n        }\n      }\n      return this._setTransform(this.transform.x + x);\n    } else {\n      if (this.transform.x + x > 0 && x > 0) {\n        if (this.opts.wrapItems) {\n          //wrap items until we have covered the visible area\n          while (this.transform.x + x > -(this.width - this.totalItemWidth) / 2 && (this.totalItemWidth < this.width ? this.transform.x + x > this.totalItemWidth / 2 : true)) {\n            a = this.items.pop();\n            this.items.unshift(a);\n            a.addTransform(-this.totalItemWidth);\n            this._transformItems(a.width);\n            x -= a.width;\n          }\n        } else {\n          //there is a 1 pixel adjustment to account for some math rounding\n          if (this.opts.edgeScroll && x > 0 && this.transform.x + x + 1 >= (this.totalItemWidth - this.width) / 2) {\n            this._rightbound(true);\n            return this._setTransform((this.totalItemWidth - this.width) / 2);\n          }\n          //progressively reduce scrolling when no more items to the left\n          if (x > 0 && this.transform.x + x > this.totalItemWidth / 2 - this.items[0].width / 2) {\n            x = x * ((this.totalItemWidth / 2 + this.items[0].width / 2 - (this.transform.x + x)) / this.items[0].width);\n            x = x < 0 ? 0 : x;\n          }\n        }\n      }\n      return this._setTransform(this.transform.x + x);\n    }\n  };\n\n  /**\n   * Sets the leftbound class\n   * @param {Boolean} b Set or unset the leftbound class\n   */\n\n\n  Carousel.prototype._leftbound = function _leftbound(b) {\n    if (typeof b === 'undefined') {\n      this.leftbound = typeof this.leftbound === 'undefined' ? false : this.leftbound;\n      return this.leftbound;\n    } else {\n      if (b) {\n        (0, _addClass2.default)(this.el, 'leftbound');\n      } else {\n        (0, _removeClass2.default)(this.el, 'leftbound');\n      }\n      this.leftbound = b;\n      return this.leftbound;\n    }\n  };\n\n  /**\n   * Sets the rightbound class\n   * @param {Boolean} b Set or unset the rightbound class\n   */\n\n\n  Carousel.prototype._rightbound = function _rightbound(b) {\n    if (typeof b === 'undefined') {\n      this.rightbound = typeof this.rightbound === 'undefined' ? false : this.rightbound;\n      return this.rightbound;\n    } else {\n      if (b) {\n        (0, _addClass2.default)(this.el, 'rightbound');\n      } else {\n        (0, _removeClass2.default)(this.el, 'rightbound');\n      }\n      this.rightbound = b;\n      return this.rightbound;\n    }\n  };\n\n  /**\n   * Updates the selected item, by seeing which item has its center closest\n   * to the center of the carousel\n   */\n\n\n  Carousel.prototype._updateSelected = function _updateSelected() {\n    var tar = this.width / 2;\n    var i = -1;\n    var a = 1;\n    var b = 0;\n    while (a > b) {\n      i++;\n      if (i > this.items.length - 2) {\n        break;\n      }\n      a = Math.abs(tar - this.items[i].currentPosition());\n      b = Math.abs(tar - this.items[i + 1].currentPosition());\n    }\n    return this._selectedItem(this.items[i]);\n  };\n\n  /**\n   * Stores the selected item for the carousel, and updates the previously\n   * selected item and newly selected item to have the correct states\n   * Conditionally sets the leftbound/rightbound states depending on configuration\n   * @param {Object} item Optional: the new item select, if omitted it will\n   * return the currently selected item.\n   */\n\n\n  Carousel.prototype._selectedItem = function _selectedItem(item) {\n    if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {\n      if (this.selectedItem) {\n        return this.selectedItem;\n      } else {\n        return this._updateSelected();\n      }\n    } else {\n      if (this.selectedItem) {\n        this.selectedItem.setSelected(false);\n      }\n      this.selectedItem = item;\n      if ((this.opts.smoothScrollCenterItems || !this.opts.smoothScroll) && !this.opts.wrapItems && !this.opts.edgeScroll) {\n        var l = this.items.indexOf(this.selectedItem);\n        if (l === this.items.length - 1) {\n          this._leftbound(true);\n        } else {\n          this._leftbound(false);\n        }\n        if (l === 0) {\n          this._rightbound(true);\n        } else {\n          this._rightbound(false);\n        }\n      }\n      this.selectedItem.setSelected(true);\n    }\n  };\n\n  /**\n   * Sets the transform for the carousel container\n   * @param {Number} x The pixel value to transform\n   */\n\n\n  Carousel.prototype._setTransform = function _setTransform(x) {\n    x = x ? x : 0;\n    this.transform = {\n      'x': x\n    };\n    this.container.setAttribute('style', (0, _transform2.default)('translate3d', x + 'px, 0px, 0px'));\n    this._updateSelected();\n    return x;\n  };\n\n  return Carousel;\n}(_base2.default);\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\n\n\nCarousel.prototype.defaults = {\n  el: null\n};\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nCarousel.prototype._whitelistedParams = [];\n\nexports.default = Carousel;\nmodule.exports = exports['default'];\n//# sourceMappingURL=carousel.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * # Transform\n                                                                                                                                                                                                                                                                               * Apply a cross-browser transform style.\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * @example\n                                                                                                                                                                                                                                                                               * transform('translateX', '-100px');\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * @param {String} type\n                                                                                                                                                                                                                                                                               * @param {String} val\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * @module helpers/css/transform.js\n                                                                                                                                                                                                                                                                               */\n\nvar _each = require('../util/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = ['-webkit-', '-moz-', '-o-', '-ms-', ''];\n\nfunction transform(type, val) {\n\n  var str = '';\n\n  (0, _each2.default)(prefixes, function (p) {\n\n    if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n      str += p + 'transform: ';\n\n      for (var j in val) {\n        str += j + '(' + val[j] + '); ';\n      }\n    } else {\n      str += p + 'transform: ' + type + '(' + val + '); ';\n    }\n  });\n\n  return str;\n}\n\nexports.default = transform;\nmodule.exports = exports['default'];\n//# sourceMappingURL=transform.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trim = require('../util/trim');\n\nvar _trim2 = _interopRequireDefault(_trim);\n\nvar _hasClass = require('./has-class');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * # Add Class\n * Add a class on an element.\n *\n * @param {Element|Array} el An element or array of elements to update.\n * @param {String} name\n * @return {Element}\n *\n * @module helpers/dom/add-class.js\n */\n\nvar ws = /\\s+/;\nvar cleanup = /\\s{2,}/g;\n\nfunction addClass(el, name) {\n\n  if (arguments.length === 2 && typeof name === 'string') {\n    name = (0, _trim2.default)(name).split(ws);\n  } else {\n    name = name instanceof Array ? name : Array.prototype.slice.call(arguments, 1);\n  }\n\n  // optimize for best, most common case\n  if (name.length === 1 && el.classList) {\n    if (name[0]) {\n      el.classList.add(name[0]);\n    }\n    return el;\n  }\n\n  var toAdd = [];\n  var i = 0;\n  var l = name.length;\n  var item = void 0;\n  var clsName = typeof el.className === 'string' ? el.className : el.getAttribute ? el.getAttribute('class') : '';\n\n  // see if we have anything to add\n  for (; i < l; i++) {\n    item = name[i];\n    if (item && !(0, _hasClass2.default)(clsName, item)) {\n      toAdd.push(item);\n    }\n  }\n\n  if (toAdd.length) {\n    if (typeof el.className === 'string') {\n      el.className = (0, _trim2.default)((clsName + ' ' + toAdd.join(' ')).replace(cleanup, ' '));\n    } else if (el.setAttribute) {\n      el.setAttribute('class', (0, _trim2.default)((clsName + ' ' + toAdd.join(' ')).replace(cleanup, ' ')));\n    }\n  }\n\n  return el;\n}\n\nexports.default = addClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=add-class.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * # Has Class\n * See if an element has a class.\n *\n * @param {Element|String} el\n * @param {String} name\n * @return {Boolean}\n *\n * @module helpers/dom/has-class.js\n */\nfunction hasClass(el, name) {\n  var cName = ((typeof el === 'undefined' ? 'undefined' : _typeof(el)) === 'object' ? el.className || el.getAttribute && el.getAttribute('class') || '' : el || '').replace(/[\\t\\r\\n\\f]/g, ' ');\n  return (' ' + cName + ' ').indexOf(' ' + name + ' ') !== -1;\n}\n\nexports.default = hasClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=has-class.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trim = require('../util/trim');\n\nvar _trim2 = _interopRequireDefault(_trim);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ws = /\\s+/; /**\n                 * # Remove Class\n                 * Remove a class on an element.\n                 *\n                 * @param {Element|Array} el An element or array of elements to update.\n                 * @param {String} name\n                 * @return {Element}\n                 *\n                 * @module helpers/dom/remove-class.js\n                 */\n\nvar cleanup = /\\s{2,}/g;\n\nfunction removeClass(el, name) {\n\n  if (arguments.length === 2 && typeof name === 'string') {\n    name = (0, _trim2.default)(name).split(ws);\n  } else {\n    name = name instanceof Array ? name : Array.prototype.slice.call(arguments, 1);\n  }\n\n  // optimize for best, most common case\n  if (name.length === 1 && el.classList) {\n    if (name[0]) el.classList.remove(name[0]);\n    return el;\n  }\n\n  // store two copies\n  var clsName = ' ' + (typeof el.className === 'string' ? el.className : el.getAttribute ? el.getAttribute('class') : '') + ' ';\n  var result = clsName;\n  var current = void 0;\n  var start = void 0;\n  for (var i = 0, l = name.length; i < l; i++) {\n    current = name[i];\n    start = current ? result.indexOf(' ' + current + ' ') : -1;\n    if (start !== -1) {\n      start += 1;\n      result = result.slice(0, start) + result.slice(start + current.length);\n    }\n  }\n\n  // only write if modified\n  if (clsName !== result) {\n    if (typeof el.className === 'string') {\n      el.className = (0, _trim2.default)(result.replace(cleanup, ' '));\n    } else if (el.setAttribute) {\n      el.setAttribute('class', (0, _trim2.default)(result.replace(cleanup, ' ')));\n    }\n  }\n\n  return el;\n}\n\nexports.default = removeClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=remove-class.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Debounce\n * Debounce a function call\n *\n * @param {Function} func\n * @param {Integer} delay\n *\n * @module helpers/util/debounce.js\n */\nfunction debounce(func, delay) {\n\n  var timer = void 0;\n\n  return function () {\n    var args = arguments;\n    if (timer) window.clearTimeout(timer);\n    timer = window.setTimeout(function () {\n      func.apply(this, args);\n    }, delay);\n  };\n}\n\nexports.default = debounce;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=debounce.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Each\n * Apply a callback function to a list of any kind: Array, NodeList, HTMLCollection or Object.\n *\n * @param {Array|NodeList|HTMLCollection|Object} list\n * @param {Function} cb\n *\n * @example\n * each([], callback);\n * each(el.children, callback);\n * each(el.childNodes, callback);\n * each({}, callback);\n *\n * @module helpers/util/each.js\n */\nfunction each(list, cb) {\n\n  if (!list) {\n    return;\n  }\n\n  if (typeof cb !== 'function') {\n    throw new Error('Cannot invoke `each` without a callback!');\n  }\n\n  var i = 0;\n  var len = list.length;\n\n  // Object\n  if (len === undefined) {\n    for (i in list) {\n      if (i !== 'prototype' && list.hasOwnProperty(i)) {\n        cb(i, list[i]);\n      }\n    }\n  }\n  // Array-like\n  else {\n      for (; i < len; i++) {\n        cb(list[i]);\n      }\n    }\n}\n\nexports.default = each;\nmodule.exports = exports['default'];\n//# sourceMappingURL=each.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Trim\n * Trim whitespace on a string.\n *\n * @param {String} str\n *\n * @module helpers/util/trim.js\n */\n\nvar trimRE = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\nfunction trim(str) {\n  return str.replace(trimRE, '');\n}\n\nexports.default = trim;\nmodule.exports = exports['default'];\n//# sourceMappingURL=trim.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}