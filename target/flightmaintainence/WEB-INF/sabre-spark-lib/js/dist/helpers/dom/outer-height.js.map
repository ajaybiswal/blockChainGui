{"version":3,"sources":["helpers/dom/outer-height.js"],"names":["props","outerHeight","el","styles","window","getComputedStyle","height","clientHeight","prop","parseInt"],"mappings":";;;;;;AAYA;;;;;;AAEA,IAAMA,QAAQ,CAAC,WAAD,EAAc,cAAd,EAA8B,WAA9B,EAA2C,cAA3C,CAAd,C,CAdA;;;;;;;;;;;;;;AAgBA,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,MAAzB,EAAiC;;AAE/BA,WAASA,UAAUC,OAAOC,gBAAP,CAAwBH,EAAxB,CAAnB;;AAEA,MAAII,SAASJ,GAAGK,YAAhB;;AAEA,sBAAKP,KAAL,EAAY,UAACQ,IAAD,EAAU;AACpBF,cAAUG,SAASN,OAAOK,IAAP,KAAgB,CAAzB,EAA4B,EAA5B,CAAV;AACD,GAFD;;AAIA,SAAOF,MAAP;AACD;;kBAEcL,W","file":"outer-height.js","sourcesContent":["/**\n * # Outer Height\n * Get the outer height of an element (including margin and border)\n *\n * @param {Element} el\n * @param {Object} styles Optional Already have computed styles? Pass them in.\n *\n * @example\n * outerHeight(el, computedStyles);\n *\n * @module helpers/outer-height.js\n */\nimport each from '../util/each';\n\nconst props = ['marginTop', 'marginBottom', 'borderTop', 'borderBottom'];\n\nfunction outerHeight(el, styles) {\n\n  styles = styles || window.getComputedStyle(el);\n\n  let height = el.clientHeight;\n\n  each(props, (prop) => {\n    height += parseInt(styles[prop] || 0, 10);\n  });\n\n  return height;\n}\n\nexport default outerHeight;\n"]}