{"version":3,"sources":["helpers/dom/toggle-class.js"],"names":["toggleClass","el","name","enable","NodeList","Array","i","len","length","action","undefined","call"],"mappings":";;;;;;AAYA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,WAAT,CAAqBC,EAArB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuC;;AAErC,MAAI,CAACF,EAAL,EAAS;AACP;AACD;;AAED;AACA,MAAIA,cAAcG,QAAd,IAA0BH,cAAcI,KAA5C,EAAmD;;AAEjD,SAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMN,GAAGO,MAAzB,EAAiCF,IAAIC,GAArC,EAA0CD,GAA1C,EAA+C;AAC7CN,kBAAYC,GAAGK,CAAH,CAAZ,EAAmBJ,IAAnB,EAAyBC,MAAzB;AACD;;AAED;AACD;;AAED,MAAIM,eAAJ;AACA,MAAIN,WAAWO,SAAf,EAA0B;AACxBP,aAAS,OAAOA,MAAP,KAAkB,UAAlB,GAA+BA,OAAOQ,IAAP,CAAY,IAAZ,EAAkBV,EAAlB,CAA/B,GAAuDE,MAAhE;AACAM,aAASN,SAAS,KAAT,GAAiB,QAA1B;AACD,GAHD,MAGO;AACLM,aAAS,wBAASR,EAAT,EAAaC,IAAb,IAAqB,QAArB,GAAgC,KAAzC;AACD;;AAED,SAAO,CAACO,WAAW,KAAX,6CAAD,EAA4CR,EAA5C,EAAgDC,IAAhD,CAAP;AACD,C,CAzCD;;;;;;;;;;;;kBA2CeF,W","file":"toggle-class.js","sourcesContent":["/**\n * # Toggle Class\n * Toggle a class on an element given a condition.\n *\n * @param {Element|Array} el An element or array of elements to update.\n * @param {String} name\n * @param {Boolean} enable\n * @return {Element}\n *\n * @module  helpers/dom/toggle-class.js\n */\n\nimport hasClass from './has-class';\nimport addClass from './add-class';\nimport removeClass from './remove-class';\n\nfunction toggleClass(el, name, enable) {\n\n  if (!el) {\n    return;\n  }\n\n  // If we're passed an array, toggle the class on each.\n  if (el instanceof NodeList || el instanceof Array) {\n\n    for (let i = 0, len = el.length; i < len; i++) {\n      toggleClass(el[i], name, enable);\n    }\n\n    return;\n  }\n\n  let action;\n  if (enable !== undefined) {\n    enable = typeof enable === 'function' ? enable.call(null, el) : enable;\n    action = enable ? 'add' : 'remove';\n  } else {\n    action = hasClass(el, name) ? 'remove' : 'add';\n  }\n\n  return (action === 'add' ? addClass : removeClass)(el, name);\n}\n\nexport default toggleClass;\n"]}