{"version":3,"sources":["helpers/form/form-data.js"],"names":["findAll","el","cb","querySelectorAll","i","store","input","name","nodeName","toLowerCase","value","selectedIndex","encodeURI","setAttribute","restore","getAttribute","options","selected","decodeURI","removeAttribute","clear"],"mappings":";;;;;;;AAWA;;;;;;AAEA;;;;;AAKA,SAASA,OAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAyB;AACvB,sBAAKD,GAAGE,gBAAH,CAAoB,yBAApB,CAAL,EAAqD,UAACC,CAAD,EAAO;AAC1DF,OAAGE,CAAH;AACD,GAFD;AAGD;;AAGD;;;;;AAzBA;;;;;;;;;;;AA8BA,SAASC,KAAT,CAAeJ,EAAf,EAAmB;;AAEjBD,UAAQC,EAAR,EAAY,UAASK,KAAT,EAAgB;;AAE1B,QAAIC,OAAOD,MAAME,QAAN,CAAeC,WAAf,EAAX;AACA,QAAIC,cAAJ;;AAEA,YAAQH,IAAR;AACE,WAAK,QAAL;AACEG,gBAAQJ,MAAMK,aAAd;AACA;AACF;AACED,gBAAQE,UAAUN,MAAMI,KAAhB,CAAR;AACA;AANJ;;AASAJ,UAAMO,YAAN,CAAmB,mBAAnB,EAAwCH,KAAxC;AACD,GAfD;AAgBD;;AAGD;;;;AAIA,SAASI,OAAT,CAAiBb,EAAjB,EAAqB;;AAEnBD,UAAQC,EAAR,EAAY,UAASK,KAAT,EAAgB;;AAE1B,QAAIC,OAAOD,MAAME,QAAN,CAAeC,WAAf,EAAX;AACA,QAAIC,QAAQJ,MAAMS,YAAN,CAAmB,mBAAnB,CAAZ;;AAEA;AACA,QAAI,CAACL,KAAD,IAAUA,UAAU,EAAxB,EAA4B;AAC1B;AACD;;AAED,YAAQH,IAAR;AACE,WAAK,QAAL;AACED,cAAMU,OAAN,CAAcN,KAAd,EAAqBO,QAArB,GAAgC,IAAhC;AACA;AACF;AACEX,cAAMI,KAAN,GAAcQ,UAAUR,KAAV,CAAd;AACA;AANJ;;AASAJ,UAAMa,eAAN,CAAsB,mBAAtB;AACD,GApBD;AAqBD;;AAGD;;;;AAIA,SAASC,KAAT,CAAenB,EAAf,EAAmB;AACjBD,UAAQC,EAAR,EAAY,UAASK,KAAT,EAAgB;AAC1BA,UAAMa,eAAN,CAAsB,mBAAtB;AACD,GAFD;AAGD;;QAGCd,K,GAAAA,K;QACAS,O,GAAAA,O;QACAM,K,GAAAA,K","file":"form-data.js","sourcesContent":["/**\n * # Form Data\n * Store and restore the data of form fields inline so it can be reverted.\n *\n * @example\n * formData.store(el);\n * formData.revert(el);\n *\n * @module helpers/form/form-data.js\n */\n\nimport each from '../util/each';\n\n/**\n * Find all the form elements inside a given element and run a callback on each.\n * @param  {Element} el\n * @param  {Function} cb\n */\nfunction findAll(el, cb) {\n  each(el.querySelectorAll('input, select, textarea'), (i) => {\n    cb(i);\n  });\n}\n\n\n/**\n * Find all the form elements inside a given element and store their current\n * value as a data attribute.\n * @param {Element} el\n */\nfunction store(el) {\n\n  findAll(el, function(input) {\n\n    let name = input.nodeName.toLowerCase();\n    let value;\n\n    switch (name) {\n      case 'select':\n        value = input.selectedIndex;\n        break;\n      default:\n        value = encodeURI(input.value);\n        break;\n    }\n\n    input.setAttribute('data-stored-value', value);\n  });\n}\n\n\n/**\n * Revert all the form elements inside of a given element.\n * @param {Element} el\n */\nfunction restore(el) {\n\n  findAll(el, function(input) {\n\n    let name = input.nodeName.toLowerCase();\n    let value = input.getAttribute('data-stored-value');\n\n    // No stored value\n    if (!value && value !== '') {\n      return;\n    }\n\n    switch (name) {\n      case 'select':\n        input.options[value].selected = true;\n        break;\n      default:\n        input.value = decodeURI(value);\n        break;\n    }\n\n    input.removeAttribute('data-stored-value');\n  });\n}\n\n\n/**\n * Clear the stored data on all the form elements inside of a given element.\n * @param {Element} el\n */\nfunction clear(el) {\n  findAll(el, function(input) {\n    input.removeAttribute('data-stored-value');\n  });\n}\n\nexport {\n  store,\n  restore,\n  clear\n};\n"]}