{"version":3,"sources":["components/table.js"],"names":["noop","Table","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","_initRows","isSpreadsheet","isEditRows","_deactivateAllInputs","isResizable","_initResize","_disableRowsColumnsCells","_initExpands","disableCell","disabled","enableCell","disableRow","querySelectorAll","i","enableRow","disableColumn","index","parentNode","children","tableEl","row","querySelector","bind","enableColumn","remove","leaveElement","_expands","e","activateRow","_makeRowActive","activateRows","rows","deactivateRow","_makeRowInActive","deactivateRows","getActiveRows","arr","tr","push","update","_removeEventListeners","_cacheElements","_parseParams","_onClickBound","_onClick","_onChangeBound","_onChange","_onFocusBound","_onFocus","_onBlurBound","_onBlur","_onTouchstartBound","_onTouchstart","_onTouchendBound","_onTouchend","_onKeydownBound","_onKeydown","_onMouseDownBound","_onMouseDown","_onMouseMoveBound","_onMouseMove","_onMouseUpBound","_onMouseUp","addEventListener","removeEventListener","_removeResizeListeners","_addResizeListeners","window","_toggleRowActive","_uncheckSelectAll","checked","_toggleRowsActive","active","func","len","length","_toggleSelectAll","checkbox","checkboxes","_deactivateInputs","inputs","_deactivateInput","input","setAttribute","_activateInputs","_activateInput","removeAttribute","type","_activateInputOrFocusDown","getAttribute","_focusDown","_focusUp","force","_focusUpDown","direction","td","nextRow","newTd","newInput","focus","_focusLeft","_focusLeftRight","_focusRight","_checkDoubleClick","now","Date","lastTime","_lastClickTime","lastEl","_lastClickEl","_clearClicked","_editRow","_editingCount","_updateBindings","_cancelRow","_saveRow","onRowSave","_deleteRow","onRowDelete","removeChild","_confirmDelete","confirmDelete","_resizeEls","ths","th","innerHTML","c","_sizeColumns","unit","_sizeColumnsRun","width","offsetWidth","style","Math","round","expands","onBeforeExpand","_onBeforeExpand","target","srcElement","selectAll","actionTaken","clearClicked","preventDefault","code","keyCode","which","_keyCodes","ENTER","ESCAPE","DOWN","UP","LEFT","RIGHT","_touchStartEl","_touchStartTime","_touchStartTimer","setTimeout","_onTouchHold","clearTimeout","_lastScreenX","screenX","_resizingEl","indexOf","x","d","w","tW","newW","newTW","prototype","_whitelistedParams","defaults"],"mappings":"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","file":"table.js","sourcesContent":["/**\n * # Table\n *\n * @example\n * new Table(el);\n *\n * @module components/table.js\n */\nimport BaseComponent from './base';\nimport Expand from './expand';\nimport setCaret from '../helpers/form/set-caret';\nimport {clear as clearFormData, store as storeFormData, restore as restoreFormData} from '../helpers/form/form-data';\nimport each from '../helpers/util/each';\nimport hasClass from '../helpers/dom/has-class';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport addClass from '../helpers/dom/add-class';\nimport removeClass from '../helpers/dom/remove-class';\nimport getParent from '../helpers/traversal/get-parent';\nimport getIndex from '../helpers/traversal/get-index';\nimport getSiblingBefore from '../helpers/traversal/get-sibling-before';\nimport getSiblingAfter from '../helpers/traversal/get-sibling-after';\nimport matches from '../helpers/traversal/matches';\n\nconst noop = function() {};\n\nclass Table extends BaseComponent {\n\n  /**\n   * Table constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n\n    this._initRows();\n\n    if (this.isSpreadsheet || this.isEditRows) {\n      this._deactivateAllInputs();\n    }\n\n    if (this.isResizable) {\n      this._initResize();\n    }\n\n    this._disableRowsColumnsCells();\n\n    this._initExpands();\n  }\n\n\n  /**\n   * Disable the form field in a table cell.\n   * @param {Element} el\n   */\n  disableCell(el) {\n    el.disabled = true;\n    addClass(getParent(el, 'td'), 'spark-table__disabled-cell');\n    return this;\n  }\n\n\n  /**\n   * Enable the form field in a table cell.\n   * @param {Element} el\n   */\n  enableCell(el) {\n    el.disabled = false;\n    removeClass(getParent(el, 'td'), 'spark-table__disabled-cell');\n    return this;\n  }\n\n\n  /**\n   * Disable a row and all the cells inside of it.\n   * @param {Element} el\n   */\n  disableRow(el) {\n    addClass(el, 'spark-table__disabled-row');\n    each(el.querySelectorAll('input, button, a'), function(i) {\n      i.disabled = true;\n    });\n    return this;\n  }\n\n\n  /**\n   * Enable a row and all the cells inside of it.\n   * @param {Element} el\n   */\n  enableRow(el) {\n    removeClass(el, 'spark-table__disabled-row');\n    each(el.querySelectorAll('input, button, a'), function(i) {\n      i.disabled = false;\n    });\n    return this;\n  }\n\n\n  /**\n   * Disable a column and all the cells inside of it.\n   * @param {Element} el\n   */\n  disableColumn(el) {\n\n    var index = getIndex(el.parentNode.children, el);\n\n    each(this.tableEl.querySelectorAll('tbody tr'), function(row) {\n      this.disableCell(row.children[index].querySelector('input'));\n    }.bind(this));\n\n    addClass(el, 'spark-table__disabled-column');\n\n    return this;\n  }\n\n\n  /**\n   * Enable a column and all the cells inside of it.\n   * @param {Element} el\n   */\n  enableColumn(el) {\n\n    var index = getIndex(el.parentNode.children, el);\n\n    each(this.tableEl.querySelectorAll('tbody tr'), function(row) {\n      this.enableCell(row.children[index].querySelector('input'));\n    }.bind(this));\n\n    removeClass(el, 'spark-table__disabled-column');\n\n    return this;\n  }\n\n\n  /**\n   * Remove the table anc cleanup.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n  remove(leaveElement) {\n    each(this._expands, function(e) {\n      e.remove(leaveElement);\n    });\n    return super.remove(leaveElement);\n  }\n\n\n  /**\n   * Activate a row.\n   * @param {Number|Element} row\n   */\n  activateRow(row) {\n    row = typeof row === 'number' ? this.tableEl.querySelectorAll('tbody tr')[row] : row;\n    if (row) this._makeRowActive(row);\n    return this;\n  }\n\n\n  /**\n   * Activate multiple rows.\n   * @param {Array} rows\n   */\n  activateRows(rows) {\n    each(rows, this.activateRow.bind(this));\n    return this;\n  }\n\n\n  /**\n   * Deactivate a row.\n   * @param {Number|Element} row\n   */\n  deactivateRow(row) {\n    row = typeof row === 'number' ? this.tableEl.querySelectorAll('tbody tr')[row] : row;\n    if (row) this._makeRowInActive(row);\n    return this;\n  }\n\n\n  /**\n   * Deactivate multiple rows.\n   * @param {Array} rows\n   */\n  deactivateRows(rows) {\n    each(rows, this.deactivateRow.bind(this));\n    return this;\n  }\n\n\n  /**\n   * Get an array of currently active rows.\n   * @return {Array}\n   */\n  getActiveRows() {\n\n    var arr = [];\n\n    each(this.el.querySelectorAll('tbody tr.active'), function(tr) {\n      arr.push(tr);\n    });\n\n    return arr;\n  }\n\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    this._removeEventListeners();\n\n    this._cacheElements(el || this.el);\n    this._parseParams();\n\n    this._addEventListeners();\n\n    this._initRows();\n\n    if (this.isSpreadsheet || this.isEditRows) {\n      this._deactivateAllInputs();\n    }\n\n    if (this.isResizable) {\n      this._initResize();\n    }\n\n    this._disableRowsColumnsCells();\n\n    this._initExpands();\n\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the tabs list, each tab and each panel.\n   * Set which tab is active, or use the first.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n    this.el = el;\n    this.tableEl = el.querySelector('table');\n  }\n\n\n  /**\n   * Parse parameters from the elements.\n   */\n  _parseParams() {\n\n    if (!this.tableEl) {\n      return;\n    }\n\n    this.isSpreadsheet = this.isSpreadsheet !== null ? this.isSpreadsheet : (hasClass(this.el, 'spark-table--spreadsheet') ? true : false);\n    this.isEditRows = this.isEditRows !== null ? this.isEditRows : (hasClass(this.el, 'spark-table--edit-rows') ? true : false);\n    this.isResizable = this.isResizable !== null ? this.isResizable : (hasClass(this.el, 'spark-table--resizable') ? true : false);\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n\n    this._onClickBound = this._onClick.bind(this);\n    this._onChangeBound = this._onChange.bind(this);\n    this._onFocusBound = this._onFocus.bind(this);\n    this._onBlurBound = this._onBlur.bind(this);\n\n    this._onTouchstartBound = this._onTouchstart.bind(this);\n    this._onTouchendBound = this._onTouchend.bind(this);\n    this._onKeydownBound = this._onKeydown.bind(this);\n\n    this._onMouseDownBound = this._onMouseDown.bind(this);\n    this._onMouseMoveBound = this._onMouseMove.bind(this);\n    this._onMouseUpBound = this._onMouseUp.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n\n    this.el.addEventListener('click', this._onClickBound, false);\n    this.el.addEventListener('change', this._onChangeBound, false);\n    this.el.addEventListener('focus', this._onFocusBound, true);\n    this.el.addEventListener('blur', this._onBlurBound, true);\n\n    if (this.isSpreadsheet) {\n      this.el.addEventListener('touchstart', this._onTouchstartBound, false);\n      this.el.addEventListener('touchend', this._onTouchendBound, false);\n      this.el.addEventListener('keydown', this._onKeydownBound, false);\n    }\n\n    if (this.isResizable) {\n      this.tableEl.addEventListener('mousedown', this._onMouseDownBound, false);\n    }\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n\n    this.el.removeEventListener('click', this._onClickBound);\n    this.el.removeEventListener('change', this._onChangeBound);\n    this.el.removeEventListener('focus', this._onFocusBound);\n    this.el.removeEventListener('blur', this._onBlurBound);\n\n    this.el.removeEventListener('touchstart', this._onTouchstartBound);\n    this.el.removeEventListener('touchend', this._onTouchendBound);\n    this.el.removeEventListener('keydown', this._onKeydownBound);\n\n    this.tableEl.removeEventListener('mousedown', this._onMouseDownBound);\n\n    this._removeResizeListeners();\n  }\n\n  /**\n   * Add listeners for mousemove and mouseup events.\n   */\n  _addResizeListeners() {\n    window.addEventListener('mousemove', this._onMouseMoveBound, false);\n    window.addEventListener('mouseup', this._onMouseUpBound, false);\n  }\n\n\n  /**\n   * Remove listeners for mosuemove and mouseup.\n   */\n  _removeResizeListeners() {\n    window.removeEventListener('mousemove', this._onMouseMoveBound);\n    window.removeEventListener('mouseup', this._onMouseUpBound);\n  }\n\n\n  /**\n   * Toggle the active state on a row.\n   * @param {Object} row\n   */\n  _toggleRowActive(row) {\n\n    if (hasClass(row, 'active')) {\n      this._makeRowInActive(row);\n      this._uncheckSelectAll();\n    } else {\n      this._makeRowActive(row);\n    }\n  }\n\n\n  /**\n   * Make a row active\n   * @param {Element} row\n   */\n  _makeRowActive(row) {\n    addClass(row, 'active');\n    (row.querySelector('.spark-table__checkbox input[type=\"checkbox\"]:not([disabled])') || {}).checked = true;\n  }\n\n\n  /**\n   * Make a row active\n   * @param  {Element} row\n   */\n  _makeRowInActive(row) {\n    removeClass(row, 'active');\n    (row.querySelector('.spark-table__checkbox input[type=\"checkbox\"]:not([disabled])') || {}).checked = false;\n  }\n\n\n  /**\n   * Toggle active on each row.\n   * @param {NodeList} rows\n   * @param {Boolean} active\n   */\n  _toggleRowsActive(rows, active) {\n\n    var func = active ? '_makeRowActive' : '_makeRowInActive';\n    var i = 0;\n    var len = rows.length;\n\n    for (; i < len; i++) {\n      this[func](rows[i]);\n    }\n  }\n\n\n  /**\n   * Toggle whether everything should be selected. Find the checkbox input inside of the\n   * given element and invert its state.\n   * @param {Element} el\n   */\n  _toggleSelectAll(el) {\n\n    var checkbox = el.querySelector('.spark-table__select-all input[type=\"checkbox\"]');\n\n    if (!checkbox) {\n      return;\n    }\n\n    this._toggleRowsActive(this.el.querySelectorAll('tbody tr'), !checkbox.checked);\n\n    checkbox.checked = !checkbox.checked;\n  }\n\n\n  /**\n   * Uncheck the select all checkboxes.\n   */\n  _uncheckSelectAll() {\n\n    var checkboxes = this.el.querySelectorAll('.spark-table__select-all input[type=\"checkbox\"]');\n    var i = 0;\n    var len = checkboxes.length;\n\n    for (; i < len; i++) {\n      checkboxes[i].checked = false;\n    }\n  }\n\n\n  /**\n   * Deactivate editing in all input fields.\n   */\n  _deactivateAllInputs() {\n\n    if (!this.tableEl) {\n      return;\n    }\n\n    this._deactivateInputs(this.tableEl);\n  }\n\n\n  /**\n   * Deactivate all the inputs inside an element\n   * @param {Element} el\n   */\n  _deactivateInputs(el) {\n\n    var inputs = el.querySelectorAll('input:not([type=\"checkbox\"])');\n    var i = 0;\n\n    var len = inputs.length;\n\n    for (; i < len; i++) {\n      this._deactivateInput(inputs[i]);\n    }\n  }\n\n\n  /**\n   * Make an input field readonly.\n   * @param {Element} input\n   */\n  _deactivateInput(input) {\n    input.setAttribute('readonly', '');\n    removeClass(input.parentNode, 'editing');\n  }\n\n\n  /**\n   * Activate all the inputs inside an element\n   * @param {Element} el\n   */\n  _activateInputs(el) {\n\n    var inputs = el.querySelectorAll('input:not([type=\"checkbox\"])');\n    var i = 0;\n\n    var len = inputs.length;\n\n    for (; i < len; i++) {\n      this._activateInput(inputs[i]);\n    }\n  }\n\n\n  /**\n   * Make an input field readable.\n   * @param {Element} input\n   */\n  _activateInput(input) {\n    input.removeAttribute('readonly');\n    addClass(input.parentNode, 'editing');\n    if (input.type !== 'checkbox' && input.type !== 'radio') {\n      setCaret(input, -1);\n    }\n  }\n\n\n  /**\n   * Activate an input, unless it's already enabled in which case\n   * the focus should move down a row.\n   * @param {Element} input\n   */\n  _activateInputOrFocusDown(input) {\n\n    // Currently readonly\n    if (input.getAttribute('readonly') === '') {\n      this._activateInput(input);\n      return;\n    }\n\n    this._focusDown(input, true);\n  }\n\n\n  /**\n   * Find all the rows, columns and cells that should be disabled.\n   */\n  _disableRowsColumnsCells() {\n    each(this.tableEl.querySelectorAll('td input[disabled]'), this.disableCell.bind(this));\n    each(this.tableEl.querySelectorAll('.spark-table__disabled-row'), this.disableRow.bind(this));\n    each(this.tableEl.querySelectorAll('.spark-table__disabled-column'), this.disableColumn.bind(this));\n  }\n\n\n  /**\n   * Move our focus up a row from the given element.\n   * @param {Element} input\n   * @param {Boolean} force Force the move even if the element is active.\n   */\n  _focusUp(input, force) {\n    return this._focusUpDown(input, 'up', force);\n  }\n\n\n  /**\n   * Move our focus down a row from the given element.\n   * @param {Element} input\n   * @param {Boolean} force Force the move even if the element is active.\n   */\n  _focusDown(input, force) {\n    return this._focusUpDown(input, 'down', force);\n  }\n\n\n  /**\n   * Focus on a row up or down from the given element.\n   * @param {Element} input\n   * @param {String} direction up|down\n   * @param {Boolean} force Force the move even if the element is active.\n   */\n  _focusUpDown(input, direction, force) {\n\n    // If we're not being told to force and the item is not read only\n    if (!force && input.getAttribute('readonly') === null) {\n      return;\n    }\n\n    this._deactivateInput(input);\n    var td = getParent(input, 'td', this.el);\n\n    if (!td) {\n      return;\n    }\n\n    var index = getIndex(td.parentNode.children, td);\n    var nextRow = (direction === 'up' ? getSiblingBefore : getSiblingAfter)(td.parentNode, 'tr');\n\n    if (!nextRow) {\n      return;\n    }\n\n    var newTd = nextRow.children[index];\n\n    if (!newTd) {\n      return;\n    }\n\n    var newInput = newTd.querySelector('input:not([type=\"checkbox\"]), select');\n\n    if (newInput) {\n      if (newInput.disabled) {\n        this._focusUpDown(newInput, direction, force);\n      } else {\n        newInput.focus();\n      }\n    }\n  }\n\n\n  /**\n   * Move our focus left a cell from the given element.\n   * @param {Element} input\n   * @param {Boolean} force Force the move even if the element is active.\n   */\n  _focusLeft(input, force) {\n    return this._focusLeftRight(input, 'left', force);\n  }\n\n\n  /**\n   * Move our focus right a cell from the given element.\n   * @param {Element} input\n   * @param {Boolean} force Force the move even if the element is active.\n   */\n  _focusRight(input, force) {\n    return this._focusLeftRight(input, 'right', force);\n  }\n\n\n  /**\n   * Focus on a cell left or down from the given element.\n   * @param {Element} input\n   * @param {String} direction up|down\n   * @param {Boolean} force Force the move even if the element is active.\n   */\n  _focusLeftRight(input, direction, force) {\n\n    // If we're not being told to force and the item is not read only\n    if (!force && input.getAttribute('readonly') === null) {\n      return;\n    }\n\n    this._deactivateInput(input);\n    var td = getParent(input, 'td', this.el);\n\n    if (!td) {\n      return;\n    }\n\n    var newTd = (direction === 'left' ? getSiblingBefore : getSiblingAfter)(td, 'td');\n\n    if (!newTd) {\n      return;\n    }\n\n    var newInput = newTd.querySelector('input:not([type=\"checkbox\"]), select');\n\n    if (newInput) {\n      if (newInput.disabled) {\n        this._focusLeftRight(newInput, direction, force);\n      } else {\n        newInput.focus();\n      }\n    }\n  }\n\n\n  /**\n   * Check for two click events on the same element in short succession.\n   * @param {Element} el\n   */\n  _checkDoubleClick(el) {\n\n    var now = Date.now();\n    var lastTime = this._lastClickTime;\n    var lastEl = this._lastClickEl;\n\n    this._lastClickTime = now;\n    this._lastClickEl = el;\n\n    if (el === lastEl && now - 500 < lastTime) {\n      return true;\n    }\n\n    return false;\n  }\n\n\n  /**\n   * Unset the last clicked element.\n   */\n  _clearClicked() {\n    this._lastClickEl = null;\n  }\n\n\n  /**\n   * Enable editing on a row.\n   * @param {Element} row\n   */\n  _editRow(row) {\n\n    if (!row) {\n      return;\n    }\n\n    this._editingCount++;\n\n    this._activateInputs(row);\n    storeFormData(row);\n    addClass(row, 'editing');\n    this._updateBindings();\n  }\n\n\n  /**\n   * Cancel editing a row.\n   * @param {Element} row\n   */\n  _cancelRow(row) {\n\n    if (!row) {\n      return;\n    }\n\n    this._editingCount--;\n\n    this._deactivateInputs(row);\n    restoreFormData(row);\n    removeClass(row, 'editing');\n    this._updateBindings();\n  }\n\n\n  /**\n   * Save a row.\n   * @param {Element} row\n   */\n  _saveRow(row) {\n\n    if (!row) {\n      return;\n    }\n\n    this._editingCount--;\n\n    this._deactivateInputs(row);\n    clearFormData(row);\n    removeClass(row, 'editing');\n    this._updateBindings();\n\n    (this.onRowSave || noop)(getIndex(row.parentNode.children, row), row);\n  }\n\n\n  /**\n   * Delete a row.\n   * @param {Element} row\n   */\n  _deleteRow(row) {\n\n    if (!row) {\n      return;\n    }\n\n    (this.onRowDelete || noop)(getIndex(row.parentNode.children, row), row);\n    row.parentNode.removeChild(row);\n  }\n\n\n  /**\n   * Confirm the deletion of a row.\n   * @param {Element} row\n   */\n  _confirmDelete(row) {\n\n    if (!this.confirmDelete || typeof this.confirmDelete !== 'function') {\n      this._deleteRow(row);\n    } else {\n      this.confirmDelete(row, this._deleteRow);\n    }\n  }\n\n\n  /**\n   * Update data bindings.\n   */\n  _updateBindings() {\n    toggleClass(this.el, 'editing', this._editingCount);\n  }\n\n\n  /**\n   * Add handles to the header that can be grabbed for resizing.\n   */\n  _initResize() {\n\n    this._resizeEls = [];\n\n    var ths = this.tableEl.querySelectorAll('thead th');\n\n    each(ths, function(th) {\n      th.innerHTML = '<span class=\"spark-table__resize spark-table__resize--left\"></span>' + th.innerHTML + '<span class=\"spark-table__resize spark-table__resize--right\"></span>';\n      this._resizeEls.push(th);\n    }.bind(this));\n  }\n\n\n  /**\n   * Initialize rows active states.\n   */\n  _initRows() {\n\n    each(this.tableEl.querySelectorAll('td.spark-table__checkbox input:checked'), function(c) {\n      this._makeRowActive(getParent(c, 'tr'));\n    }.bind(this));\n  }\n\n\n  /**\n   * Set the size of each column as a percentage so it can be adjusted\n   * while cells are resized.\n   * @param {String} unit Optional\n   * @param {Boolean} force Optional\n   */\n  _sizeColumns(unit, force) {\n\n    unit = unit || '%';\n\n    if (this._sizeColumnsRun && !force) {\n      return;\n    }\n\n    var width = this.tableEl.offsetWidth;\n\n    each(this.tableEl.querySelectorAll('thead th'), function(th) {\n      if (unit === '%')\n        th.style.width = (Math.round(th.offsetWidth / width * 100000) / 100000) * 100 + '%';\n      else\n        th.style.width = th.offsetWidth + 'px';\n    }.bind(this));\n\n    this._sizeColumnsRun = true;\n  }\n\n\n  /**\n   * Initialize expand/collapse rows.\n   */\n  _initExpands() {\n\n    var expands = this.tableEl.querySelectorAll('.spark-table-expand');\n\n    this._expands = [];\n\n    each(expands, function(e) {\n      this._expands.push(new Expand(e, {\n        onBeforeExpand: this._onBeforeExpand.bind(this)\n      }));\n    }.bind(this));\n  }\n\n\n  /**\n   * Before an expand is called, size all the columns so that\n   * the expand does cause width changes.\n   */\n  _onBeforeExpand() {\n    this._sizeColumns();\n  }\n\n\n  /**\n   * When we are clicked determine the proper action to take.\n   * @param  {Object} e\n   */\n  _onClick(e) {\n\n    var target = e.target || e.srcElement;\n    var row;\n    var selectAll;\n    var actionTaken = false;\n    var clearClicked = true;\n\n    // Select all rows checkbox\n    if ((selectAll = getParent(target, '.spark-table__select-all', this.el)) && !matches(target, 'input[type=\"checkbox\"]')) {\n      this._toggleSelectAll(selectAll);\n      actionTaken = true;\n    }\n    // Editable field\n    else if (matches(target, 'input:not([type=\"checkbox\"]):not([type=\"file\"]), select')) {\n\n      if (!target.disabled) {\n\n        // Listen for double clicks on a spreadsheet\n        if (this.isSpreadsheet) {\n          clearClicked = false;\n          if (this._checkDoubleClick(target)) {\n            clearClicked = true;\n            this._activateInput(target);\n          }\n        }\n\n        actionTaken = true;\n      }\n    }\n    // Edit button\n    else if (matches(target, '.spark-table__edit-row')) {\n      this._editRow(getParent(target, 'tr', this.el));\n      actionTaken = true;\n    }\n    // Delete button\n    else if (matches(target, '.spark-table__delete-row')) {\n      this._confirmDelete(getParent(target, 'tr', this.el));\n      actionTaken = true;\n    }\n    // Save button\n    else if (matches(target, '.spark-table__edit-row-save')) {\n      this._saveRow(getParent(target, 'tr', this.el));\n      actionTaken = true;\n    }\n    // Cancel button\n    else if (matches(target, '.spark-table__edit-row-cancel')) {\n      this._cancelRow(getParent(target, 'tr', this.el));\n      actionTaken = true;\n    }\n    // Select a row\n    else if (!getParent(target, 'button, a, .spark-toggle-switch', this.el) && !matches(target, '.spark-table__checkbox input[type=\"checkbox\"], select') && (row = getParent(target, 'tbody tr', this.el))) {\n      if (!(row.querySelector('.spark-table__checkbox input[type=\"checkbox\"]') || {}).disabled) {\n        this._toggleRowActive(row);\n        actionTaken = true;\n      }\n    }\n\n    if (clearClicked) {\n      this._clearClicked();\n    }\n\n    if (actionTaken) {\n      e.preventDefault();\n    }\n  }\n\n\n  /**\n   * When the change event fires on our element.\n   * @param {Object} e\n   */\n  _onChange(e) {\n\n    var target = e.target || e.srcElement;\n    var row;\n    var selectAll;\n\n    // Select all rows checkbox. We have to invert the checked value here because it\n    // get toggled back in the select all call.\n    if ((selectAll = getParent(target, '.spark-table__select-all', this.el))) {\n      target.checked = !target.checked;\n      this._toggleSelectAll(selectAll);\n    }\n    // Checkbox for a row\n    else if (matches(target, '.spark-table__checkbox input[type=\"checkbox\"]') && (row = getParent(target, 'tbody tr', this.el))) {\n      this._toggleRowActive(row);\n    }\n  }\n\n\n  /**\n   * If this is a spreadsheet, whenever a field gains focus, highlight its parent.\n   * @param {Object} e\n   */\n  _onFocus(e) {\n\n    var target = e.target || e.srcElement;\n\n    if (!this.isSpreadsheet || !matches(target, 'input:not([type=\"checkbox\"]), select')) {\n      return;\n    }\n\n    var td = getParent(target, 'td', this.el);\n    addClass(td, 'focus');\n  }\n\n\n  /**\n   * If this is a spreadsheet, whenever a field gains focus, highlight its parent.\n   * @param {Object} e\n   */\n  _onBlur(e) {\n\n    if (!this.isSpreadsheet) {\n      return;\n    }\n\n    var target = e.target || e.srcElement;\n    var td = getParent(target, 'td', this.el);\n    removeClass(td, 'focus');\n    this._deactivateInput(target);\n  }\n\n\n  /**\n   * When a key is pressed, if this is a spreadsheet then we should detect\n   * enter or arrow keys.\n   * @param {Object} e\n   */\n  _onKeydown(e) {\n\n    var target = e.target || e.srcElement;\n\n    if (!this.isSpreadsheet || !matches(target, 'input:not([type=\"checkbox\"]), select')) {\n      return;\n    }\n\n    var code = e.keyCode || e.which;\n\n    switch (code) {\n      case this._keyCodes.ENTER:\n        this._activateInputOrFocusDown(target);\n        break;\n      case this._keyCodes.ESCAPE:\n        this._deactivateInput(target);\n        break;\n      case this._keyCodes.DOWN:\n        this._focusDown(target);\n        break;\n      case this._keyCodes.UP:\n        this._focusUp(target);\n        break;\n      case this._keyCodes.LEFT:\n        this._focusLeft(target);\n        break;\n      case this._keyCodes.RIGHT:\n        this._focusRight(target);\n        break;\n    }\n  }\n\n\n  /**\n   * Listen for a touch and hold on an input.\n   * @param {Object} e\n   */\n  _onTouchstart(e) {\n\n    var target = e.target || e.srcElement;\n\n    if (!this.isSpreadsheet || !matches(target, 'input:not([type=\"checkbox\"])')) {\n      return;\n    }\n\n    this._touchStartEl = target;\n    this._touchStartTime = Date.now();\n    this._touchStartTimer = setTimeout(this._onTouchHold.bind(this), 1000);\n  }\n\n\n  /**\n   * Listen for the end of a touch to cancel the hold timer.\n   * @param {Object} e\n   */\n  _onTouchend(e) {\n\n    var target = e.target || e.srcElement;\n\n    if (!this._touchStartEl || target !== this._touchStartEl) {\n      return;\n    }\n\n    this._touchStartEl = null;\n    this._touchStartTime = null;\n    clearTimeout(this._touchStartTimer);\n  }\n\n\n  /**\n   * When the user has held on an input for the defined amount of time.\n   */\n  _onTouchHold() {\n\n    this._activateInput(this._touchStartEl);\n\n    this._touchStartEl = null;\n    this._touchStartTime = null;\n    clearTimeout(this._touchStartTimer);\n  }\n\n\n  /**\n   * When the mouse is depressed.\n   * @param {Object} e\n   */\n  _onMouseDown(e) {\n\n    var target = e.target || e.srcElement;\n\n    if (!this.isResizable || !matches(target, '.spark-table__resize')) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this._lastScreenX = e.screenX;\n\n    this._sizeColumns('px', true);\n\n    this._resizingEl = target.parentNode;\n    var index = this._resizeEls.indexOf(this._resizingEl);\n\n    if (hasClass(target, 'spark-table__resize--left')) {\n      this._resizingEl = this._resizeEls[index - 1];\n    }\n\n    if (!this._resizingEl) {\n      return;\n    }\n\n    this._addResizeListeners();\n  }\n\n\n  /**\n   * When the mouse moves after being depressed, resize the columns.\n   * @param {Object} e\n   */\n  _onMouseMove(e) {\n\n    var x = e.screenX;\n    var d = x - this._lastScreenX;\n\n    // No delta change\n    if (!d) {\n      return;\n    }\n\n    e.preventDefault();\n\n    var w = this._resizingEl.offsetWidth;\n    var tW = this.tableEl.offsetWidth;\n    var newW = w + d;\n    var newTW = tW + d;\n\n    this._resizingEl.style.width = newW + 'px';\n    this.tableEl.style.width = newTW + 'px';\n\n    // Size was not affected because we're too small\n    if (this._resizingEl.offsetWidth === w || this.tableEl.offsetWidth < this.tableEl.parentNode.offsetWidth) {\n      this._resizingEl.style.width = w + 'px';\n      this.tableEl.style.width = tW + 'px';\n    }\n\n    this._lastScreenX = x;\n  }\n\n\n  /**\n   * When the mouse is released, stop tracking mouse move events and\n   * convert table sizes to percentages.\n   * @param {Object} e\n   */\n  _onMouseUp() {\n    this._sizeColumns('%', true);\n    this.tableEl.style.width = (this.tableEl.offsetWidth / this.tableEl.parentNode.offsetWidth * 100) + '%';\n    this._removeResizeListeners();\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nTable.prototype._whitelistedParams = ['isSpreadsheet', 'isEditRows', 'isResizable', 'confirmDelete', 'onRowSave', 'onRowDelete'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nTable.prototype.defaults = {\n  el: null,\n  tableEl: null,\n  isSpreadsheet: null,\n  isEditRows: null,\n  isResizable: null,\n  onRowSave: null,\n  onRowDelete: null,\n  confirmDelete: null,\n  _expands: null,\n  _keyCodes: {\n    ENTER: 13,\n    UP: 38,\n    DOWN: 40,\n    LEFT: 37,\n    RIGHT: 39,\n    ESCAPE: 27\n  },\n  _editingCount: 0,\n  _lastClickTime: 0,\n  _lastClickEl: null,\n  _lastScreenX: 0,\n  _touchStartTime: 0,\n  _touchStartEl: null,\n  _resizeEls: null,\n  _resizingEl: null,\n  _sizeColumnsRun: false,\n  _onClickBound: null,\n  _onChangeBound: null,\n  _onFocusBound: null,\n  _onBlurBound: null,\n  _onKeydownBound: null,\n  _onTouchstartBound: null,\n  _onTouchendBound: null,\n  _onMouseDownBound: null,\n  _onMouseMoveBound: null,\n  _onMouseUpBound: null\n};\n\nexport default Table;\n"]}