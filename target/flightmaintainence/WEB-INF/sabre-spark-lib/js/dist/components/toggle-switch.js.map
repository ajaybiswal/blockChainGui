{"version":3,"sources":["components/toggle-switch.js"],"names":["noop","ToggleSwitch","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","toggle","input","checked","deactivate","activate","setValue","check","onChange","getValue","clearValue","enable","removeAttribute","disable","setAttribute","_cacheElements","querySelector","_onKeydownBound","_onKeydown","bind","_onKeyupBound","_onKeyup","addEventListener","_removeEventListeners","removeEventListener","e","target","code","keyCode","which","preventDefault","prototype","_whitelistedParams","defaults"],"mappings":"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","file":"toggle-switch.js","sourcesContent":["/**\n * # ToggleSwitch\n * ToggleSwitch and collapse an element.\n *\n * @example\n * new ToggleSwitch(el);\n *\n * @module components/ToggleSwitch.js\n */\nimport BaseComponent from './base';\nimport getParent from '../helpers/traversal/get-parent';\nimport debounce from '../helpers/util/debounce';\n\nconst noop = function() {};\n\nclass ToggleSwitch extends BaseComponent {\n\n  /**\n   * ToggleSwitch constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n  }\n\n\n  /**\n   * Toggle the ToggleSwitch state.\n   */\n  toggle() {\n    if (!this.input) return this;\n    return this.input.checked ? this.deactivate() : this.activate();\n  }\n\n\n  /**\n   * Activate toggle state\n   */\n  activate() {\n    return this.setValue(true);\n  }\n\n\n  /**\n   * Deactivate toggle state\n   */\n  deactivate() {\n    return this.setValue(false);\n  }\n\n\n  /**\n   * Set the value.\n   * @param {Boolean} check\n   */\n  setValue(check) {\n    if (this.input) {\n      if (this.input.checked !== check) {\n        this.input.checked = check;\n        (this.onChange || noop)(check, this);\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Get the value.\n   * @return {Boolean}\n   */\n  getValue() {\n    return this.input && this.input.checked;\n  }\n\n\n  /**\n   * Clear the checked value. Not very helpful but here for parity.\n   */\n  clearValue() {\n    return this.deactivate();\n  }\n\n\n  /**\n   * Enable the input.\n   */\n  enable() {\n    if (this.input) this.input.removeAttribute('disabled');\n    return this;\n  }\n\n\n  /**\n   * Disable the input.\n   */\n  disable() {\n    if (this.input) this.input.setAttribute('disabled', '');\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the element.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n    this.el = el;\n    this.input = el.querySelector('.spark-toggle__input');\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onKeydownBound = this._onKeydown.bind(this);\n    this._onKeyupBound = debounce(this._onKeyup.bind(this), 100);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n    this.el.addEventListener('keydown', this._onKeydownBound);\n    this.el.addEventListener('keyup', this._onKeyupBound);\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n    this.el.removeEventListener('keydown', this._onKeydownBound);\n    this.el.removeEventListener('keyup', this._onKeyupBound);\n  }\n\n\n  /**\n   * Allow onChange when the space key is pressed\n   * @param {Object} e\n   */\n  _onKeyup(e) {\n    if (!getParent(e.target, '.spark-toggle-switch, spark-toggle-switch__handle', this.el)) {\n      return;\n    }\n\n    var code = e.keyCode || e.which;\n\n    if (code === 32) {\n      let check = this.getValue();\n      (this.onChange || noop)(check, this);\n    }\n  }\n\n\n  /**\n   * When the space or enter key is pressed on the toggle, toggle!\n   * @param {Object} e\n   */\n  _onKeydown(e) {\n\n    if (!getParent(e.target, '.spark-toggle-switch, spark-toggle-switch__handle', this.el)) {\n      return;\n    }\n\n    var code = e.keyCode || e.which;\n\n    switch (code) {\n      case 32:\n        // space\n        // Skip, native works as expected\n        break;\n      case 13:\n        // enter\n        e.preventDefault();\n        this.toggle();\n        break;\n      case 39:\n      case 40:\n        // right\n        // down\n        e.preventDefault();\n        this.activate();\n        break;\n      case 37:\n      case 38:\n        // left\n        // up\n        e.preventDefault();\n        this.deactivate();\n        break;\n    }\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nToggleSwitch.prototype._whitelistedParams = ['onChange'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nToggleSwitch.prototype.defaults = {\n  el: null,\n  input: null,\n  onChange: null,\n  _onKeydownBound: null\n};\n\nexport default ToggleSwitch;\n"]}