{"version":3,"sources":["components/header.js"],"names":["Header","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","_determineInitialSize","update","_removeEventListeners","_removePlaceholder","_cacheElements","_parseParams","_ensureActiveAtMoreSwapIndex","checkFixed","setTimeout","_determineMenuSize","bind","fixed","scrollTop","window","pageYOffset","undefined","document","body","isCondensed","fixedDistance","navEl","querySelector","menuEl","listEl","toggleEl","menu","onToggle","_onToggleClickBound","_onToggleClick","children","length","listEls","Array","prototype","slice","call","_createListMore","_createPlaceholder","_determineInitialSizeBound","_onResizeBound","_onResize","_onScrollBound","_onScroll","_onMoreClickBound","_onMoreClick","_onNavClickBound","_onNavClick","addEventListener","listMoreEl","listMoreListEl","removeEventListener","_getCurrentBreakpoint","lastBreakpoint","currentBreakpoint","clientWidth","breakpoints","setAttribute","div","createElement","innerHTML","outerHTML","appendChild","placeholder","_disablePlaceholderLinkTab","parentNode","removeChild","links","querySelectorAll","i","len","item","buttons","k","li","isSwap","_isMenuBreakpoint","_removeListMore","_toggleCollapsed","items","_getItemsToShowAndHide","show","hide","_listenForReadyStateChange","readyState","run","name","indexOf","width","hideIndex","_addListMore","childrenWidth","moreSwapIndex","toHide","splice","toShowIndex","toShow","push","parents","index","_resetMenuChildren","enable","isCollapsed","_enableTopLevelToggling","_removeAllCachedLists","_disableTopLevelToggling","e","target","preventDefault","isActive","_openActiveParents","_whitelistedParams","defaults"],"mappings":"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","file":"header.js","sourcesContent":["/**\n * # Header\n * A primary page header/navigation.\n *\n * @example\n * new Header(el, {\n *   // Optional. Alternate breakpoint values.\n *   breakpoints: {\n *    xs: {\n *      min: 0,\n *      max: 639\n *    }\n *    // ...\n *  }\n * });\n *\n * @module components/header.js\n */\nimport BaseComponent from './base';\nimport Menu from './menu';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport addClass from '../helpers/dom/add-class';\nimport removeClass from '../helpers/dom/remove-class';\nimport hasClass from '../helpers/dom/has-class';\nimport getIndex from '../helpers/traversal/get-index';\nimport appendChildren from '../helpers/manipulation/append-children';\nimport insertBefore from '../helpers/manipulation/insert-before';\nimport {get as getBreakpoint} from '../helpers/dom/breakpoint';\nimport getParent from '../helpers/traversal/get-parent';\nimport getParents from '../helpers/traversal/get-parents';\nimport {number as parseNumberAttribute} from '../helpers/dom/parse-attribute';\n\nclass Header extends BaseComponent {\n\n  /**\n   * Header constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n    this._determineInitialSize();\n  }\n\n  /**\n   * Update the elements used.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    this._removeEventListeners();\n    this._removePlaceholder();\n    this._cacheElements(el || this.el);\n    this._parseParams();\n    this._addEventListeners();\n    this._ensureActiveAtMoreSwapIndex();\n    this.checkFixed();\n\n    // Run on the next frame so sizes have updated\n    setTimeout(function() {\n      this._determineMenuSize();\n    }.bind(this), 0);\n\n    return this;\n  }\n\n\n  /**\n   * Check of we should be fixed.\n   */\n  checkFixed() {\n\n    if (!this.fixed) {\n      return this;\n    }\n\n    var scrollTop = window.pageYOffset !== undefined ? window.pageYOffset : window.document.body.scrollTop;\n    var isCondensed = scrollTop > this.fixedDistance;\n    toggleClass(this.el, 'spark-header--condensed', isCondensed);\n    toggleClass(document.body, 'spark-header-condensed', isCondensed);\n\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the tabs list, each tab and each panel.\n   * Set which tab is active, or use the first.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n\n    this.el = el;\n    this.navEl = this.el.querySelector('.spark-header__nav');\n    this.menuEl = this.navEl && this.navEl.querySelector('.spark-header__menu');\n    this.listEl = this.menuEl && this.menuEl.querySelector('.spark-header__list');\n    this.toggleEl = this.el.querySelector('.spark-header__toggle');\n\n    // Create a new instance of the menu component\n    if (this.menuEl) {\n      this.menu = new Menu(this.menuEl, {\n        onToggle: this._onToggleClickBound = this._onToggleClick.bind(this)\n      });\n    }\n\n    // The items in the list need to show/hide based on the width of the container.\n    // Cache these items so we can manipulate their display independent of what is\n    // currently in the DOM. Also, create the \"More\" dropdown which will be shown\n    // and hidden based on availabile space.\n    if (this.listEl && this.listEl.children.length) {\n      this.listEls = Array.prototype.slice.call(this.listEl.children, 0);\n      this._createListMore();\n    }\n\n    // Create a clone of the header which will NOT be affected by changes in breakpoint.\n    // This lets us continue to measure how many list elements will fit. Since we go to the\n    // \"condensed\" view when we are at the sm/xs breakpoint OR only one item will fit in the nav,\n    // we can't rely on breakpoints alone to determine what to show. Without a cloned placeholder\n    // it is impossible to continue to measure the available space once we show the condensed view.\n    if (this.listEl) {\n      this._createPlaceholder();\n    }\n  }\n\n\n  /**\n   * Parse parameters from the elements.\n   */\n  _parseParams() {\n    this.fixed = this.fixed !== null ? this.fixed : hasClass(this.el, 'spark-header--fixed');\n    this.fixedDistance = this.fixedDistance !== null ? this.fixedDistance : parseNumberAttribute(this.el, 'data-fixed-distance', 10);\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n\n    this._determineInitialSizeBound = this._determineInitialSize.bind(this);\n    this._onResizeBound = this._onResize.bind(this);\n    this._onScrollBound = this._onScroll.bind(this);\n    this._onMoreClickBound = this._onMoreClick.bind(this);\n    this._onNavClickBound = this._onNavClick.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n\n    if (!this.listEl) {\n      return;\n    }\n\n    window.addEventListener('resize', this._onResizeBound);\n    window.addEventListener('orientationchange', this._onResizeBound);\n\n    if (this.listMoreEl) {\n      this.listMoreListEl.addEventListener('click', this._onMoreClickBound);\n    }\n\n    if (this.toggleEl) {\n      this.toggleEl.addEventListener('click', this._onToggleClickBound);\n    }\n\n    if (this.navEl) {\n      this.navEl.addEventListener('click', this._onNavClickBound);\n    }\n\n    if (this.fixed) {\n      window.addEventListener('scroll', this._onScrollBound);\n    }\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n\n    if (!this.listEl) {\n      return;\n    }\n\n    window.removeEventListener('resize', this._onResizeBound);\n    window.removeEventListener('orientationchange', this._onResizeBound);\n\n    if (this.listMoreEl) {\n      this.listMoreListEl.removeEventListener('click', this._onMoreClickBound);\n    }\n\n    if (this.toggleEl) {\n      this.toggleEl.removeEventListener('click', this._onToggleClickBound);\n    }\n\n    if (this.navEl) {\n      this.navEl.removeEventListener('click', this._onNavClickBound);\n    }\n\n    if (this.fixed) {\n      window.removeEventListener('scroll', this._onScrollBound);\n    }\n  }\n\n\n  /**\n   * Get the current breakpoint for the header.\n   */\n  _getCurrentBreakpoint() {\n    this.lastBreakpoint = this.currentBreakpoint;\n    this.currentBreakpoint = getBreakpoint(this.el.clientWidth, this.breakpoints);\n    this.el.setAttribute('data-breakpoint', this.currentBreakpoint);\n  }\n\n\n  /**\n   * Create a placeholder for the whole header so that we can keep track\n   * of the width of each child element regardless of whether or not we're\n   * condensed. Condensed styles do not apply to instances of the element\n   * with the placeholder class.\n   */\n  _createPlaceholder() {\n\n    var div = document.createElement('div');\n    div.innerHTML = this.navEl.outerHTML;\n\n    var el = div.children[0];\n    el.setAttribute('aria-hidden', true);\n\n    addClass(el, 'spark-header__placeholder');\n\n    this.el.appendChild(el);\n\n    // Cache the common elements\n    this.placeholder = {\n      el: el,\n      menuEl: el.querySelector('.spark-header__menu'),\n      listEl: el.querySelector('.spark-header__list')\n    };\n\n    // Add a copy of the \"more\" button to the list so we always know what size it would be\n    if (this.listMoreEl) {\n      this.placeholder.listEl.innerHTML += this.listMoreEl.outerHTML;\n      this.placeholder.listMoreEl = this.placeholder.listEl.querySelector('.spark-header__more');\n    }\n\n    this._disablePlaceholderLinkTab(el);\n  }\n\n\n  /**\n   * Remove the placeholder\n   */\n  _removePlaceholder() {\n\n    if (this.placeholder) {\n      this.placeholder.el.parentNode.removeChild(this.placeholder.el);\n      this.placeholder.menuEl.parentNode.removeChild(this.placeholder.menuEl);\n      this.placeholder.listEl.parentNode.removeChild(this.placeholder.listEl);\n    }\n\n    if (this.listMoreEl) {\n      this.placeholder.listMoreEl.parentNode.removeChild(this.placeholder.listMoreEl);\n    }\n  }\n\n\n  /**\n   * Disable tabbing for items in the placeholder.\n   * @param {Element} el\n   */\n  _disablePlaceholderLinkTab(el) {\n\n    // Set a negative tab index on each link in the placeholder\n    var links = el.querySelectorAll('.spark-menu__list-link, .spark-menu__list-expand');\n    var i = 0;\n    var len = links.length;\n\n    for (; i < len; i++) {\n      links.item(i).setAttribute('tabindex', -1);\n    }\n\n    // Set a negative tab index on each button in the placeholder\n    var buttons = el.querySelectorAll('button');\n    var k = 0;\n    len = buttons.length;\n\n    for (; k < len; k++) {\n      buttons.item(k).setAttribute('tabindex', -1);\n    }\n  }\n\n\n  /**\n   * Create a place to store overflow items of the list.\n   * Also add this item to the placeholder element so we always know\n   * which size it would be.\n   */\n  _createListMore() {\n\n    var div = document.createElement('div');\n    div.innerHTML = '<li><a class=\"spark-menu__list-link spark-menu__ignore\" tabindex=\"0\" title=\"More Items\"><i class=\"spark-icon-menu-ellipsis-horizontal spark-icon--fill\"></i></a><ul class=\"spark-menu__list\"></ul></li>';\n\n    var li = div.children[0];\n    addClass(li, 'spark-menu__list-item spark-header__more');\n\n    this.listMoreEl = li;\n    this.listMoreListEl = li.querySelector('ul');\n  }\n\n\n  /**\n   * Determine the menu size..\n   */\n  _determineInitialSize() {\n    addClass(this.el, 'spark-header--visible');\n    this._ensureActiveAtMoreSwapIndex();\n    this._determineMenuSize();\n  }\n\n\n  /**\n   * Determine how many nav items can fit.\n   * @param {Boolean} isSwap Optional Is this a swapping event? If so, ignore redundancy checks.\n   */\n  _determineMenuSize(isSwap) {\n\n    // Don't do anything w/o primary nav.\n    if (!this.listEls || !this.listEls.length) {\n      return;\n    }\n\n    // If we're at the XS or SM breakpoint, don't worry about this stuff.\n    if (this._isMenuBreakpoint(['xs', 'sm'])) {\n      this._removeListMore();\n      return this._toggleCollapsed(true);\n    }\n\n    // Get the items to show and hide\n    var items = this._getItemsToShowAndHide();\n\n    // Add a class saying that the size has been determined. This removes the overflow:hidden\n    // so that dropdowns will appear.\n    addClass(this.el, 'spark-header--overflow-checked');\n\n    // If there are less than two elements to show and we have hidden elements, collapse the nav.\n    if (items.show.length < 2 && items.hide.length) {\n      this._removeListMore();\n      return this._toggleCollapsed(true);\n    }\n\n    // We aren't at the XS breakpoint and there aren't too few items to show, so disable collapsing\n    this._toggleCollapsed(false);\n\n    // If the number of children to hide is the same as those already hidden, stop.\n    if (items.hide.length === this.listMoreListEl.children.length && !isSwap) {\n\n      if (!items.hide.length) {\n        this._removeListMore();\n      }\n\n      return;\n    }\n\n    // Add the elements we're supposed to show before the \"more element\"\n    insertBefore(this.listEl, this.listMoreEl, items.show);\n\n    // If we have items to hide, append them to the more element\n    if (items.hide.length) {\n      appendChildren(this.listMoreListEl, items.hide);\n    }\n    // Otherwise, remove the more element\n    else {\n      this._removeListMore();\n    }\n  }\n\n\n  /**\n   * Listen for the ready state change and rerun the menu size determination.\n   */\n  _listenForReadyStateChange() {\n\n    // Already loaded\n    if (document.readyState === 'complete' || document.readyState === 'loaded') {\n      return;\n    }\n\n    // Bound listener\n    var run = function() {\n      if (document.readyState === 'complete' || document.readyState === 'loaded') {\n        this._determineMenuSize();\n        document.removeEventListener('readystatechange', run);\n      }\n    }.bind(this);\n\n    // Only run once\n    document.addEventListener('readystatechange', run);\n  }\n\n\n  /**\n   * Check the primary nav breakpoint.\n   * @param {String|Array} name A string or array of string names of breakpoints to check for\n   */\n  _isMenuBreakpoint(name) {\n    this._getCurrentBreakpoint();\n    return name instanceof Array ? name.indexOf(this.currentBreakpoint) !== -1 : this.currentBreakpoint === 'xs';\n  }\n\n\n  /**\n   * Get the items to show and hide.\n   * @return {Object}\n   */\n  _getItemsToShowAndHide() {\n\n    var width = this.placeholder.listEl.clientWidth;\n    var children = this.placeholder.listEl.children;\n    var i = 0;\n    var len = children.length;\n    var hideIndex = -1;\n\n    this._addListMore();\n\n    // Always include the width of the more button.\n    var childrenWidth = this.placeholder.listMoreEl.clientWidth || 0;\n\n    // Loop through the children until we hit a point where they don't fit anymore\n    for (; i < len && hideIndex === -1; i++) {\n      childrenWidth += children[i].clientWidth;\n      if (childrenWidth > width) {\n        hideIndex = i;\n      }\n    }\n\n    // Find all the children that fit and don't fit\n    var items = {\n      show: hideIndex !== -1 ? Array.prototype.slice.call(this.listEls, 0, hideIndex) : this.listEls,\n      hide: hideIndex !== -1 ? Array.prototype.slice.call(this.listEls, hideIndex) : []\n    };\n\n    // If we have an index to swap for the last \"show\" element, replace that element\n    if (this.moreSwapIndex > -1 && this.moreSwapIndex >= items.show.length) {\n\n      // Remove the last element from the show array\n      var toHide = items.show.splice(items.show.length - 1, 1)[0];\n\n      // Get the index to remove from the hide array. Account for the offset.\n      var toShowIndex = this.moreSwapIndex - hideIndex;\n\n      // Remove the desired element from the hide array\n      var toShow = items.hide.splice(toShowIndex, 1)[0];\n\n      // Add the toShow element to the end of the show array\n      items.show.push(toShow);\n\n      // Insert the toHide element into the hide array at the position of\n      // the element we just removed from the hide array.\n      items.hide.splice(toShowIndex, 0, toHide);\n    }\n\n    return items;\n  }\n\n\n  /**\n   * Ensure that any active item is set to the more swap index. This ensures\n   * that the active item is always visible on the screen.\n   */\n  _ensureActiveAtMoreSwapIndex() {\n\n    if (!this.listEls || !this.listEls.length) {\n      return;\n    }\n\n    var el = this.el.querySelector('[class*=\"list-item\"].active');\n    if (el) {\n      var parents = getParents(el, '.spark-menu__list-item', this.el);\n\n      if (parents && parents[parents.length - 1]) {\n        el = parents[parents.length - 1];\n      }\n\n      var index = getIndex(this.listEls, el);\n\n      if (index !== this.moreSwapIndex) {\n        this.moreSwapIndex = index;\n      }\n    }\n  }\n\n  /**\n   * Add a placeholder for overflow items to the list.\n   */\n  _addListMore() {\n    if (this.listMoreEl.parentNode !== this.listEl) {\n      this.listEl.appendChild(this.listMoreEl);\n    }\n  }\n\n\n  /**\n   * Remove a placeholder for overflow items from the primary nav.\n   */\n  _removeListMore() {\n    if (this.listMoreEl.parentNode) {\n      this.listMoreEl.parentNode.removeChild(this.listMoreEl);\n    }\n  }\n\n\n  /**\n   * Reset the children of the primary navigation.\n   */\n  _resetMenuChildren() {\n    this.moreSwapIndex = -1;\n    removeClass(this.el, 'spark-header--overflow-checked');\n    appendChildren(this.listEl, this.listEls);\n  }\n\n\n  /**\n   * Toggle the collapsed nav style.\n   * @param {Boolean} enable\n   */\n  _toggleCollapsed(enable) {\n\n    // Same collapsed state is already set\n    if (enable === this.isCollapsed) {\n      return;\n    }\n\n    // Reset children and remove a special no-animate class to top-level items when we collapse\n    if (enable) {\n      this._enableTopLevelToggling();\n      this._resetMenuChildren();\n    } else {\n      if (this.menu) {\n        this.menu._removeAllCachedLists();\n      }\n      this._disableTopLevelToggling();\n    }\n\n    this.isCollapsed = enable;\n    toggleClass(this.el, 'spark-header--collapsed', enable);\n    toggleClass(this.el, 'spark-header--visible', !enable);\n  }\n\n\n  /**\n   * Enable toggling on top-level items.\n   */\n  _enableTopLevelToggling() {\n\n    var i = 0;\n    var len = this.listEls.length;\n\n    for (; i < len; i++) {\n      removeClass(this.listEls[i], 'spark-no-animate');\n    }\n  }\n\n\n  /**\n   * Disable toggling on top-level items.\n   */\n  _disableTopLevelToggling() {\n\n    var i = 0;\n    var len = this.listEls.length;\n\n    for (; i < len; i++) {\n      addClass(this.listEls[i], 'spark-no-animate');\n    }\n  }\n\n\n  /**\n   * When the window resizes, redetermine the size of the primary nav elements.\n   */\n  _onResize() {\n\n    // Ensure that any active item we may have is at the swap index\n    this._ensureActiveAtMoreSwapIndex();\n    this._determineMenuSize();\n\n    // If we are fixed, do the scroll check\n    if (this.fixed) {\n      this.checkFixed();\n    }\n  }\n\n\n  /**\n   * Check to see if the header should be fixed.\n   * @param {Object} e\n   */\n  _onScroll() {\n    this.checkFixed();\n  }\n\n\n  /**\n   * When a link in the more list is clicked, swap it with the last element in the visible list.\n   * @param {Object} e\n   */\n  _onMoreClick(e) {\n\n    // Don't do any swapping if we're in a collapsed state\n    if (this.isCollapsed) {\n      return;\n    }\n\n    // Get the index of the clicked element\n    var li = getParent(e.target, 'li', this.listMoreListEl);\n\n    // Save the index of the element to be swapped\n    this.moreSwapIndex = getIndex(this.listEls, li);\n\n    // Redetermine the primary nav size\n    this._determineMenuSize(true);\n  }\n\n\n  /**\n   * When the toggle is clicked, toggle the active state on the nav\n   * @param {Object} e\n   */\n  _onToggleClick(e) {\n    e.preventDefault();\n    this.isActive = !this.isActive;\n    toggleClass(this.navEl, 'active', this.isActive);\n    this.menu._openActiveParents();\n  }\n\n\n  /**\n   * When the nav is clicked, set to inactive.\n   * @param {Object} e\n   */\n  _onNavClick(e) {\n    if (e.target === this.navEl && this.isCollapsed) {\n      this.isActive = !this.isActive;\n      removeClass(this.navEl, 'active');\n    }\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nHeader.prototype._whitelistedParams = ['breakpoints', 'fixed', 'fixedDistance'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nHeader.prototype.defaults = {\n  el: null,\n  fixed: null,\n  fixedDistance: null,\n  navEl: null,\n  menuEl: null,\n  listEl: null,\n  listEls: null,\n  listMoreEl: null,\n  listMoreListEl: null,\n  placeholder: null,\n  toggleEl: null,\n  lastBreakpoint: null,\n  currentBreakpoint: null,\n  isActive: false,\n  isCollapsed: null,\n  moreSwapIndex: -1,\n  menu: null,\n  breakpoints: null,\n  _onResizeBound: null,\n  _onScrollBound: null,\n  _onMoreClickBound: null,\n  _onToggleClickBound: null,\n  _onNavClickBound: null\n};\n\nexport default Header;\n"]}