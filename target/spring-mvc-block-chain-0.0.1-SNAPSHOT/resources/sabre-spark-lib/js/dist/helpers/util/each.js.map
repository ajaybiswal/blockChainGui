{"version":3,"sources":["helpers/util/each.js"],"names":["each","list","cb","Error","i","len","length","undefined","hasOwnProperty"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;AAeA,SAASA,IAAT,CAAcC,IAAd,EAAoBC,EAApB,EAAwB;;AAEtB,MAAI,CAACD,IAAL,EAAW;AACT;AACD;;AAED,MAAI,OAAOC,EAAP,KAAc,UAAlB,EAA8B;AAC5B,UAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,MAAIC,IAAI,CAAR;AACA,MAAIC,MAAMJ,KAAKK,MAAf;;AAEA;AACA,MAAID,QAAQE,SAAZ,EAAuB;AACrB,SAAKH,CAAL,IAAUH,IAAV,EAAgB;AACd,UAAIG,MAAM,WAAN,IAAqBH,KAAKO,cAAL,CAAoBJ,CAApB,CAAzB,EAAiD;AAC/CF,WAAGE,CAAH,EAAMH,KAAKG,CAAL,CAAN;AACD;AACF;AACF;AACD;AAPA,OAQK;AACH,aAAOA,IAAIC,GAAX,EAAgBD,GAAhB,EAAqB;AACnBF,WAAGD,KAAKG,CAAL,CAAH;AACD;AACF;AACF;;kBAEcJ,I","file":"each.js","sourcesContent":["/**\n * # Each\n * Apply a callback function to a list of any kind: Array, NodeList, HTMLCollection or Object.\n *\n * @param {Array|NodeList|HTMLCollection|Object} list\n * @param {Function} cb\n *\n * @example\n * each([], callback);\n * each(el.children, callback);\n * each(el.childNodes, callback);\n * each({}, callback);\n *\n * @module helpers/util/each.js\n */\nfunction each(list, cb) {\n\n  if (!list) {\n    return;\n  }\n\n  if (typeof cb !== 'function') {\n    throw new Error('Cannot invoke `each` without a callback!');\n  }\n\n  let i = 0;\n  let len = list.length;\n\n  // Object\n  if (len === undefined) {\n    for (i in list) {\n      if (i !== 'prototype' && list.hasOwnProperty(i)) {\n        cb(i, list[i]);\n      }\n    }\n  }\n  // Array-like\n  else {\n    for (; i < len; i++) {\n      cb(list[i]);\n    }\n  }\n}\n\nexport default each;\n"]}