{"version":3,"sources":["components/popover.js"],"names":["noop","Popover","el","params","_bindEventListenerCallbacks","_addEventListeners","open","closeTimer","clearTimeout","_checkFixedPosition","affix","targetEl","affixTo","update","contentEl","caretEl","anchorX","anchorY","isFixed","popoverFocusableEls","querySelectorAll","length","Array","prototype","slice","call","firstPopoverFocusableEl","lastPopoverFocusableEl","_addWindowEventListeners","isActive","e","document","createEvent","initEvent","dispatchEvent","_updateAttributes","focus","complete","onOpen","close","_removeWindowEventListeners","setTimeout","_finishClose","toggle","setContent","content","append","_removeEventListeners","_cacheElements","toggleEl","querySelector","_createContentEl","_createCaretEl","_parseParams","parent","style","getComputedStyle","position","parentNode","_onClickBound","_onClick","bind","_onContentClickBound","_onContentClick","_onWindowClickBound","_onWindowClick","_onKeyupBound","_onKeyup","_onKeydownBound","_onKeydown","addEventListener","removeEventListener","window","createElement","setAttribute","className","appendChild","remove","keepEl","onClose","target","preventDefault","keyCode","shiftKey","_onBackwardTab","_onForwardTab","activeElement","_whitelistedParams","defaults","isPaused","_onWindowResizeBound","_onWindowScrollBound"],"mappings":"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","file":"popover.js","sourcesContent":["/**\n * # Popover\n * Show and hide a popover. Should do some sanity checks on positioning as well.\n *\n * @example\n * new Popover(el, {\n *   // Optional. Default anchoring of the content's x and y-axis relative to the button.\n *   defaultAnchorX: 'center', // 'left', 'center', 'right'\n *   defaultAnchorY: 'center' // 'left', 'center', 'right'\n * });\n *\n * @module components/popover.js\n */\nimport BaseComponent from './base';\nimport addClass from '../helpers/dom/add-class';\nimport hasClass from '../helpers/dom/has-class';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport appendChildren from '../helpers/manipulation/append-children';\nimport hasParent from '../helpers/traversal/has-parent';\nimport getParent from '../helpers/traversal/get-parent';\nimport {string as parseStringAttribute} from '../helpers/dom/parse-attribute';\nimport Affix from '../helpers/position/affix';\n\nconst noop = function() {};\n\nclass Popover extends BaseComponent {\n\n  constructor(el, params = {}) {\n    super(el, params);\n    if (!el) return this;\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n  }\n\n  /**\n   * Open.\n   * @param {Object} params Optional\n   */\n  open(params = {}) {\n\n    // If there is a timer running for the close event, clear it so it\n    // doesn't close stuff during open.\n    if (this.closeTimer) {\n      clearTimeout(this.closeTimer);\n      this.closeTimer = null;\n    }\n\n    // If the element we anchor the popover to is fixed, we need to know\n    // so that the affixed content can also be fixed.\n    this._checkFixedPosition();\n\n    // Update an existing affixed instance.\n    if (this.affix) {\n      this.affix.targetEl = params.affixTo || this.affix.targetEl;\n      this.affix.update();\n    }\n    // Affix the content to the toggle\n    else {\n      this.affix = new Affix({\n        el: this.contentEl,\n        targetEl: params.affixTo || this.el,\n        caretEl: this.caretEl,\n        anchorX: this.anchorX,\n        anchorY: this.anchorY,\n        isFixed: this.isFixed\n      });\n    }\n\n    // Find all focusable elements in the Popover for navigation\n    let popoverFocusableEls = this.contentEl.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n\n    if ( popoverFocusableEls.length > 0 ) {\n      this.popoverFocusableEls = Array.prototype.slice.call(popoverFocusableEls);\n      this.firstPopoverFocusableEl = this.popoverFocusableEls[0];\n      this.lastPopoverFocusableEl = this.popoverFocusableEls[ this.popoverFocusableEls.length - 1 ];\n    }\n\n    // Listen for clicks on the window\n    this._addWindowEventListeners();\n\n    this.isActive = true;\n\n    // Dispatch a custom event so content inside the popover can respond\n    var e = document.createEvent('Event');\n    e.initEvent('spark.visible-children', true, true);\n    this.contentEl.dispatchEvent(e);\n\n    // Update bindings\n    this._updateAttributes();\n\n    // Set focus to first focusable element once Popover has been opened\n    if ( popoverFocusableEls.length > 0 ) {\n      this.firstPopoverFocusableEl.focus();\n    }\n\n    // Callbacks\n    (params.complete || noop)();\n    (this.onOpen || noop)();\n\n    return this;\n  }\n\n\n  /**\n   * Close.\n   * @param {Object} params Optional\n   */\n  close(params = {}) {\n\n    // Not open, so don't close.\n    if (!this.affix) return this;\n\n    // If there is a timer running for the close event, clear it so we don't run close stuff twice.\n    if (this.closeTimer) {\n      clearTimeout(this.closeTimer);\n      this.closeTimer = null;\n    }\n\n    // Stop listening to window clicks.\n    this._removeWindowEventListeners();\n\n    this.isActive = false;\n\n    // Update bindings\n    this._updateAttributes();\n\n    // Close after the animation has completed\n    this.closeTimer = setTimeout(() => {\n      this._finishClose(params);\n    }, 250);\n\n    return this;\n  }\n\n\n  /**\n   * Toggle the open state.\n   */\n  toggle() {\n    return this[this.isActive ? 'close' : 'open']();\n  }\n\n\n  /**\n   * Set the content. Optionally append instead of replacing.\n   * @param {Element|Array|NodeList} content\n   * @param {Object} params Optional\n   */\n  setContent(content, params) {\n    params = params || {};\n    appendChildren(this.contentEl, content.length ? content : [content], !(params.append || false));\n    return this;\n  }\n\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    this._removeEventListeners();\n    this._cacheElements(el || this.el);\n    this._addEventListeners();\n\n    if (this.affix) this.affix.update();\n\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the tabs list, each tab and each panel.\n   * Set which tab is active, or use the first.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n\n    // If a content element was already passed, make sure it has a popover content class\n    if (this.contentEl) {\n      addClass(this.contentEl, 'spark-popover__content');\n    }\n\n    this.el = el;\n    this.toggleEl = this.el.querySelector('.spark-popover__toggle, [data-role=\"toggle\"]') || this.el;\n    this.contentEl = this.contentEl || this.el.querySelector('.spark-popover__content, [class*=\"spark-popover__content--\"]') || this._createContentEl();\n    this.caretEl = this.contentEl.querySelector('.spark-popover__caret') || this._createCaretEl();\n    this.isActive = hasClass(this.toggleEl, 'popover-active');\n  }\n\n\n  /**\n   * Parse config values from the element.\n   */\n  _parseParams() {\n\n    this.anchorY = this.anchorY !== null ? this.anchorY : parseStringAttribute(this.contentEl, 'data-anchor-y', null);\n    this.anchorX = this.anchorX !== null ? this.anchorX : parseStringAttribute(this.contentEl, 'data-anchor-x', null);\n\n    // No anchors defined\n    if (!this.anchorY && !this.anchorX) {\n\n      // Left\n      if (hasClass(this.contentEl, 'spark-popover__content--left')) {\n        this.anchorY = 'middle';\n        this.anchorX = 'left';\n      }\n      // Right\n      else if (hasClass(this.contentEl, 'spark-popover__content--right')) {\n        this.anchorY = 'middle';\n        this.anchorX = 'right';\n      }\n      // Top\n      else if (hasClass(this.contentEl, 'spark-popover__content--top')) {\n        this.anchorY = 'top';\n        this.anchorX = 'center';\n      }\n      // Bottom\n      else {\n        this.anchorY = 'bottom';\n        this.anchorX = 'center';\n      }\n    }\n  }\n\n\n  /**\n   * Check to see if the button triggering the popover is fixed.\n   * If so, then popover needs to be fixed as well.\n   */\n  _checkFixedPosition() {\n\n    let parent = this.el;\n\n    while (parent && parent !== document) {\n      let style = getComputedStyle(parent);\n      if (style.position === 'fixed') {\n        return this.isFixed = true;\n      }\n      parent = parent.parentNode;\n    }\n\n    return this.isFixed = false;\n  }\n\n\n  /**\n   * Update classes for the open or close state.\n   */\n  _updateAttributes() {\n    toggleClass(this.el, 'popover-active', this.isActive);\n    toggleClass(this.contentEl, 'active', this.isActive);\n    toggleClass(this.toggleEl, 'active', this.isActive);\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onClickBound = this._onClick.bind(this);\n    this._onContentClickBound = this._onContentClick.bind(this);\n    this._onWindowClickBound = this._onWindowClick.bind(this);\n    this._onKeyupBound = this._onKeyup.bind(this);\n    this._onKeydownBound = this._onKeydown.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n    this.el.addEventListener('click', this._onClickBound);\n    this.contentEl.addEventListener('click', this._onContentClickBound);\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n    this.el.removeEventListener('click', this._onClickBound);\n    this.contentEl.removeEventListener('click', this._onContentClickBound);\n  }\n\n\n  /**\n   * Add event listeners to the window.\n   */\n  _addWindowEventListeners() {\n    this._removeWindowEventListeners();\n    window.addEventListener('click', this._onWindowClickBound);\n    window.addEventListener('keyup', this._onKeyupBound);\n    window.addEventListener('keydown', this._onKeydownBound);\n  }\n\n\n  /**\n   * Remove window event listeners.\n   */\n  _removeWindowEventListeners() {\n    window.removeEventListener('click', this._onWindowClickBound);\n    window.removeEventListener('keyup', this._onKeyupBound);\n    window.removeEventListener('keydown', this._onKeydownBound);\n  }\n\n\n  /**\n   * Create a content element.\n   * @return {Element}\n   */\n  _createContentEl() {\n    var el = document.createElement('div');\n    addClass(el, 'spark-popover__content');\n    el.setAttribute('role', 'tooltip');\n    return el;\n  }\n\n\n  /**\n   * Create the caret element.\n   * @return {Element}\n   */\n  _createCaretEl() {\n    var el = document.createElement('div');\n    el.className = 'spark-popover__caret';\n    this.contentEl.appendChild(el);\n    return el;\n  }\n\n\n  /**\n   * Complete the close event by moving the element back and destroying the affix.\n   * @param  {Object} params\n   */\n  _finishClose(params = {}) {\n\n    this.closeTimer = null;\n\n    // Move the content back to the parent\n    this.el.appendChild(this.contentEl);\n\n    this.affix.remove({keepEl: true});\n    this.affix = null;\n\n    (params.complete || noop)();\n    (this.onClose || noop)();\n  }\n\n\n  /**\n   * When we are clicked, toggle the popover-active state.\n   * @param {Object} e\n   */\n  _onClick(e) {\n\n    // If this is the toggle element, toggle.\n    if (e.target === this.toggleEl || hasParent(e.target, this.toggleEl)) {\n      e.preventDefault();\n      this.toggle();\n      return;\n    }\n  }\n\n\n  /**\n   * When a key is pressed on the window and it's an ESC, close the popover.\n   * @param {Object} e\n   */\n  _onKeyup(e) {\n    if (e.keyCode === 27) {\n      this.close();\n\n      // Set focus back to toggle\n      this.toggleEl.focus();\n    }\n  }\n\n\n  /**\n   * When a key is pressed in an active Popover and it is a Tab key, or Shift+Tab, navigate the popover\n   * If it the Enter key, and focus is on the close button, close the Popover\n   *\n   * @param {Object} e\n   */\n  _onKeydown(e) {\n    if (e.keyCode === 9) {\n      if ( this.popoverFocusableEls.length === 1 ) {\n        e.preventDefault();\n      }\n\n      if (e.shiftKey) {\n        this._onBackwardTab(e);\n      }\n      else {\n        this._onForwardTab(e);\n      }\n    }\n\n    // Enter Key\n    if (e.keyCode === 13) {\n      if (e.target === document.querySelector('.spark-popover__close') || getParent(e.target, '.spark-popover__close', this.contentEl)) {\n        e.preventDefault();\n        this.close();\n\n        // Set focus back to toggle\n        this.toggleEl.focus();\n      }\n    }\n  }\n\n\n  /**\n   * When tabbing backwards, localize traversal to Popover elements only\n   * @param {Object} e\n   */\n  _onBackwardTab(e) {\n    if ( document.activeElement === this.firstPopoverFocusableEl ) {\n      e.preventDefault();\n      this.lastPopoverFocusableEl.focus();\n    }\n  }\n\n\n  /**\n   * When tabbing forwards, localize traversal to Popover elements only\n   * @param {Object} e\n   */\n  _onForwardTab(e) {\n    if ( document.activeElement === this.lastPopoverFocusableEl ) {\n      e.preventDefault();\n      this.firstPopoverFocusableEl.focus();\n    }\n  }\n\n\n  /**\n   * When the toggle is clicked, close if it's a link. If it's content, don't do anything but stop\n   * the event from bubbling.\n   * @param {Object} e\n   */\n  _onContentClick(e) {\n\n    // If this is a link, close.\n    if (getParent(e.target, '.spark-popover__list-link', this.contentEl) || getParent(e.target, '.spark-popover__close', this.contentEl)) {\n      this.close();\n      return;\n    }\n  }\n\n\n  /**\n   * When the window is clicked and it's not part of the popover, close the popover.\n   * @param {Objec} e\n   */\n  _onWindowClick(e) {\n    if (e.target !== this.el && e.target !== this.contentEl && !hasParent(e.target, this.el) && !hasParent(e.target, this.contentEl)) {\n      this.close();\n    }\n  }\n}\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nPopover.prototype._whitelistedParams = ['anchorX', 'anchorY', 'toggleEl', 'contentEl', 'onOpen', 'onClose'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nPopover.prototype.defaults = {\n  el: null,\n  toggleEl: null,\n  contentEl: null,\n  caretEl: null,\n  affix: null,\n  isActive: false,\n  isPaused: false,\n  isFixed: false,\n  anchorX: null,\n  anchorY: null,\n  closeTimer: null,\n  onOpen: null,\n  onClose: null,\n  _onClickBound: null,\n  _onKeyupBound: null,\n  _onKeydownBound: null,\n  _onContentClickBound: null,\n  _onWindowClickBound: null,\n  _onWindowResizeBound: null,\n  _onWindowScrollBound: null\n};\n\nexport default Popover;\n"]}