{"version":3,"sources":["components/typeahead.js"],"names":["noop","Typeahead","el","params","elRequired","_maintainFocus","_parseParams","_bindEventListenerCallbacks","_addEventListeners","run","cursorIndex","isRunning","oldVal","inputEl","value","val","placeholder","i","len","format","length","skipCount","valDone","characters","isFocused","undefined","_getCaretEnd","notOnlyPlaceholders","placeholderEl","innerHTML","_updateWidth","_setCaretPositionTranslated","onChange","_atEnd","maxLength","_caretIsAtEnd","onEnd","addCharacterAtIndex","character","start","end","skipCheck","re","RegExp","e","exec","splice","addCharacterAtCaret","pos","_getCaretStart","_moveCaret","_getCaretStartTranslated","_getCaretEndTranslated","removeCharacterAtIndex","index","offset","removeCharacterAtCaret","tmp","removeCharactersInRange","setValue","settingValue","pause","split","_setCaretPosition","resume","getValue","asInt","parseInt","clearValue","updateValue","moveCaret","moveCaretToEnd","moveCaretToStart","pauseBlurFocus","disable","setAttribute","enable","removeAttribute","clear","remove","leaveElement","_cacheElements","querySelector","_createDefaultInputElement","_createDefaultPlaceholderElement","_parseCharacters","_parseFormat","getAttribute","_getCharactersAllowedCount","matchPlaceholderSize","arr","lastWasEscape","push","chars","regexes","document","createElement","className","appendChild","allowed","_onKeydownBound","_onKeydown","bind","_onKeypressBound","_onKeypress","_onFocusBound","_onFocus","_onBlurBound","_onBlur","_onPlaceholderClickBound","_onPlaceholderClick","addEventListener","_removeEventListeners","removeEventListener","window","caretPosition","selection","focus","sel","createRange","moveStart","text","selectionStart","selectionEnd","moveEnd","select","_getCaretPositionTranslated","direction","curPos","_emptyWhenOnlyPlaceholders","callback","originalActiveElement","activeElement","body","output","call","blur","style","width","offsetWidth","code","keyCode","which","pasteCode","metaKey","ctrlKey","actionCodes","BACKSPACE","_onBackspace","preventDefault","DELETE","LEFT","onBackspace","RIGHT","ignoreCodes","indexOf","String","fromCharCode","_onInput","onInput","onFocus","_oldVal","onBlur","stopPropagation","prototype","_whitelistedParams","defaults"],"mappings":"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","file":"typeahead.js","sourcesContent":["/**\n * # Typeahead\n * Listen to an input element and format it as the user types.\n *\n * @example\n * new Typeahead(el);\n *\n * @module components/typeahead.js\n */\n\nimport BaseComponent from './base';\nimport triggerEvent from '../helpers/dom/trigger-event';\nimport {boolean as parseBooleanAttribute} from '../helpers/dom/parse-attribute';\n\nconst noop = function() {};\n\nclass Typeahead extends BaseComponent {\n\n  /**\n   * Typeahead constructor\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._maintainFocus(function() {\n      this._parseParams();\n      this._bindEventListenerCallbacks();\n      this._addEventListeners();\n    });\n  }\n\n\n  /**\n   * Run the formatting.\n   * @param {Number} cursorIndex\n   */\n  run(cursorIndex, params = {}) {\n\n    if (this.isRunning) return this;\n\n    this.isRunning = true;\n\n    var oldVal = this.inputEl.value;\n    var val = '';\n    var placeholder = '';\n    var i = 0;\n    var len = this.format.length;\n    var skipCount = 0;\n    var valDone = false;\n\n    for (; i < len; i++) {\n\n      // Add numbers\n      if (this.format[i] === '\\\\d') {\n\n        if (this.characters[i - skipCount]) {\n          val += this.characters[i - skipCount];\n        }\n        else {\n          valDone = true;\n        }\n\n        placeholder += valDone ? this.placeholder[i] : '&nbsp;';\n      }\n      // Placeholder characters\n      else {\n\n        if (!valDone) {\n          val += this.format[i];\n        }\n\n        placeholder += this.format[i];\n\n        skipCount++;\n      }\n    }\n\n    if (this.isFocused) {\n      cursorIndex = cursorIndex === undefined ? this._getCaretEnd() : cursorIndex;\n    }\n\n    // If there are no characters, set the cursorIndex to be the last placeholder entry.\n    if (this.isFocused && !this.characters.length) {\n      cursorIndex = val.length;\n    }\n\n    // No characters and we shouldn't use just placeholder values\n    if (!this.characters.length && params.notOnlyPlaceholders) {\n      val = '';\n    }\n\n    this.inputEl.value = val;\n    this.placeholderEl.innerHTML = placeholder;\n\n    this._updateWidth();\n\n    if (this.isFocused) {\n      this._setCaretPositionTranslated(cursorIndex);\n    }\n\n    if (val !== oldVal) {\n      triggerEvent(this.inputEl, 'input');\n    }\n\n    this.isRunning = false;\n\n    if (val !== oldVal) {\n      (this.onChange || noop)(val, oldVal, this);\n    }\n\n    if (!this._atEnd && this.isFocused && this.characters.length === this.maxLength && this._caretIsAtEnd()) {\n      this._atEnd = true;\n      (this.onEnd || noop)(this);\n    } else {\n      this._atEnd = false;\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Add a character to the characters array at a given index.\n   * @param {String} character\n   * @param {Number} start\n   * @param {Number} end\n   * @param {Boolean} skipCheck\n   */\n  addCharacterAtIndex(character, start, end, skipCheck) {\n\n    // Don't add at an index beyond what we can support.\n    if (this.maxLength && start >= this.maxLength) {\n      return this;\n    }\n\n    if (!skipCheck) {\n\n      var re;\n\n      // Try to build a regex for this format character.\n      try {\n        re = new RegExp(this.format[start]);\n      }\n      catch (e) {\n        //\n      }\n\n      if (!re || !re.exec(character)) {\n        return this;\n      }\n    }\n\n    this.characters.splice(start, end - start, character);\n\n    // If we've added at an index that pushes the length beyond what we support,\n    // remove the trailing characters.\n    if (this.maxLength && this.characters.length > this.maxLength) {\n      this.characters.splice(this.maxLength, this.characters.length);\n    }\n\n    this.run(start + 1);\n\n    return this;\n  }\n\n\n  /**\n   * Add a character at the position of the caret.\n   * @param {String} character\n   */\n  addCharacterAtCaret(character) {\n\n    var pos = this._getCaretStart();\n    var re;\n\n    // If we're beyond the bounds of the format, stop.\n    if (this.format[pos] === undefined) {\n      (this.onEnd || noop)(this, character);\n      return this;\n    }\n\n    // Try to build a regex for this format character.\n    try {\n      re = new RegExp(this.format[pos]);\n    }\n    catch (e) {\n      //\n    }\n\n    // We couldn't build a regex (so it's invalid) or the regex failed (so it's invalid)\n    if (!re || !re.exec(character)) {\n      if (this._moveCaret('right')) {\n        this.addCharacterAtCaret(character);\n      }\n      return this;\n    }\n\n    this.addCharacterAtIndex(character, this._getCaretStartTranslated(), this._getCaretEndTranslated(), true);\n\n    return this;\n  }\n\n\n  /**\n   * Remove a character from the character array by index.\n   * @param {Number} index\n   * @param {Number} length Optional\n   * @param {Number} offset Optional\n   */\n  removeCharacterAtIndex(index, length, offset) {\n\n    // Don't want a negative splice length or else we start\n    // removing characters from the end.\n    if (index + offset < 0) {\n      return this;\n    }\n\n    length = length !== undefined ? length : 1;\n    this.characters.splice(index + offset, length);\n    this.run(index + (offset || 1));\n\n    return this;\n  }\n\n\n  /**\n   * Remove the character at the caret.\n   * @param {Number} offset Optional An offset from the current position.\n   */\n  removeCharacterAtCaret(offset) {\n\n    var start = this._getCaretStartTranslated();\n    var end = this._getCaretEndTranslated();\n    var length = 1;\n    var tmp;\n\n    if (start !== end) {\n\n      // If the end is less than the start, the user dragged from right to left.\n      // Just swap them to make it easier to handle.\n      if (end < start) {\n        tmp = start;\n        start = end;\n        end = tmp;\n      }\n\n      // The length of characters removed\n      length = end - start;\n\n      // Bump the start position @todo: haven't thought through why this is, but it's needed.\n      start++;\n    }\n\n    this.removeCharacterAtIndex(start, length, offset);\n\n    return this;\n  }\n\n\n  /**\n   * Remove the character in the current range.\n   */\n  removeCharactersInRange() {\n    this.removeCharacterAtIndex(this._getCaretStartTranslated(), this._getCaretEndTranslated());\n    return this;\n  }\n\n\n  /**\n   * Set the value of the typeahead. Maintain the position of the caret.\n   * @param {String} value\n   */\n  setValue(value) {\n\n    this.settingValue = true;\n    this.pause();\n\n    this.characters = (value + '').split('');\n    this.run();\n\n    if (this.isFocused) this._setCaretPosition(this._getCaretStart());\n\n    this.resume();\n    this.settingValue = false;\n\n    return this;\n  }\n\n\n  /**\n   * Get the value of the typeahead.\n   * @param {Boolean} asInt Get the value as a parsed integer.\n   * @return {String|Number}\n   */\n  getValue(asInt) {\n    return asInt && this.inputEl.value ? parseInt(this.inputEl.value, 10) : this.inputEl.value;\n  }\n\n\n  /**\n   * Clear the selected value.\n   */\n  clearValue() {\n    this.pause();\n    this.characters = [];\n    this.run(0, {notOnlyPlaceholders: true});\n    return this.resume();\n  }\n\n\n  /**\n   * Take the date values from the inputs and set them as dates on the calendar.\n   */\n  updateValue() {\n    return this.setValue(this.inputEl.value);\n  }\n\n\n  /**\n   * Move the caret position.\n   * @param {Number} pos\n   */\n  moveCaret(pos) {\n    this._setCaretPositionTranslated(pos);\n    return this;\n  }\n\n\n  /**\n   * Move the caret to the end of the input.\n   */\n  moveCaretToEnd() {\n    return this.moveCaret(this.characters.length);\n  }\n\n\n  /**\n   * Move the caret to the start of the input.\n   */\n  moveCaretToStart() {\n    return this.moveCaret(0);\n  }\n\n\n  /**\n   * Pause events.\n   */\n  pause() {\n    this.pauseBlurFocus++;\n    return this;\n  }\n\n\n  /**\n   * Resume events.\n   */\n  resume() {\n    this.pauseBlurFocus--;\n    return this;\n  }\n\n\n  /**\n   * Disable entry into the input.\n   */\n  disable() {\n    this.inputEl.setAttribute('disabled', '');\n    return this;\n  }\n\n\n  /**\n   * Enable entry into the input.\n   */\n  enable() {\n    this.inputEl.removeAttribute('disabled');\n    return this;\n  }\n\n\n  /**\n   * Clear the value.\n   * Changed to clearValue in v2.0.0.\n   */\n  clear() {\n    return this.clearValue();\n  }\n\n\n  /**\n   * Augment default remove call w/ helper cleanup.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n  remove(leaveElement) {\n    super.remove(leaveElement);\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the needed elements.\n   * @param {Object} el\n   */\n  _cacheElements(el) {\n    this.el = el;\n    this.inputEl = this.el.querySelector('[type=\"text\"], [type=\"email\"], [type=\"phone\"], textarea') || this._createDefaultInputElement();\n    this.placeholderEl = this.el.querySelector('.spark-input__placeholder') || this._createDefaultPlaceholderElement();\n  }\n\n\n  /**\n   * Parse parameters from the elements.\n   */\n  _parseParams() {\n\n    // Store the value characters\n    this.characters = this._parseCharacters(this.inputEl.value);\n\n    // Store format\n    this.format = this._parseFormat(this.format ? this.format : this.inputEl.getAttribute('data-typeahead-format'));\n\n    // Store the original placeholder\n    this.placeholder = this.placeholder ? this.placeholder : this.inputEl.getAttribute('placeholder').split('');\n\n    // Get the total number of characters we can have\n    this.maxLength = this._getCharactersAllowedCount(this.format);\n\n    this.matchPlaceholderSize = this.matchPlaceholderSize !== null ? this.matchPlaceholderSize : parseBooleanAttribute(this.inputEl, 'data-match-placeholder-size', false);\n  }\n\n\n  /**\n   * Parse the format string into an array.\n   * @param  {String} format\n   * @return {Array}\n   */\n  _parseFormat(format) {\n\n    var i = 0;\n    var len = format.length;\n    var arr = [];\n    var lastWasEscape = false;\n\n    for (; i < len; i++) {\n      if (format[i] === '\\\\' && !lastWasEscape) {\n        lastWasEscape = true;\n      } else {\n        arr.push((lastWasEscape ? '\\\\' : '') + format[i]);\n        lastWasEscape = false;\n      }\n    }\n\n    return arr;\n  }\n\n\n  /**\n   * Parse the characters string into an array, ignoring characters which don't\n   * match the format requirements.\n   * @param {String} characters\n   * @return {Array}\n   */\n  _parseCharacters(characters) {\n\n    var chars = characters.split('');\n    var i = 0;\n    var len = characters.length;\n    var regexes = [];\n    var arr = [];\n\n    for (; i < len; i++) {\n\n      // Try to build a regex for this format character.\n      try {\n        // Make sure this format starts with an escape character.\n        regexes[i] = this.format[i][0] === '\\\\' ? new RegExp(this.format[i]) : null;\n      }\n      catch (e) {\n        //\n      }\n\n      // If we were able to create a regex and our char passes, add it to the array\n      // of characters to return.\n      if (regexes[i] && regexes[i].exec(chars[i])) {\n        arr.push(chars[i]);\n      }\n    }\n\n    return arr;\n  }\n\n\n  /**\n   * Create the default input element.\n   * @return {Element}\n   */\n  _createDefaultInputElement() {\n\n    var el = document.createElement('input');\n    el.className = 'spark-input__field';\n    el.setAttribute('data-typeahead', '');\n    el.setAttribute('type', 'tel');\n\n    this.el.appendChild(el);\n\n    return el;\n  }\n\n\n  /**\n   * Create the default input element.\n   * @return {Element}\n   */\n  _createDefaultPlaceholderElement() {\n    var el = document.createElement('span');\n    el.className = 'spark-input__placeholder';\n    this.el.appendChild(el);\n    return el;\n  }\n\n\n  /**\n   * Get the maximum number of characters allowed.\n   * @param {Array} format\n   * @return {Number}\n   */\n  _getCharactersAllowedCount(format) {\n\n    var i = 0;\n    var len = format.length;\n    var allowed = 0;\n\n    for (; i < len; i++) {\n      if (format[i] === '\\\\d') {\n        allowed++;\n      }\n    }\n\n    return allowed;\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onKeydownBound = this._onKeydown.bind(this);\n    this._onKeypressBound = this._onKeypress.bind(this);\n    this._onFocusBound = this._onFocus.bind(this);\n    this._onBlurBound = this._onBlur.bind(this);\n    this._onPlaceholderClickBound = this._onPlaceholderClick.bind(this);\n  }\n\n\n  /**\n   * Add event listeners to keypress and keydown.\n   */\n  _addEventListeners() {\n    this.inputEl.addEventListener('keydown', this._onKeydownBound, false);\n    this.inputEl.addEventListener('keypress', this._onKeypressBound, false);\n    this.inputEl.addEventListener('focus', this._onFocusBound, false);\n    this.placeholderEl.addEventListener('click', this._onPlaceholderClickBound, false);\n  }\n\n\n  /**\n   * Add event listeners to keypress and keydown.\n   */\n  _removeEventListeners() {\n\n    this.inputEl.removeEventListener('keydown', this._onKeydownBound);\n    this.inputEl.removeEventListener('keypress', this._onKeypressBound);\n    this.inputEl.removeEventListener('focus', this._onFocusBound);\n    this.placeholderEl.removeEventListener('click', this._onPlaceholderClickBound);\n\n    window.removeEventListener('blur', this._onBlurBound);\n    this.inputEl.removeEventListener('blur', this._onBlurBound);\n  }\n\n\n  /**\n   * Get the position of the caret in the element.\n   * @return {Number} The index\n   */\n  _getCaretStart() {\n\n    return this._maintainFocus(function() {\n\n      var caretPosition;\n\n      // IE support\n      if (document.selection) {\n        this.inputEl.focus();\n        var sel = document.selection.createRange();\n        sel.moveStart('character', -this.inputEl.value.length);\n        caretPosition = sel.text.length;\n      } else if (this.inputEl.selectionStart || this.inputEl.selectionStart === 0) {\n        caretPosition = this.inputEl.selectionStart;\n      }\n\n      return caretPosition;\n    });\n  }\n\n\n  /**\n   * Get the end position of the caret in the element.\n   * @return {Number} The index\n   */\n  _getCaretEnd() {\n\n    return this._maintainFocus(function() {\n\n      var caretPosition;\n\n      // IE support\n      if (document.selection) {\n        this.inputEl.focus();\n        var sel = document.selection.createRange();\n        sel.moveStart('character', -this.inputEl.value.length);\n        caretPosition = sel.text.length;\n      } else if (this.inputEl.selectionEnd || this.inputEl.selectionEnd === 0) {\n        caretPosition = this.inputEl.selectionEnd;\n      }\n\n      return caretPosition;\n    });\n  }\n\n\n  /**\n   * Is the caret at the end of the input?\n   * @return {Boolean}\n   */\n  _caretIsAtEnd() {\n    return this._getCaretStart() === this.maxLength;\n  }\n\n\n  /**\n   * Set the position of the caret in the element.\n   * @return {Number} The index\n   */\n  _setCaretPosition(pos) {\n\n    return this._maintainFocus(function() {\n\n      // IE support\n      if (document.selection) {\n        this.inputEl.focus();\n        var sel = document.selection.createRange();\n        sel.moveStart('character', -this.inputEl.value.length);\n        sel.moveStart('character', pos);\n        sel.moveEnd('character', 0);\n        sel.select();\n      } else if (this.inputEl.selectionStart || this.inputEl.selectionStart === 0) {\n        this.inputEl.selectionStart = pos;\n        this.inputEl.selectionEnd = pos;\n      }\n    });\n  }\n\n\n  /**\n   * Get the position of the caret translated to the corresponding index in the\n   * characters array. This means ignoring format characters.\n   * @param {Number} pos\n   * @return {Number}\n   */\n  _getCaretPositionTranslated(pos) {\n\n    var i = 0;\n    var skipCount = 0;\n\n    for (; i < pos; i++) {\n\n      // Count non-numbers as a skip.\n      // @todo: this needs to work with more than numbers.\n      if (this.format[i] !== '\\\\d') {\n        skipCount++;\n      }\n    }\n\n    return pos - skipCount;\n  }\n\n\n  /**\n   * Get the starting position of the caret translated.\n   * @return {Number}\n   */\n  _getCaretStartTranslated() {\n    return this._getCaretPositionTranslated(this._getCaretStart());\n  }\n\n\n  /**\n   * Get the ending position of the caret translated.\n   * @return {Number}\n   */\n  _getCaretEndTranslated() {\n    return this._getCaretPositionTranslated(this._getCaretEnd());\n  }\n\n\n  /**\n   * Set the position of the caret translated to the corresponding index in the\n   * characters array. This means ignoring format characters.\n   * @param {Number} pos\n   */\n  _setCaretPositionTranslated(pos) {\n\n    var i = 0;\n    var skipCount = 0;\n\n    for (; i < pos + skipCount; i++) {\n\n      // Count non-numbers as a skip.\n      // @todo: this needs to work with more than numbers.\n      if (this.format[i] !== undefined && this.format[i] !== '\\\\d') {\n        skipCount++;\n      }\n    }\n\n    this._setCaretPosition(pos + skipCount);\n  }\n\n\n  /**\n   * Move the caret position\n   * @param  {String} direction The direction of the movement\n   * @return {Boolean}           Was the caret actually moved?\n   */\n  _moveCaret(direction) {\n\n    var curPos = this._getCaretStart();\n\n    if (direction === 'left') {\n      this._setCaretPosition(curPos - 1);\n    } else if (direction === 'right') {\n      this._setCaretPosition(curPos + 1);\n    }\n\n    return curPos !== this._getCaretStart();\n  }\n\n\n  /**\n   * Empty the input when we only have placeholders.\n   */\n  _emptyWhenOnlyPlaceholders() {\n    if (!this.characters.length) {\n      this.clear();\n    }\n  }\n\n\n  /**\n   * Run a callback function that may change the focus of the document, but\n   * make sure focus goes back to where it needs to be. Also, set the state\n   * so that blur/focus events don't fire from this instance.\n   * @param {Function} callback\n   */\n  _maintainFocus(callback) {\n\n    this.pause();\n\n    var originalActiveElement = document.activeElement;\n\n    //For IE\n    if(!originalActiveElement) {\n      originalActiveElement = document.body;\n    }\n\n    var output = (callback || noop).call(this);\n\n    // If we didn't have focus, go back to focusing on the original\n    if (originalActiveElement !== this.inputEl) {\n      this.inputEl.blur();\n      originalActiveElement ? originalActiveElement.focus() : null;\n    }\n\n    this.resume();\n\n    return output;\n  }\n\n\n  /**\n   * Update the width of the typeahead. If we should be matching the width\n   * of the placeholder, do so. Otherwise, take no action.\n   */\n  _updateWidth() {\n\n    if (this.matchPlaceholderSize) {\n      this.placeholderEl.style.width = 'auto';\n      // Add 2px to account for caret width in IE...\n      this.inputEl.style.width = 'auto';\n      this.inputEl.style.width = this.placeholderEl.offsetWidth + 2 + 'px';\n      this.placeholderEl.style.width = '';\n    }\n  }\n\n\n  /**\n   * Listen for delete and arrows.\n   * @param  {Object} e\n   */\n  _onKeydown(e) {\n\n    var code = e.keyCode || e.which;\n\n    if (code === this.pasteCode && (e.metaKey || e.ctrlKey)) {\n      return;\n    }\n\n    if (code === this.actionCodes.BACKSPACE) {\n      this.removeCharacterAtCaret(-1);\n      this._onBackspace();\n      e.preventDefault();\n    } else if (code === this.actionCodes.DELETE) {\n      this.removeCharacterAtCaret(0);\n      e.preventDefault();\n    } else if (code === this.actionCodes.LEFT) {\n      if (!this._getCaretStart()) {\n        (this.onBackspace || noop)();\n      }\n    } else if (code === this.actionCodes.RIGHT) {\n      if (this._getCaretStart() === this.characters.length) {\n        (this.onEnd || noop)();\n      }\n    } else {\n      if (this.ignoreCodes.indexOf(code) === -1) {\n        e.preventDefault();\n\n        // Account for Numpad keys\n        if (code >= 96 && code <= 105) {\n          code -= 48;\n        }\n\n        this.addCharacterAtCaret(String.fromCharCode(code));\n      }\n    }\n  }\n\n\n  /**\n   * When the keypress event fires, validate.\n   * @param {Object} e\n   */\n  _onKeypress(e) {\n    var code = e.keyCode || e.which;\n\n    if (this.ignoreCodes.indexOf(code) === -1) {\n      e.preventDefault();\n      this.characters = this._parseCharacters(this.inputEl.value);\n      this.run();\n      (this.onChange || noop)(this.getValue(), this);\n    }\n  }\n\n\n  /**\n   * When the input event fires, validate. This happens\n   * with a copy+paste.\n   * @param {Object} e\n   */\n  _onInput(e) {\n    e.preventDefault();\n    this.characters = this._parseCharacters(this.inputEl.value);\n    this.run();\n    (this.onInput || noop)(this.getValue(), this);\n  }\n\n\n  /**\n   * When we focus, run the formatting.\n   * @param {Object} e\n   */\n  _onFocus() {\n\n    window.removeEventListener('blur', this._onBlurBound);\n    window.addEventListener('blur', this._onBlurBound, false);\n    this.inputEl.removeEventListener('blur', this._onBlurBound);\n    this.inputEl.addEventListener('blur', this._onBlurBound, false);\n\n    if (this.isFocused || this.pauseBlurFocus || this.isRunning) return;\n\n    this.run();\n    (this.onFocus || noop)(this.getValue(), this);\n    this.isFocused = true;\n    this._oldVal = this.inputEl.value;\n  }\n\n\n  /**\n   * When we blur, if we have no characters, remove the placeholders.\n   * @param {Object} e\n   */\n  _onBlur() {\n\n    window.removeEventListener('blur', this._onBlurBound);\n    this.inputEl.removeEventListener('blur', this._onBlurBound);\n\n    this.isFocused = false;\n\n    if (this.pauseBlurFocus || this.isRunning) return;\n\n    this._emptyWhenOnlyPlaceholders();\n\n    if(this._oldVal !== this.inputEl.value) {\n      triggerEvent(this.inputEl, 'change');\n    }\n\n    (this.onBlur || noop)(this.getValue(), this);\n  }\n\n\n  /**\n   * When the placeholder receives a click event, focus on the input. This happens in IE10 for some\n   * reason that I cannot fully fathom, but it has something to do with the explicit width being\n   * set on an empty element.\n   * @param {Object} e\n   */\n  _onPlaceholderClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.inputEl.focus();\n  }\n\n\n  /**\n   * When we backspace, if we have no characters left let listeners know.\n   * @param {Object} e\n   */\n  _onBackspace() {\n    if (!this._getCaretStart())(this.onBackspace || noop)();\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nTypeahead.prototype._whitelistedParams = ['format', 'placeholder', 'matchPlaceholderSize', 'onChange', 'onFocus', 'onBlur', 'onInput', 'onBackspace', 'onEnd'];\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nTypeahead.prototype.defaults = {\n  el: null,\n  inputEl: null,\n  placeholderEl: null,\n  placeholder: null,\n  characters: null,\n  format: null,\n  ignoreCodes: [\n    9, // Tab\n    16, // Shift\n    17, // Ctrl\n    18, // Alt\n    20, // CAPS\n    91, // Meta\n    93, // Alt\n    112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 // F1-F12\n  ],\n  actionCodes: {\n    BACKSPACE: 8,\n    DELETE: 46,\n    LEFT: 37,\n    RIGHT: 39\n  },\n  pasteCode: 86, // v\n  pauseBlurFocus: 0,\n  matchPlaceholderSize: null,\n  maxLength: null,\n  isFocused: false,\n  isRunning: false,\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  onInput: null,\n  onBackspace: null,\n  onEnd: null,\n  _atEnd: false,\n  _oldVal: null,\n  _onKeydownBound: null,\n  _onKeypressBound: null,\n  _onFocusBound: null,\n  _onBlurBound: null,\n  _onPlaceholderClickBound: null\n};\n\nexport default Typeahead;\n"]}