{"version":3,"sources":["components/tooltip.js"],"names":["Tooltip","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","open","affix","contentEl","targetEl","toggleEl","caretEl","anchorX","anchorY","isActive","setAttribute","close","appendChild","remove","keepEl","toggle","update","_removeEventListeners","_cacheElements","leaveElement","querySelector","_createContentEl","_createCaretEl","_parseParams","_updateAttributes","_onMouseoverBound","_onMouseover","bind","_onMouseoutBound","_onMouseout","_onWindowMouseoverBound","_onWindowMouseover","_onFocusBound","_onFocus","_onBlurBound","_onBlur","addEventListener","removeEventListener","_addWindowEventListeners","window","_removeWindowEventListeners","e","target","prototype","_whitelistedParams","defaults"],"mappings":"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","file":"tooltip.js","sourcesContent":["/**\n * # Tooltip\n * Show and hide a tooltip.\n *\n * @example\n * new Tooltip(el, {\n *   // Optional. Default anchoring of the content's x and y-axis relative to the button.\n *   anchorX: 'center', // 'left', 'center', 'right'\n *   anchorY: 'center' // 'top', 'middle', 'bottom'\n * });\n *\n * @module components/popover.js\n */\nimport BaseComponent from './base';\nimport addClass from '../helpers/dom/add-class';\nimport removeClass from '../helpers/dom/remove-class';\nimport hasClass from '../helpers/dom/has-class';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport hasParent from '../helpers/traversal/has-parent';\nimport {string as parseStringAttribute} from '../helpers/dom/parse-attribute';\nimport Affix from '../helpers/position/affix';\nimport makeElement from '../helpers/dom/make-element';\n\nclass Tooltip extends BaseComponent {\n\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n  }\n\n\n  /**\n   * Open.\n   */\n  open() {\n\n    if (this.affix) return this;\n\n    this.affix = new Affix({\n      el: this.contentEl,\n      targetEl: this.toggleEl,\n      caretEl: this.caretEl,\n      anchorX: this.anchorX,\n      anchorY: this.anchorY\n    });\n\n    addClass(this.contentEl, 'active');\n\n    this.isActive = true;\n    this.toggleEl.setAttribute('aria-expanded', 'true');\n\n    return this;\n  }\n\n\n  /**\n   * Close.\n   */\n  close() {\n\n    if (!this.affix) return this;\n\n    removeClass(this.contentEl, 'active');\n    this.el.appendChild(this.contentEl);\n\n    this.affix.remove({keepEl: true});\n    this.affix = null;\n\n    this.isActive = false;\n    this.toggleEl.setAttribute('aria-expanded', 'false');\n\n    return this;\n  }\n\n\n  /**\n   * Toggle the open state.\n   */\n  toggle() {\n    return this[this.isActive ? 'close' : 'open']();\n  }\n\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   */\n  update(el) {\n\n    if (this.affix) this.affix.update();\n\n    this._removeEventListeners();\n    this._cacheElements(el || this.el);\n    this._addEventListeners();\n\n    return this;\n  }\n\n\n  /**\n   * Close on remove.\n   * @param {Boolean} leaveElement\n   */\n  remove(leaveElement) {\n    this.close();\n    removeClass(this.el, 'tooltip-initialized');\n    return super.remove(leaveElement);\n  }\n\n\n  /**\n   * Store a reference to the tabs list, each tab and each panel.\n   * Set which tab is active, or use the first.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n\n    this.el = el;\n    this.toggleEl = this.el.querySelector('.spark-tooltip__toggle, [data-role=\"toggle\"]') || this.el;\n    this.contentEl = this.contentEl || this.el.querySelector('[class*=\"spark-tooltip__content--\"]') || this._createContentEl();\n    this.caretEl = this.el.querySelector('.spark-tooltip__caret') || this._createCaretEl();\n    this.isActive = hasClass(this.toggleEl, 'tooltip-active');\n\n    addClass(this.el, 'tooltip-initialized');\n  }\n\n\n  /**\n   * Parse config values from the element.\n   */\n  _parseParams() {\n\n    this.anchorY = this.anchorY !== null ? this.anchorY : parseStringAttribute(this.el, 'data-anchor-y', null);\n    this.anchorX = this.anchorX !== null ? this.anchorX : parseStringAttribute(this.el, 'data-anchor-x', null);\n\n    // No anchors defined\n    if (!this.anchorY && !this.anchorX) {\n\n      // Left\n      if (hasClass(this.contentEl, 'spark-tooltip__content--left')) {\n        this.anchorY = 'middle';\n        this.anchorX = 'left';\n      }\n      // Right\n      else if (hasClass(this.contentEl, 'spark-tooltip__content--right')) {\n        this.anchorY = 'middle';\n        this.anchorX = 'right';\n      }\n      // Top\n      else if (hasClass(this.contentEl, 'spark-tooltip__content--top')) {\n        this.anchorY = 'top';\n        this.anchorX = 'center';\n      }\n      // Bottom\n      else if (hasClass(this.contentEl, 'spark-tooltip__content--bottom')) {\n        this.anchorY = 'bottom';\n        this.anchorX = 'center';\n      }\n    }\n  }\n\n\n  /**\n   * Update classes for the open or close state.\n   */\n  _updateAttributes() {\n    toggleClass(this.el, 'tooltip-active', this.isActive);\n    toggleClass(this.contentEl, 'tooltip-active', this.isActive);\n    toggleClass(this.toggleEl, 'active', this.isActive);\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onMouseoverBound = this._onMouseover.bind(this);\n    this._onMouseoutBound = this._onMouseout.bind(this);\n    this._onWindowMouseoverBound = this._onWindowMouseover.bind(this);\n    this._onFocusBound = this._onFocus.bind(this);\n    this._onBlurBound = this._onBlur.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for DOM events.\n   */\n  _addEventListeners() {\n    this.toggleEl.addEventListener('mouseover', this._onMouseoverBound);\n    this.toggleEl.addEventListener('mouseout', this._onMouseoutBound);\n    this.toggleEl.addEventListener('focus', this._onFocusBound);\n    this.toggleEl.addEventListener('blur', this._onBlurBound);\n  }\n\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n  _removeEventListeners() {\n    this.toggleEl.removeEventListener('mouseover', this._onMouseoverBound);\n    this.toggleEl.removeEventListener('mouseout', this._onMouseoutBound);\n    this.toggleEl.removeEventListener('focus', this._onFocusBound);\n    this.toggleEl.removeEventListener('blur', this._onBlurBound);\n  }\n\n\n  /**\n   * Add window listeners.\n   */\n  _addWindowEventListeners() {\n    window.addEventListener('mouseover', this._onWindowMouseoverBound);\n  }\n\n\n  /**\n   * Remove window listeners.\n   */\n  _removeWindowEventListeners() {\n    window.removeEventListener('mouseover', this._onWindowMouseoverBound);\n  }\n\n\n  /**\n   * Create a content element.\n   * @return {Element}\n   */\n  _createContentEl() {\n    return makeElement('<div class=\"spark-tooltip__content\"></div>');\n  }\n\n\n  /**\n   * Create the caret element.\n   * @return {Element}\n   */\n  _createCaretEl() {\n    return makeElement('<div class=\"spark-tooltip__caret\"></div>');\n  }\n\n\n  /**\n   * Open the tooltip on mouseover.\n   */\n  _onMouseover() {\n    this._addWindowEventListeners();\n    this.open();\n  }\n\n\n  /**\n   * Close the tooltip on mouseout.\n   */\n  _onMouseout() {\n    this._removeWindowEventListeners();\n    this.close();\n  }\n\n\n  /**\n   * Open the tooltip on focus.\n   */\n  _onFocus() {\n    this._addWindowEventListeners();\n    this.open();\n  }\n\n\n  /**\n   * Close the tooltip on blur.\n   */\n  _onBlur() {\n    this._removeWindowEventListeners();\n    this.close();\n  }\n\n\n  /**\n   * Close the tooltip if we mouse over another element.\n   * @param {Object} e\n   */\n  _onWindowMouseover(e) {\n    if (e.target === this.el || hasParent(e.target, this.el)) return;\n    this._onMouseout();\n  }\n}\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nTooltip.prototype._whitelistedParams = ['anchorY', 'anchorX', 'contentEl', 'toggleEl'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nTooltip.prototype.defaults = {\n  el: null,\n  toggleEl: null,\n  contentEl: null,\n  caretEl: null,\n  isActive: false,\n  affix: null,\n  anchorY: null,\n  anchorX: null,\n  _onMouseoverBound: null,\n  _onMouseoutBound: null,\n  _onFocusBound: null,\n  _onBlurBound: null,\n  _onWindowMouseoverBound: null\n};\n\nexport default Tooltip;\n"]}