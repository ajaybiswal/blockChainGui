{"version":3,"sources":["helpers/dom/parse-attribute.js"],"names":["boolean","el","name","def","val","getAttribute","number","parseInt","string"],"mappings":";;;;;AAAA;;;;;;;;AAQA;;;;;;;;AAQA,SAASA,OAAT,CAAiBC,EAAjB,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIC,MAAMH,GAAGI,YAAH,CAAgBH,IAAhB,CAAV;AACA,MAAIE,QAAQ,IAAZ,EAAkB,OAAOD,GAAP;AAClB,SAAOC,QAAQ,MAAR,IAAkBA,QAAQ,EAA1B,GAA+B,IAA/B,GAAsC,KAA7C;AACD;;AAGD;;;;;;;;AAQA,SAASE,MAAT,CAAgBL,EAAhB,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAIC,MAAMH,GAAGI,YAAH,CAAgBH,IAAhB,CAAV;AACA,MAAIE,QAAQ,IAAZ,EAAkB,OAAOD,GAAP;AAClB,SAAOI,SAASH,GAAT,EAAc,EAAd,CAAP;AACD;;AAGD;;;;;;;;AAQA,SAASI,MAAT,CAAgBP,EAAhB,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAIC,MAAMH,GAAGI,YAAH,CAAgBH,IAAhB,CAAV;AACA,MAAIE,QAAQ,IAAZ,EAAkB,OAAOD,GAAP;AAClB,SAAOC,GAAP;AACD;;QAEOJ,O,GAAAA,O;QAASM,M,GAAAA,M;QAAQE,M,GAAAA,M","file":"parse-attribute.js","sourcesContent":["/**\n * # Parse DOM attributes\n * Given an element and an attribute name, parse that attribute\n * if it exists or return a default.\n *\n * @module helpers/dom/parse-attribute.js\n */\n\n/**\n * Get the boolean value of an attribute on an element,\n * falling back to the default value.\n * @param  {Element} el\n * @param  {String} name\n * @param  {Boolean} def\n * @return {Boolean}\n */\nfunction boolean(el, name, def) {\n  var val = el.getAttribute(name);\n  if (val === null) return def;\n  return val === 'true' || val === '' ? true : false;\n}\n\n\n/**\n * Get the numeric value of an attribute on an element,\n * falling back to the default value.\n * @param  {Element} el\n * @param  {String} name\n * @param  {Boolean} def\n * @return {Boolean}\n */\nfunction number(el, name, def) {\n  var val = el.getAttribute(name);\n  if (val === null) return def;\n  return parseInt(val, 10);\n}\n\n\n/**\n * Get the boolean value of an attribute on an element,\n * falling back to the default value.\n * @param  {Element} el\n * @param  {String} name\n * @param  {Boolean} def\n * @return {Boolean}\n */\nfunction string(el, name, def) {\n  var val = el.getAttribute(name);\n  if (val === null) return def;\n  return val;\n}\n\nexport {boolean, number, string};\n"]}