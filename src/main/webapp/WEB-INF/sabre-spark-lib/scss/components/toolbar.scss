////
/// ## Toolbar
/// A Toolbar control
/// @group components/toolbar
////


/// Toolbar
.spark-toolbar {
  //hide the component until we finish intialization
  visibility: hidden;
  position: relative;
  display: flex;
  height: 3rem;
  //init finished, show component
  &.ready {
    visibility: visible;
  }
  &.recalc {
    .spark-toolbar__container--hidden {
      display: block;
      visibility: hidden;
    }
  }
  &:not(.ready) {
    .spark-toolbar__item {
      width: auto;
      //display dropdowns before ready so other elements can initalize
      .spark-toolbar__item--content {
        display: block;
      }
      //cause swap icons to be preloaded by browser so they aren't loaded the first time the user clicks an item
      .spark-toolbar__item-helper {
        &::before {
          font-family: $icon__font-family--fill !important;
        }
      }
    }
  }
  //some additional padding helps make the dropdowns look nicer (optional to use this class on content)
  .spark-toolbar__item--content__container {
    padding: 2rem 1rem;
  }
  &.spark-toolbar--icon {
    .spark-toolbar__container--visible {
      //hide the text label when we're in icon-mode
      .spark-toolbar__item {
        &::before {
          display: none;
        }
        &:active {
          //set active fade on buttons that have an icon
          .spark-toolbar__item-helper {
            &, &[class^='spark-icon'] {
              background: $spark-toolbar-active-background;
              color: $spark-toolbar-active-color;
            }
          }
        }
        .spark-toolbar__item-helper {
          &::before {
            display: block;
          }
        }
        //make space for dropdown arrow indicator
        .spark-toolbar__item--content ~ .spark-toolbar__item-helper {
          width: 4.5rem;
        }
      }
    }
  }
  &:not(.spark-toolbar--icon) {
    .spark-toolbar__container--visible {
      //hide icon when not in icon-mode
      .spark-toolbar__item-helper {
        &, &[class^='spark-icon'] {
          width: 0;
          padding: 0;
        }
      }
      //if we have content, make space for dropdown arrow
      .spark-toolbar__item--content ~ .spark-toolbar__item-helper {
        padding: .5rem;
      }
    }
  }
  .spark-toolbar__item {
    &.open {
      //swap in filled icons when open
      .spark-toolbar__item-helper {
        &::before {
          font-family: $icon__font-family--fill !important;
        }
      }
    }
    &.open, &:active {
      //change colors when a toolbar item is selected
      .spark-toolbar__item--content ~ .spark-toolbar__item-helper {
        background: $spark-toolbar-active-background;
        &:hover {
          &::before, &::after {
            color: $spark-toolbar-active-hover-color;
            border-top-color: $spark-toolbar-active-hover-color !important;
          }
        }
        &::before, &::after {
          color: $spark-toolbar-active-color;
          border-top-color: $spark-toolbar-active-color !important;
        }
      }
    }
  }
  .spark-toolbar__container--hidden {
    .spark-toolbar__item--content ~ .spark-toolbar__item-helper {
      //size buttons in hidden dropdown when they have icons
      &[class^='spark-icon'] {
        width: 4.5rem;
      }
    }
  }
  .spark-toolbar__show-more {
    //hide show more button by default
    display: none;
    //this is the arrow element for the show-more dropdown that points back to the show-more button
    &::before {
      content: '';
      position: absolute;
      right: 1rem;
      top: calc(100% + .5rem);
      display: none;
      width: 1rem;
      height: 1rem;
      border-width: 1px 0 0 1px;
      border-style: solid;
      border-color: $spark-toolbar-dropdown-border-hidden;
      background: $spark-toolbar-dropdown-background;
      z-index: 11;
      transform: rotate(45deg) translate(.25rem, .25rem);
      opacity: 0;
      transition: opacity 100ms ease-in-out, transform 100ms ease-in-out;
    }
  }

  &.show-more {
    //make space for the show-more button
    .spark-toolbar__container--visible {
      width: calc(100% - 3rem);
    }
    //now show the show-more button as we have items hidden
    .spark-toolbar__show-more {
      display: inline-block;
      width: 3rem;
      line-height: 1rem;
      text-align: center;
      padding: 1rem 0;
      cursor: pointer;
      background: $spark-toolbar-background;
      color: $spark-toolbar-color;
      border-radius: $spark-toolbar-dropdown-border-radius;
      i {
        vertical-align: baseline;
        line-height: 1rem;
      }
      &:hover {
        background: $spark-toolbar-hover-background;
        outline: 0 none;
      }
      &:focus {
        outline: 0 none;
      }
    }
    &.open {
      //swap the look of the show-more button when its activated
      .spark-toolbar__show-more {
        background: $spark-toolbar-active-background;
        color: $spark-toolbar-active-color;
        &::before {
          display: block;
        }
        i {
          &::before {
            font-family: $icon__font-family--fill !important;
          }
        }
      }
    }
    //perform same animation on dropdown arrow as dropdown
    &.animate {
      .spark-toolbar__show-more {
        &::before {
          transform: rotate(45deg);
          opacity: 1;
        }
      }
    }
  }
  //default styling for an item
  .spark-toolbar__item {
    position: relative;
    flex-shrink: 0;
    display: inline-flex;
    background: $spark-toolbar-background;
    @include fontsize(zeta);
    @include useFont($spark-toolbar-label-font-family, $spark-toolbar-label-font-weight, normal);
    line-height: 1rem;
    color: $spark-toolbar-color;
    transition: color 100ms ease-in-out, background-color 100ms ease-in-out;
    cursor: pointer;
    border-radius: .25rem;
    &:hover, &:focus {
      outline: 0 none;
      background: $spark-toolbar-hover-background;
      .spark-toolbar__item-helper {
        background: $spark-toolbar-hover-background;
      }
    }
    //this is the text-label for an item
    &::before {
      padding: 1rem;
      content: attr(label);
      text-transform: uppercase;
      display: inline-block;
      @include fontsize(zeta);
      @include useFont($spark-toolbar-label-font-family, $spark-toolbar-label-font-weight, normal);
      white-space: nowrap;
    }
    //this is the dropdown arrow indicating which item is open
    &::after {
      position: absolute;
      top: calc(100% + .5rem);
      content: '';
      left: calc(50% - .5rem);
      width: 1rem;
      height: 1rem;
      border-top: $spark-toolbar-dropdown-border;
      border-left: $spark-toolbar-dropdown-border;
      background: $spark-toolbar-dropdown-background;
      transform: rotate(45deg);
      display: none;
      transition: opacity 100ms ease-in-out, transform 100ms ease-in-out;
      z-index: 11;
    }
    &.open {
      //when displaying the dropdown, also display the arrow
      &::after {
        opacity: 0;
        transform: rotate(45deg) translate(.25rem, .25rem);
        display: block;
      }
      //display the dropdown, initalize with a transform, then animate away
      .spark-toolbar__item--content {
        display: block;
        transform: translate(0, .5rem);
        opacity: 0;
        @include useFont($spark-toolbar-label-font-family, $spark-toolbar-dropdown-font-weight);
      }
      //applied next tick to animate content
      &.animate {
        .spark-toolbar__item--content {
          transform: none;
          opacity: 1;
        }
        &::after {
          opacity: 1;
          transform: rotate(45deg);
        }
      }
    }
    //active and open styling when items are clicked or open
    &.open, &:active {
      background: $spark-toolbar-active-background;
      color: $spark-toolbar-active-color;
    }
    //list styling for inside dropdown
    .spark-toolbar__list {
      padding: 1rem 0;
      margin: 0;
      overflow: hidden;
      @include fontsize(eta);
      //apply a border to separate multiple lists
      + .spark-toolbar__list {
        border-top: $spark-toolbar-dropdown-border;
      }
      li {
        list-style: none;
        padding: 1rem 2rem;
        text-indent: 0;
        line-height: 1rem;
        &:hover, &:focus {
          background: $spark-toolbar-item-hover-background;
          outline: 0 none;
        }
      }
      //styling tweaks for checkbox lists to create full-size hitbox
      &.spark-toolbar__list--checkboxes {
        li {
          padding: 0;
          position: relative;
          &:hover, &:focus {
            background: inherit;
          }
          label {
            width: 100%;
            display: block;
            cursor: pointer;
            word-wrap: break-word;
            line-height: 1.5rem;
            .spark-toolbar__list--checkboxes--helper {
              position: absolute;
              left: 1rem;
              top: calc(50% - 5px);
              &::before {
                visibility: hidden;
                display: block;
                content: 'ï„¡';
                font-family: $icon__font-family--line;
                font-size: 14px;
                line-height: 10px;
                color: $spark-toolbar-color;
                padding-right: .5rem;
              }
            }
            .spark-toolbar__list--checkboxes--content {
              padding: 1rem 2rem 1rem 3rem;
              display: block;
            }
            &:hover {
              background: $spark-toolbar-item-hover-background;
            }
            input {
              //hide the actual checkbox
              opacity: 0;
              width: 0;
              height: 0;
              display: block;
              margin: 0;
              &:focus ~ .spark-toolbar__list--checkboxes--content {
                background: $spark-toolbar-item-hover-background;
              }
              &:checked {
                ~ .spark-toolbar__list--checkboxes--helper::before {
                  visibility: visible;
                }
              }
            }
          }
        }
      }
    }
    //setup the icon-button for an item
    .spark-toolbar__item-helper {
      height: 3rem;
      display: flex;
      align-items: center;
      background: $spark-toolbar-background;
      transition: color 100ms ease-in-out, background-color 100ms ease-in-out;
      border-radius: .25rem;
      font-size: 2rem;
      //if we don't have an icon size for just the dropdown arrow
      &:not([class^='spark-icon']) {
        &::before {
          content: '';
          right: calc(50% - 1.33rem/2);
        }
        //override icon-button arrow positioning if we don't have an icon
        &::after {
          right: .5rem;
        }
      }
      //if we do have an icon to display pad less
      &[class^='spark-icon'] {
        padding: .5rem;
      }
      //don't show anything if we don't have an icon
      &::before {
        display: none;
      }
      //position icon-button arrow
      &::after {
        top: calc(50% - .5rem/2);
        right: .5rem;
      }
    }
    //if we have content to display then show the helper
    .spark-toolbar__item--content ~ .spark-toolbar__item-helper {
      padding: .5rem;
      &::after {
        border-color: transparent;
        border-style: solid;
        border-top-color: $spark-toolbar-color;
        border-width: .5rem;
        border-top-width: .5rem;
        content: '';
        display: inline-block;
        position: absolute;
        transition: border-color 100ms ease-in-out;
      }
    }
    //apply some colors, and inset shadowing for dropdowns
    .spark-toolbar__item--content {
      display: none;
      position: absolute;
      top: calc(100% + 1rem);
      left: calc(50% - 12rem);
      width: 24rem;
      max-width: calc(100vw - 2rem);
      background: $spark-toolbar-dropdown-background;
      color: $spark-toolbar-dropdown-color;
      transition: transform 100ms ease-in-out, opacity 100ms ease-in-out;
      border: $spark-toolbar-dropdown-border;
      border-radius: $spark-toolbar-dropdown-border-radius;
      box-shadow: $spark-toolbar-dropdown-box-shadow;
      order: 1;
      z-index: 10;
    }
  }
  //layout the visible item
  .spark-toolbar__container--visible {
    display: flex;
    width: 100%;
    justify-content: flex-end;
    //when small-down collapse all items into the show-more dropdown
    @include media-breakpoint-down(sm) {
      visibility: hidden;
    }
  }
  //required to make safari measure components correctly
  &.measured {
    .spark-toolbar__container--visible {
      @include media-breakpoint-down(sm) {
        width: 0 !important;
      }
    }
  }
  //apply some styling to have same dropdown look for the show-more area
  .spark-toolbar__container--hidden {
    display: none;
    border-radius: $spark-toolbar-dropdown-border-radius;
    border: $spark-toolbar-dropdown-border;
    box-shadow: $spark-toolbar-dropdown-box-shadow;
    z-index: 7;
    transform: translate(0, .5rem);
    opacity: 0;
    transition: transform 100ms ease-in-out, opacity 100ms ease-in-out;
    padding: 1rem 0;
    background: $spark-toolbar-dropdown-background;
    //reflow items to have icon button displayed inline, with content flowed below
    .spark-toolbar__item {
      width: 24rem;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      border-radius: 0;
      max-width: calc(100vw - 2rem);
      //pressed styling
      &:active {
        background: $spark-toolbar-background;
        color: $spark-toolbar-color;
        //don't flicker the button color and background when you are not opening a dropdown
        .spark-toolbar__item-helper {
          background: $spark-toolbar-background;
          color: $spark-toolbar-color;
        }
        //if we have a dropdown actually change the active colors
        .spark-toolbar__item--content ~ .spark-toolbar__item-helper {
          background: $spark-toolbar-active-background;
          color: $spark-toolbar-active-color;
        }
      }
      //styling for icon-button
      .spark-toolbar__item-helper {
        border-radius: 0;
        align-self: center;
        &::before {
          display: block;
        }
        //if we don't have an icon and just a dropdown arrow
        &:not([class^='spark-icon']) {
          width: 3rem;
          margin-left: 2rem;
          &::after {
            right: 1rem;
          }
        }
      }
      //this has to be in pixels because IE doesn't understand rem line-height in ::before
      &::before {
        line-height: 24px;
      }
      &::after {
        display: none;
      }
    }
    //change position to static for visible content so that it actually grows the show-more dropdown area
    //also apply some coloring, background, and an inset shadow style
    .spark-toolbar__item--content {
      position: static;
      border-color: $spark-toolbar-dropdown-border-hidden;
      border-width: 1px 0 1px 0;
      background: $spark-toolbar-dropdown-background-hidden;
      border-radius: 0;
      box-shadow: inset 0px -20px 18px -20px $spark-toolbar-dropdown-border-hidden, inset 0px 20px 18px -20px $spark-toolbar-dropdown-border-hidden;
    }
    //don't show tooltips for items in the show-more container
    [class^='spark-tooltip__content'] {
      display: none;
    }
  }
  &.open {
    //animate the dropdowns for items in the show-more dropdown
    &.animate {
      .spark-toolbar__container--hidden {
        transform: none;
        opacity: 1;
      }
    }
    //styling for the show-more dropdown
    .spark-toolbar__container--hidden {
      display: flex;
      flex-direction: column;
      position: absolute;
      top: calc(100% + 1rem);
      right: 0;
      //round the corners of the first and last show-more dropdown items, as overflow:hidden on the show-more dropdown is not an option
      .spark-toolbar__item {
        //open styling
        &.open {
          background: $spark-toolbar-background;
          color: $spark-toolbar-color;
        }
        //reposition the helper to fit and apply rounding
        .spark-toolbar__item-helper {
          position: relative;
          border-radius: .25rem;
        }
        //force word wrapping for items in the show-more container (word wrap disabled for items in visible container)
        &::before {
          word-wrap: break-word;
          white-space: normal;
          width: calc(100% - 8.5rem);
          padding-left: 2rem;
        }
      }
    }
  }
}
