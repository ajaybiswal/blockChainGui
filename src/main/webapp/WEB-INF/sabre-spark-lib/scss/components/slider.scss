////
/// ## Slider
/// @group components/slider
////


/// Sliders without a visible input
.spark-slider,
.spark-slider--integrated {
  position: relative;

  // Hide the input
  input {
    opacity: 0;
    position: absolute;
    visibility: hidden;
  }
}

/// Any kind of slider
.spark-slider,
.spark-slider--integrated,
.spark-slider--input,
.spark-range-slider {

  // When the container has a state, show it below.
  &[data-error],
  &[data-info],
  &[data-warning],
  &[data-success] {
    .spark-slider__message {
      display: block;
    }
  }

  // When the container has an error state, show it below.
  &[data-error] {
    .spark-slider__message {
      color: $message--error__message__background-color;
    }

    .spark-slider__handle {
      background-color: $slider--error__handle__background-color;
      border-color: $slider--error__handle__border-color;
      box-shadow: $slider--error__handle__box-shadow;

      &:focus,
      &:focus:hover {
        box-shadow: $slider--error--focus__box-shadow;
      }
    }

    .spark-slider__track-fill {
      background-color: $slider--error__track__background-color;
      border-color: $slider--error__track__border-color;
    }

    input {
      border-color: $slider--error__input__border-color;
    }
  }

  // When the container has an warning state, show it below.
  &[data-warning] {
    .spark-slider__message {
      color: $message--warning__message__background-color;
    }
  }

  // When the container has an success state, show it below.
  &[data-success] {
    .spark-slider__message {
      color: $message--success__message__background-color;
    }
  }

  // When the container has an info state, show it below.
  &[data-info] {
    .spark-slider__message {
      color: $message--info__message__background-color;
    }
  }

  // Not in an error state
  &:not([data-error]):not(.spark-slider--integrated):not(.spark-slider--secondary) {
    .spark-slider__handle {

      // Hover background and border color
      &:hover {
        background-color: $slider--hover__handle__background-color;
        border: $slider--hover__handle__border;
        box-shadow: $slider--hover__handle__box-shadow;
        color: $slider--hover__handle__color;
      }

      // Change color on active
      &:focus,
      &:focus:hover,
      &:active,
      &:active:hover,
      &.active {
        background-color: $slider--active__handle__background-color;
        border: $slider--active__handle__border;
        box-shadow: $slider--active__handle__box-shadow;
        color: $slider--active__handle__color;
      }

      &:focus,
      &:focus:hover {
        box-shadow:$slider--default--focus__box-shadow;
      }
    }
  }
}

/// Holds any state messaging
.spark-slider__message {
  @extend %input-message-reversed;
  order: 10;
}

/// Slider container with the big handle
.spark-slider--integrated {

  // Special inset shadow for the handle
  .spark-slider__handle {
    border-radius: 2rem;
    bottom: 0;
    box-shadow: $slider__handle__box-shadow;
    height: 4rem;
    margin-left: -2rem;
    margin-top: -2rem;
    overflow: hidden;
    top: auto;
    width: 4rem;

    // Show value in the handle
    &::before {
      content:  attr(data-prefix) '' attr(data-value);
      position: relative;
      text-align: center;
      transform: none;
      transition: transform 100ms $ease-in-out-quint;
      width: 100%;
      z-index: 5;
    }

    // Disc to show when we're active
    &::after {
      background-color: $slider--active__handle__disc__background-color;
      border-radius: 2rem;
      content: '';
      height: 4rem;
      left: 0;
      margin: -1px;
      opacity: 0;
      position: absolute;
      top: 3.5rem;
      transition: opacity 100ms $ease-in-out-quint;
      width: 4rem;
      z-index: 0;
    }

    // Grow the handle when we're focused or active
    &:focus,
    &:active,
    &.active {
      height: 7.5rem;

      &::before {
        transform: translateY(-1.75rem);
      }

      &::after {
        opacity: 1;
      }
    }
  }

  // Error styles
  &[data-error] {
    .spark-slider__handle::after {
      background-color: $slider--error__handle__border-color;
    }
  }

  // Non-error styles
  &:not([data-error]) {
    .spark-slider__handle {
      &:hover {
        box-shadow: $slider--integrated--hover__handle__box-shadow;
      }

      // Grow the handle when we're focused or active
      &:focus,
      &:active,
      &.active {
        border: $slider--active__handle__border;
        box-shadow: $slider--integrated--active__handle__box-shadow;
        height: 7.5rem;

        &::before {
          transform: translateY(-1.75rem);
        }

        &::after {
          opacity: 1;
        }
      }
    }
  }

  // Stop the handle from popping up when the input is disabled.
  input:disabled ~ .spark-slider__controls .spark-slider__handle {
    &:focus,
    &:active,
    &.active {
      height: 4rem;
      transform: none;

      &::before {
        transform: none;
      }

      &::after {
        opacity: 0;
      }
    }
  }
}

/// Disabled state on all versions of the slider.
.spark-slider,
.spark-slider:not([data-error]):not(.spark-slider--integrated):not(.spark-slider--secondary),
.spark-slider--integrated,
.spark-slider--input,
.spark-slider--input:not([data-error]):not(.spark-slider--integrated):not(.spark-slider--secondary) {

  // Gray out the handle and track
  input:disabled,
  input:disabled ~ .spark-slider__controls .spark-slider__handle,
  input:disabled ~ .spark-slider__controls .spark-slider__handle:hover,
  input:disabled ~ .spark-slider__controls .spark-slider__handle:focus,
  input:disabled ~ .spark-slider__controls .spark-slider__handle:active,
  input:disabled ~ .spark-slider__controls .spark-slider__handle:hover:active,
  input:disabled ~ .spark-slider__controls .spark-slider__handle:hover:focus,
  input:disabled ~ .spark-slider__controls .spark-slider__track::before {
    background-color: $slider--disabled__track__background-color;
    border: $slider--disabled__track__border;
    box-shadow: none;
    color: $slider--disabled__color;
    cursor: not-allowed;
  }

  // Don't show the track filling
  input:disabled ~ .spark-slider__controls .spark-slider__track-fill {
    display: none;
  }
}

/// Sliders with a visible input and the range slider
.spark-slider,
.spark-slider--input,
.spark-range-slider {
  position: relative;

  // Number input that is on the right of a regular slider and beneath on the range slider
  input {
    -moz-appearance: textfield;
    background-color: $input__background-color;
    border: $input__border;
    border-radius: $input__border-radius;
    color: $input__color;;
    @include fontsize(zeta);
    @include useFont($weight: 400);
    text-align: center;
    transition: all 100ms $ease-in-out-quint;

    // Remove the increment and decrement UI
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    &:focus {
      background-color: $input--active__background-color;
      outline: 0;
    }
  }

  &:not([data-error]) {
    input {
      &:focus {
        border: $input--active__border;
      }
    }
  }

  // Make the controls a little taller than default
  .spark-slider__controls {
    height: 3rem;
  }

  // Handles are smaller
  .spark-slider__handle {

    // Don't show the extra nubbin
    &::after {
      display: none;
    }

    // Don't raise up when active
    &:focus,
    &:active,
    &.active {
      &::before {
        transform: none;
      }
    }
  }
}

/// Slider with a number input
.spark-slider--input {
  display: flex;
  flex-flow: wrap;

  // The input has to come before the other elements so our :disabled ~ selectors work,
  // but it needs to appear after so we take advantage of flexbox.
  input {
    flex-grow: 1;
    order: 2;
    width: 0;
  }

  // If there is a label, it needs to take up the entire line by itself
  label,
  .spark-label {
    flex-basis: 100%;
  }

  // Make the controls 4x as big as the input.
  .spark-slider__controls {
    flex-grow: 4;
    margin-right: 2rem;
    order: 1;
  }

  // When the slider is active, gray out the input
  &:not([data-error]).active {
    input {
      border: $input--active__border;
    }
  }

  // When the slider is active, gray out the input
  &.active {
    input {
      background-color: $input--active__background-color;
    }
  }
}

/// A range of sliders
.spark-range-slider {
  display: flex;
  flex-flow: row wrap;

  // Have to specify the input height because they're now on their own
  // line and don't get the height of the slider__controls.
  input {
    flex-grow: 4;
    height: 3rem;
    order: 4;
    width: 0;
  }

  // Set width to 100% so the inputs get pushed to a new line
  .spark-slider__controls {
    margin-bottom: 1rem;
    order: 1;
    width: 100%;
  }

  // Divider that goes between input elements.
  .spark-range-slider__input-divider {
    align-items: center;
    display: inline-block;
    flex-grow: 1;
    @include useFont($weight: 400);
    line-height: 3rem;
    order: 4;
    text-align: center;

    &::before {
      content: 'â€”';
    }
  }

  // Kind of a hacky solution for styling the active state
  // on an input when the handle is moving. This assumes there
  // will never be more than 5 items on a track.
  &[data-active-index='0'] input:nth-of-type(1),
  &[data-active-index='1'] input:nth-of-type(2),
  &[data-active-index='2'] input:nth-of-type(3),
  &[data-active-index='3'] input:nth-of-type(4),
  &[data-active-index='4'] input:nth-of-type(5) {
    background-color: $input--active__background-color;
    border: $input--active__border;
  }

  // If all the inputs are disabled
  &.all-disabled {

    // Gray out the track
    .spark-slider__controls .spark-slider__track::before {
      background-color: $input--disabled__background-color;
      border: $input--disabled__border;
      box-shadow: none;
      color: $input--disabled__color;
      cursor: not-allowed;
    }

    // Hide the track fill
    .spark-slider__controls .spark-slider__track-fill {
      display: none;
    }
  }

  // Gray out the handles and inputs
  input:disabled,
  .spark-slider__handle.disabled,
  .spark-slider__handle.disabled:hover,
  .spark-slider__handle.disabled:focus,
  .spark-slider__handle.disabled:active,
  .spark-slider__handle.disabled:hover:active,
  .spark-slider__handle.disabled:hover:focus,
  &:not([data-error]):not(.spark-slider--integrated):not(.spark-slider--secondary) .spark-slider__handle.disabled {
    background-color: $input--disabled__background-color;
    border: $input--disabled__border;
    box-shadow: none;
    color: $input--disabled__color;
    cursor: not-allowed;
  }
}

/// The handle(s) and track
.spark-slider__controls {
  height: 4rem;
  position: relative;
}

/// Handle for the slider
.spark-slider__handle {
  align-items: center;
  background-color: $slider__handle__background-color;
  border: $slider__handle__border;
  border-radius: 1rem;
  box-orient: vertical;
  box-shadow: $slider__handle__box-shadow;
  color: $slider__handle__color;
  cursor: pointer;
  display: flex;
  @include fontsize(zeta);
  @include useFont($weight: 400);
  height: 2rem;
  justify-content: center;
  margin-left: -1rem;
  margin-top: -1rem;
  padding: 0;
  position: absolute;
  top: 50%;
  transform-origin: center bottom;
  transition-duration: 100ms;
  transition-property: background-color, border, box-shadow, color, transform, height, border-radius;
  transition-timing-function: $ease-in-out-quint;
  width: 2rem;
  z-index: 5;

  // Remove outline because the handle is a button.
  // @todo this should have some kind of different styling most likely.
  &:focus {
    outline: 0;
  }
}

/// Track
.spark-slider__track {
  border-radius: .75rem;
  content: '';
  cursor: pointer;
  display: inline-block;
  height: .5rem;
  left: 0;
  margin-top: -.25em;
  overflow: hidden;
  position: absolute;
  top: 50%;
  transition: all 100ms $ease-in-out-quint;
  width: 100%;
  z-index: 0;
}

/// Common rules for the track and the fill
.spark-slider__track::before,
.spark-slider__track-fill {
  box-sizing: border-box;
  content: '';
  display: inline-block;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
}

/// The gray base of the track
.spark-slider__track::before {
  background-color: $slider__track__background-color;
  border: $slider__track__border;
  border-radius: .75rem;
  width: 100%;
}

/// The colored part of the track
.spark-slider__track-fill {
  background-color: $slider__track-fill__background-color;
  border: $slider__track-fill__border;
  border-radius: .75rem 0 0 .75rem;
  width: 0;
}

/// Secondary slider styles
.spark-slider--secondary {

  // Handle for the slider
  .spark-slider__handle {
    background-color: $slider--secondary__handle__background-color;
    border: $slider--secondary__handle__border;
    box-shadow: $slider--secondary__handle__box-shadow;
    color: $slider--secondary__handle__color;

    // Hover background and border color
    &:hover {
      background-color: $slider--secondary--hover__handle__background-color;
      border: $slider--secondary--hover__handle__border;
      box-shadow: $slider--secondary--hover__handle__box-shadow;
      color: $slider--secondary--hover__handle__color;
    }

    // Change color on active
    &:focus,
    &:focus:hover,
    &:active,
    &:active:hover,
    &.active {
      background-color: $slider--secondary--active__handle__background-color;
      border: $slider--secondary--active__handle__border;
      box-shadow: $slider--secondary--active__handle__box-shadow;
      color: $slider--secondary--active__handle__color;
    }
  }

  // The gray base of the track
  .spark-slider__track::before {
    background-color: $slider--secondary__track__background-color;
    border: $slider--secondary__track__border;
  }

  // The colored part of the track
  .spark-slider__track-fill {
    background-color: $slider--secondary__track-fill__background-color;
    border: $slider--secondary__track-fill__border;
  }

  // Integrated value style
  &.spark-slider--integrated {

    // Special inset shadow for the handle
    .spark-slider__handle {
      box-shadow: $slider--secondary__handle__box-shadow;

      // Disc to show when we're active
      &::after {
        background-color: $slider--secondary--active__handle__disc__background-color;
      }

      // Hover border color
      &:hover {
        box-shadow: $slider--secondary__hover__handle__box-shadow;
      }

      // Grow the handle
      &:focus,
      &:active,
      &.active {
        background-color: $slider--secondary__handle__background-color;
        border: $slider--secondary--active__handle__border;
        box-shadow: $slider--secondary--active__handle__box-shadow;
      }
    }

    // When the container has an error state, show it below.
    &[data-error] {
      .spark-slider__handle {
        background-color: $slider--secondary__handle__background-color;
        border-color: $slider--error__handle__border-color;
        box-shadow: $slider--error__handle__box-shadow;
        color: $slider--error__handle__border-color;

        &:focus,
        &:focus:hover {
          box-shadow: $slider--error--focus__box-shadow;
        }
      }
    }
  }
}

/// Slider label
.spark-slider,
.spark-slider--input,
.spark-slider--integrated,
.spark-slider--secondary,
.spark-range-slider {
  margin-bottom: 1rem;

  label,
  .spark-label {
    color: $slider__label__color;
    @include fontsize($slider__label__font-size);
    @include useFont($weight: $slider__label__font-weight);
    line-height: 2rem;
    padding-bottom: 1rem;
  }
}

// Remove the padding from the label for range and input slider
.spark-range-slider,
.spark-slider--input,
.spark-range-slider + .spark-slider--secondary,
.spark-slider--input + .spark-slider--secondary {

  label,
  .spark-label {
   padding-bottom: 0px;
 }
}
