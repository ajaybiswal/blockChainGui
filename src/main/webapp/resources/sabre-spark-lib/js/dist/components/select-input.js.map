{"version":3,"sources":["components/select-input.js"],"names":["noop","SelectInput","el","params","elRequired","_bindEventListenerCallbacks","_addEventListeners","getValue","selectEl","value","setValue","val","i","len","children","length","selected","_updateClass","onChange","clearValue","setOptions","opts","str","curIndex","selectedIndex","undefined","text","innerHTML","Math","min","setLabel","labelEl","disable","setAttribute","enable","removeAttribute","_cacheElements","querySelector","messageEl","Error","_onFocusBound","_onFocus","bind","_onBlurBound","_onBlur","_onInputBound","_onInput","addEventListener","_removeEventListeners","removeEventListener","hasValue","isActive","onFocus","onBlur","previousValue","prototype","_whitelistedParams","defaults"],"mappings":"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","file":"select-input.js","sourcesContent":["/**\n * # SelectInput\n * A select input container.\n *\n * @example\n * new SelectInput(el);\n *\n * @module components/select-input.js\n */\nimport BaseComponent from './base';\nimport toggleClass from '../helpers/dom/toggle-class';\nimport mixin from '../helpers/util/mixin';\nimport messaging from '../mixins/messaging';\nimport validation from '../mixins/validation';\nimport makeElement from '../helpers/dom/make-element';\n\nconst noop = function() {};\n\nclass SelectInput extends BaseComponent {\n\n  /**\n   * SelectInput constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  constructor(el, params = {}) {\n\n    params.elRequired = true;\n\n    if (!super(el, params)) {\n      return;\n    }\n\n    this._bindEventListenerCallbacks();\n    this._addEventListeners();\n  }\n\n\n  /**\n   * Get the value.\n   * @return {String}\n   */\n  getValue() {\n    return this.selectEl.value;\n  }\n\n\n  /**\n   * Set the value.\n   * @param {String|Number} val\n   */\n  setValue(val) {\n\n    // Cast to a string for comparison\n    val = val + '';\n\n    var i = 0;\n    var len = this.selectEl.children.length;\n\n    for (; i < len; i++) {\n      if (this.selectEl.children[i].value === val) {\n        this.selectEl.children[i].selected = true;\n        this._updateClass();\n        (this.onChange || noop)(val, this);\n        return this;\n      }\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Clear the selected value.\n   */\n  clearValue() {\n\n    var i = 0;\n    var len = this.selectEl.children.length;\n\n    for (; i < len; i++) {\n      if (this.selectEl.children[i].selected === true) {\n        this.selectEl.children[i].selected = false;\n        this._updateClass();\n        (this.onChange || noop)('', this);\n        return this;\n      }\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Set the options.\n   * @param {Array} opts\n   */\n  setOptions(opts) {\n\n    var i = 0;\n    var len = opts.length;\n    var str = '';\n\n    // Store the index of the currently selected option so we can set\n    // it when we're all done.\n    var curIndex = this.selectEl.selectedIndex;\n\n    for (; i < len; i++) {\n      str += '<option ' + (opts[i].value !== undefined ? 'value=\"' + (opts[i].value || '') + '\"' : '') + '>' + (opts[i].text || '') + '</option>';\n    }\n\n    this.selectEl.innerHTML = str;\n    this.selectEl.selectedIndex = Math.min(len - 1, curIndex);\n\n    return this;\n  }\n\n\n  /**\n   * Set the value of the label.\n   * @param {String} text\n   */\n  setLabel(text) {\n    if (!this.labelEl) return this;\n    this.labelEl.innerHTML = text;\n    return this;\n  }\n\n\n  /**\n   * Disable entry into the input.\n   */\n  disable() {\n    this.selectEl.setAttribute('disabled', '');\n    return this;\n  }\n\n\n  /**\n   * Enable entry into the input.\n   */\n  enable() {\n    this.selectEl.removeAttribute('disabled');\n    return this;\n  }\n\n\n  /**\n   * Store a reference to the needed elements.\n   * @param {Element} el\n   */\n  _cacheElements(el) {\n\n    this.el = el;\n    this.selectEl = this.el.querySelector('select');\n    this.labelEl = this.el.querySelector('.spark-label');\n\n    this.messageEl = this.el.querySelector('.spark-select__message') || makeElement('<span class=\"spark-select__message\"></span>');\n\n    if (!this.selectEl) {\n      throw new Error('A <select> element must be present!', this.el);\n    }\n\n    this._updateClass();\n  }\n\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n  _bindEventListenerCallbacks() {\n    this._onFocusBound = this._onFocus.bind(this);\n    this._onBlurBound = this._onBlur.bind(this);\n    this._onInputBound = this._onInput.bind(this);\n  }\n\n\n  /**\n   * Add event listeners for focus, blur and input.\n   */\n  _addEventListeners() {\n    this.selectEl.addEventListener('focus', this._onFocusBound);\n    this.selectEl.addEventListener('blur', this._onBlurBound);\n    this.selectEl.addEventListener('input', this._onInputBound);\n  }\n\n\n  /**\n   * Remove event listeners for focus, blur and input.\n   */\n  _removeEventListeners() {\n    this.selectEl.removeEventListener('focus', this._onFocusBound);\n    this.selectEl.removeEventListener('blur', this._onBlurBound);\n    this.selectEl.removeEventListener('input', this._onInputBound);\n  }\n\n\n  /**\n   * Update the active class.\n   */\n  _updateClass() {\n    this.hasValue = this.selectEl.value ? true : false;\n    toggleClass(this.el, 'has-value', this.hasValue);\n    toggleClass(this.el, 'active', this.isActive);\n  }\n\n\n  /**\n   * When the input element gains focus.\n   * @param {Object} e\n   */\n  _onFocus() {\n    this.isActive = true;\n    this._updateClass();\n    var value = this.getValue();\n    (this.onFocus || noop)(value, this);\n  }\n\n\n  /**\n   * When the input element loses focus.\n   * @param {Object} e\n   */\n  _onBlur() {\n    this.isActive = false;\n    this._updateClass();\n    var value = this.getValue();\n    (this.onBlur || noop)(value, this);\n  }\n\n\n  /**\n   * When the value is about to change, run the validation, set the characters count\n   * and resize if we're a textarea.\n   * @param {Object} e\n   */\n  _onInput() {\n\n    this._updateClass();\n\n    var value = this.getValue();\n\n    if (value !== this.previousValue) {\n      this.previousValue = value;\n      (this.onChange || noop)(value, this);\n    }\n  }\n}\n\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\nSelectInput.prototype._whitelistedParams = ['validate', 'onValidate', 'onChange', 'onFocus', 'onBlur'];\n\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nSelectInput.prototype.defaults = {\n  el: null,\n  messageEl: null,\n  selectEl: null,\n  labelEl: null,\n  hasValue: false,\n  isActive: false,\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  previousValue: null,\n  _onFocusBound: null,\n  _onBlurBound: null,\n  _onInputBound: null\n};\n\nmixin(SelectInput.prototype, messaging, validation);\n\nexport default SelectInput;\n"]}